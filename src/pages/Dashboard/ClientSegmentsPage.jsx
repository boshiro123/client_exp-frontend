import React, { useState, useEffect, useMemo } from "react"
import { useNavigate } from "react-router-dom"
import Sidebar from "../../components/common/Sidebar"
import { authService } from "../../api/auth"
import { clientSegmentsService } from "../../api/client-segments"
import "./DashboardStyles.css"

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
const getAgeGroupLabel = ageGroup => {
  const groups = {
    AGE_18_24: "18-24 –≥–æ–¥–∞",
    AGE_25_34: "25-34 –≥–æ–¥–∞",
    AGE_35_44: "35-44 –≥–æ–¥–∞",
    AGE_45_54: "45-54 –≥–æ–¥–∞",
    AGE_55_PLUS: "55+ –ª–µ—Ç",
  }
  return groups[ageGroup] || ageGroup || "‚Äî"
}

const getRegionLabel = region => {
  const regions = {
    BREST: "–ë—Ä–µ—Å—Ç—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å",
    VITEBSK: "–í–∏—Ç–µ–±—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å",
    GOMEL: "–ì–æ–º–µ–ª—å—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å",
    GRODNO: "–ì—Ä–æ–¥–Ω–µ–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å",
    MINSK_REGION: "–ú–∏–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å",
    MOGILEV: "–ú–æ–≥–∏–ª–µ–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å",
    MINSK_CITY: "–≥. –ú–∏–Ω—Å–∫",
  }
  return regions[region] || region || "‚Äî"
}

const formatDate = dateString => {
  if (!dateString) return "‚Äî"

  try {
    const date = new Date(dateString)
    return date.toLocaleDateString("ru-RU")
  } catch (e) {
    return dateString
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ –æ –≤–æ–∑—Ä–∞—Å—Ç–µ –≤ –≥—Ä—É–ø–ø—É
const mapAgeAnswerToGroup = answer => {
  if (!answer) return null

  answer = answer.toLowerCase().trim()

  // –ü—Ä—è–º–æ–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –¥–ª—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ç–æ–≤ –≤–æ–∑—Ä–∞—Å—Ç–Ω—ã—Ö –≥—Ä—É–ø–ø
  if (answer.includes("–¥–æ 18") || answer.includes("–º–µ–Ω–µ–µ 18")) {
    return "AGE_UNDER_18"
  } else if (answer.includes("18‚Äì25") || answer.includes("18-25")) {
    return "AGE_18_24"
  } else if (answer.includes("26‚Äì35") || answer.includes("26-35")) {
    return "AGE_25_34"
  } else if (answer.includes("36‚Äì45") || answer.includes("36-45")) {
    return "AGE_35_44"
  } else if (answer.includes("46‚Äì60") || answer.includes("46-60")) {
    return "AGE_45_54"
  } else if (answer.includes("60+") || answer.includes("—Å—Ç–∞—Ä—à–µ 60")) {
    return "AGE_55_PLUS"
  }

  // –ü—ã—Ç–∞–µ–º—Å—è –∏–∑–≤–ª–µ—á—å —á–∏—Å–ª–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∏–∑ –æ—Ç–≤–µ—Ç–∞
  const numMatch = answer.match(/\d+/)
  if (numMatch) {
    const age = parseInt(numMatch[0])
    if (age < 18) return "AGE_UNDER_18"
    if (age >= 18 && age <= 25) return "AGE_18_24"
    if (age >= 26 && age <= 35) return "AGE_25_34"
    if (age >= 36 && age <= 45) return "AGE_35_44"
    if (age >= 46 && age <= 60) return "AGE_45_54"
    if (age > 60) return "AGE_55_PLUS"
  }

  return null
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ –æ —Ä–µ–≥–∏–æ–Ω–µ –≤ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç
const mapRegionAnswer = answer => {
  if (!answer) return null

  answer = answer.toLowerCase().trim()

  if (answer.includes("–±—Ä–µ—Å—Ç")) {
    return "BREST"
  } else if (answer.includes("–≤–∏—Ç–µ–±—Å–∫")) {
    return "VITEBSK"
  } else if (answer.includes("–≥–æ–º–µ–ª—å")) {
    return "GOMEL"
  } else if (answer.includes("–≥—Ä–æ–¥–Ω")) {
    return "GRODNO"
  } else if (answer.includes("–º–∏–Ω—Å–∫–∞—è") && answer.includes("–æ–±–ª–∞—Å—Ç—å")) {
    return "MINSK_REGION"
  } else if (answer.includes("–º–æ–≥–∏–ª–µ–≤")) {
    return "MOGILEV"
  } else if (answer.includes("–º–∏–Ω—Å–∫") && !answer.includes("–æ–±–ª–∞—Å—Ç—å")) {
    return "MINSK_CITY"
  }

  return null
}

const ClientSegmentsPage = () => {
  const [clients, setClients] = useState([])
  const [filteredClients, setFilteredClients] = useState([])
  const [loading, setLoading] = useState(true)
  const [error, setError] = useState(null)
  const [currentUser, setCurrentUser] = useState(null)

  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–æ–≤
  const [filters, setFilters] = useState({
    ageGroup: "ALL",
    region: "ALL",
    profession: "",
  })

  // –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä—ã –≤–æ–ø—Ä–æ—Å–æ–≤ —Å–æ–≥–ª–∞—Å–Ω–æ —Ä–µ–∞–ª—å–Ω—ã–º –¥–∞–Ω–Ω—ã–º –∏–∑ –±–∞–∑—ã
  const AGE_QUESTION_ID = 16 // "–£–∫–∞–∂–∏—Ç–µ –≤–∞—à –≤–æ–∑—Ä–∞—Å—Ç"
  const REGION_QUESTION_ID = 17 // "–ò–∑ –∫–∞–∫–æ–≥–æ —Ä–µ–≥–∏–æ–Ω–∞ –ë–µ–ª–∞—Ä—É—Å–∏ –≤—ã?"
  const PROFESSION_QUESTION_ID = 18 // "–í–∞—à–∞ –ø—Ä–æ—Ñ–µ—Å—Å–∏—è –∏–ª–∏ —Å—Ñ–µ—Ä–∞ –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏"

  // –ó–∞–≥—Ä—É–∂–∞–µ–º –æ–ø—Ü–∏–∏ –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–æ–≤
  const ageGroups = [
    { value: "ALL", label: "–í—Å–µ –≤–æ–∑—Ä–∞—Å—Ç—ã" },
    { value: "AGE_UNDER_18", label: "–î–æ 18 –ª–µ—Ç" },
    { value: "AGE_18_24", label: "18‚Äì25 –ª–µ—Ç" },
    { value: "AGE_25_34", label: "26‚Äì35 –ª–µ—Ç" },
    { value: "AGE_35_44", label: "36‚Äì45 –ª–µ—Ç" },
    { value: "AGE_45_54", label: "46‚Äì60 –ª–µ—Ç" },
    { value: "AGE_55_PLUS", label: "60+ –ª–µ—Ç" },
  ]

  const regions = [
    { value: "ALL", label: "–í—Å–µ —Ä–µ–≥–∏–æ–Ω—ã" },
    { value: "BREST", label: "–ë—Ä–µ—Å—Ç—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å" },
    { value: "VITEBSK", label: "–í–∏—Ç–µ–±—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å" },
    { value: "GOMEL", label: "–ì–æ–º–µ–ª—å—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å" },
    { value: "GRODNO", label: "–ì—Ä–æ–¥–Ω–µ–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å" },
    { value: "MINSK_REGION", label: "–ú–∏–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å" },
    { value: "MOGILEV", label: "–ú–æ–≥–∏–ª–µ–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å" },
    { value: "MINSK_CITY", label: "–≥. –ú–∏–Ω—Å–∫" },
  ]

  const navigate = useNavigate()

  useEffect(() => {
    const user = authService.getCurrentUser()
    if (!user || (user.role !== "ADMIN" && user.role !== "MANAGER")) {
      navigate("/login")
      return
    }
    setCurrentUser(user)

    fetchClients()
  }, [navigate])

  // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–ª–∏–µ–Ω—Ç–æ–≤, –∏–∑–≤–ª–µ–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏–∑ –∏—Ö –æ—Ç–≤–µ—Ç–æ–≤
  const processedClients = useMemo(() => {
    console.log("üîÑ –ù–∞—á–∏–Ω–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –∫–ª–∏–µ–Ω—Ç–æ–≤...")
    console.log("üìã ID –≤–æ–ø—Ä–æ—Å–æ–≤ –¥–ª—è –º–∞–ø–ø–∏–Ω–≥–∞:", {
      –≤–æ–∑—Ä–∞—Å—Ç: AGE_QUESTION_ID,
      —Ä–µ–≥–∏–æ–Ω: REGION_QUESTION_ID,
      –ø—Ä–æ—Ñ–µ—Å—Å–∏—è: PROFESSION_QUESTION_ID,
    })

    return clients.map((client, index) => {
      const answers = client.answers || []
      console.log(
        `üë§ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–ª–∏–µ–Ω—Ç–∞ ${index + 1} (ID: ${client.id}):`,
        client.name
      )
      console.log(`  üìù –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç–≤–µ—Ç–æ–≤: ${answers.length}`)

      // –ò–∑–≤–ª–µ–∫–∞–µ–º –æ—Ç–≤–µ—Ç—ã –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –æ –≤–æ–∑—Ä–∞—Å—Ç–µ, —Ä–µ–≥–∏–æ–Ω–µ –∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏
      let ageAnswer = null
      let regionAnswer = null
      let professionAnswer = null

      answers.forEach(answer => {
        console.log(`    ‚ùì –í–æ–ø—Ä–æ—Å ID ${answer.questionId}: "${answer.answer}"`)

        if (answer.questionId === AGE_QUESTION_ID) {
          ageAnswer = answer.answer
          console.log(
            `    üéÇ –ù–∞–π–¥–µ–Ω –æ—Ç–≤–µ—Ç –Ω–∞ –≤–æ–ø—Ä–æ—Å –æ –≤–æ–∑—Ä–∞—Å—Ç–µ: "${ageAnswer}"`
          )
        } else if (answer.questionId === REGION_QUESTION_ID) {
          regionAnswer = answer.answer
          console.log(
            `    üó∫Ô∏è –ù–∞–π–¥–µ–Ω –æ—Ç–≤–µ—Ç –Ω–∞ –≤–æ–ø—Ä–æ—Å –æ —Ä–µ–≥–∏–æ–Ω–µ: "${regionAnswer}"`
          )
        } else if (answer.questionId === PROFESSION_QUESTION_ID) {
          professionAnswer = answer.answer
          console.log(
            `    üíº –ù–∞–π–¥–µ–Ω –æ—Ç–≤–µ—Ç –Ω–∞ –≤–æ–ø—Ä–æ—Å –æ –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏: "${professionAnswer}"`
          )
        }
      })

      // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Ç–µ–∫—Å—Ç–æ–≤—ã–µ –æ—Ç–≤–µ—Ç—ã –≤ –∑–Ω–∞—á–µ–Ω–∏—è –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–æ–≤
      const mappedAgeGroup = mapAgeAnswerToGroup(ageAnswer)
      const mappedRegion = mapRegionAnswer(regionAnswer)

      console.log(`  üîÑ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –º–∞–ø–ø–∏–Ω–≥–∞ –¥–ª—è –∫–ª–∏–µ–Ω—Ç–∞ ${client.name}:`)
      console.log(`    –í–æ–∑—Ä–∞—Å—Ç: "${ageAnswer}" ‚Üí ${mappedAgeGroup}`)
      console.log(`    –†–µ–≥–∏–æ–Ω: "${regionAnswer}" ‚Üí ${mappedRegion}`)
      console.log(`    –ü—Ä–æ—Ñ–µ—Å—Å–∏—è: "${professionAnswer}"`)

      return {
        ...client,
        // –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ –æ—Ç–≤–µ—Ç–æ–≤
        ageFromAnswer: mappedAgeGroup,
        regionFromAnswer: mappedRegion,
        professionFromAnswer: professionAnswer,
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
        originalAgeAnswer: ageAnswer,
        originalRegionAnswer: regionAnswer,
        originalProfessionAnswer: professionAnswer,
      }
    })
  }, [clients, AGE_QUESTION_ID, REGION_QUESTION_ID, PROFESSION_QUESTION_ID])

  // –ü—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ñ–∏–ª—å—Ç—Ä–æ–≤ –æ–±–Ω–æ–≤–ª—è–µ–º –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫
  useEffect(() => {
    if (processedClients.length > 0) {
      console.log("üîç –ü—Ä–∏–º–µ–Ω—è–µ–º —Ñ–∏–ª—å—Ç—Ä—ã:", filters)

      // –§–∏–ª—å—Ç—Ä—É–µ–º –∫–ª–∏–µ–Ω—Ç–æ–≤ –Ω–∞ –æ—Å–Ω–æ–≤–µ –æ—Ç–≤–µ—Ç–æ–≤ –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã
      const filtered = processedClients.filter(client => {
        console.log(`üîé –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–ª–∏–µ–Ω—Ç–∞ ${client.name}:`)
        console.log(
          `  –í–æ–∑—Ä–∞—Å—Ç: ${client.ageFromAnswer} (—Ñ–∏–ª—å—Ç—Ä: ${filters.ageGroup})`
        )
        console.log(
          `  –†–µ–≥–∏–æ–Ω: ${client.regionFromAnswer} (—Ñ–∏–ª—å—Ç—Ä: ${filters.region})`
        )
        console.log(
          `  –ü—Ä–æ—Ñ–µ—Å—Å–∏—è: ${client.professionFromAnswer} (—Ñ–∏–ª—å—Ç—Ä: ${filters.profession})`
        )

        // –§–∏–ª—å—Ç—Ä –ø–æ –≤–æ–∑—Ä–∞—Å—Ç–Ω–æ–π –≥—Ä—É–ø–ø–µ –Ω–∞ –æ—Å–Ω–æ–≤–µ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –≤–æ–ø—Ä–æ—Å
        if (
          filters.ageGroup &&
          filters.ageGroup !== "ALL" &&
          client.ageFromAnswer !== filters.ageGroup
        ) {
          console.log(`  ‚ùå –û—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω –ø–æ –≤–æ–∑—Ä–∞—Å—Ç—É`)
          return false
        }

        // –§–∏–ª—å—Ç—Ä –ø–æ —Ä–µ–≥–∏–æ–Ω—É –Ω–∞ –æ—Å–Ω–æ–≤–µ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –≤–æ–ø—Ä–æ—Å
        if (
          filters.region &&
          filters.region !== "ALL" &&
          client.regionFromAnswer !== filters.region
        ) {
          console.log(`  ‚ùå –û—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω –ø–æ —Ä–µ–≥–∏–æ–Ω—É`)
          return false
        }

        // –§–∏–ª—å—Ç—Ä –ø–æ –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –≤–æ–ø—Ä–æ—Å
        if (filters.profession && client.professionFromAnswer) {
          const clientProfession = client.professionFromAnswer.toLowerCase()
          const searchProfession = filters.profession.toLowerCase()
          if (!clientProfession.includes(searchProfession)) {
            console.log(`  ‚ùå –û—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω –ø–æ –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏`)
            return false
          }
        }

        console.log(`  ‚úÖ –ö–ª–∏–µ–Ω—Ç –ø—Ä–æ—à–µ–ª —Ñ–∏–ª—å—Ç—Ä—ã`)
        return true
      })

      console.log(
        `üìä –†–µ–∑—É–ª—å—Ç–∞—Ç —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏: ${filtered.length} –∏–∑ ${processedClients.length} –∫–ª–∏–µ–Ω—Ç–æ–≤`
      )
      setFilteredClients(filtered)
    }
  }, [processedClients, filters])

  const fetchClients = async () => {
    try {
      setLoading(true)
      const clientsData = await clientSegmentsService.getClientsWithAnswers()
      console.log("üîç –ü–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∫–ª–∏–µ–Ω—Ç–æ–≤:", clientsData)
      console.log("üìä –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–ª–∏–µ–Ω—Ç–æ–≤:", clientsData.length)

      // –õ–æ–≥–∏—Ä—É–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø–µ—Ä–≤–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞ –¥–ª—è –ø–æ–Ω–∏–º–∞–Ω–∏—è —Ñ–æ—Ä–º–∞—Ç–∞ –¥–∞–Ω–Ω—ã—Ö
      if (clientsData.length > 0) {
        console.log("üë§ –ü—Ä–∏–º–µ—Ä —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –∫–ª–∏–µ–Ω—Ç–∞:", clientsData[0])
        if (clientsData[0].answers) {
          console.log("üí¨ –ü—Ä–∏–º–µ—Ä –æ—Ç–≤–µ—Ç–æ–≤ –∫–ª–∏–µ–Ω—Ç–∞:", clientsData[0].answers)
        }
      }

      setClients(clientsData)
      setError(null)
    } catch (err) {
      setError(
        "–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∫–ª–∏–µ–Ω—Ç–æ–≤: " +
          (err.response?.data?.message || err.message)
      )
      console.error("Failed to fetch clients:", err)
    } finally {
      setLoading(false)
    }
  }

  const handleFilterChange = e => {
    const { name, value } = e.target
    setFilters({
      ...filters,
      [name]: value,
    })
  }

  const clearFilters = () => {
    setFilters({
      ageGroup: "ALL",
      region: "ALL",
      profession: "",
    })
  }

  return (
    <div className="dashboard-container">
      <Sidebar user={currentUser} />
      <div className="dashboard-content">
        <div className="segments-header">
          <h1>–°–µ–≥–º–µ–Ω—Ç—ã –∫–ª–∏–µ–Ω—Ç–æ–≤</h1>
        </div>

        {error && <div className="error-message">{error}</div>}

        <div className="filters-container">
          <h2>–§–∏–ª—å—Ç—Ä—ã</h2>
          <div className="filters-grid">
            <div className="filter-group">
              <label htmlFor="ageGroup">–í–æ–∑—Ä–∞—Å—Ç–Ω–∞—è –≥—Ä—É–ø–ø–∞:</label>
              <select
                id="ageGroup"
                name="ageGroup"
                value={filters.ageGroup}
                onChange={handleFilterChange}
              >
                {ageGroups.map(option => (
                  <option key={option.value} value={option.value}>
                    {option.label}
                  </option>
                ))}
              </select>
            </div>

            <div className="filter-group">
              <label htmlFor="region">–†–µ–≥–∏–æ–Ω:</label>
              <select
                id="region"
                name="region"
                value={filters.region}
                onChange={handleFilterChange}
              >
                {regions.map(option => (
                  <option key={option.value} value={option.value}>
                    {option.label}
                  </option>
                ))}
              </select>
            </div>

            <div className="filter-group">
              <label htmlFor="profession">–ü—Ä–æ—Ñ–µ—Å—Å–∏—è:</label>
              <input
                type="text"
                id="profession"
                name="profession"
                value={filters.profession}
                onChange={handleFilterChange}
                placeholder="–í–≤–µ–¥–∏—Ç–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏—é"
              />
            </div>

            <button className="clear-filters-btn" onClick={clearFilters}>
              –°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã
            </button>
          </div>
        </div>

        {loading ? (
          <div className="loading-spinner">–ó–∞–≥—Ä—É–∑–∫–∞ –∫–ª–∏–µ–Ω—Ç–æ–≤...</div>
        ) : (
          <div className="clients-list">
            <div className="results-summary">
              –ù–∞–π–¥–µ–Ω–æ –∫–ª–∏–µ–Ω—Ç–æ–≤: <strong>{filteredClients.length}</strong> –∏–∑{" "}
              {processedClients.length}
            </div>

            <table>
              <thead>
                <tr>
                  <th>ID</th>
                  <th>–ò–º—è</th>
                  <th>Email</th>
                  <th>–¢–µ–ª–µ—Ñ–æ–Ω</th>
                  <th>–í–æ–∑—Ä–∞—Å—Ç</th>
                  <th>–†–µ–≥–∏–æ–Ω</th>
                  <th>–ü—Ä–æ—Ñ–µ—Å—Å–∏—è</th>
                  <th>–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏</th>
                </tr>
              </thead>
              <tbody>
                {filteredClients.length === 0 ? (
                  <tr>
                    <td colSpan="8" className="no-data">
                      –ö–ª–∏–µ–Ω—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã
                    </td>
                  </tr>
                ) : (
                  filteredClients.map(client => (
                    <tr key={client.id}>
                      <td>{client.id}</td>
                      <td>{client.name}</td>
                      <td>{client.email}</td>
                      <td>{client.phone || "‚Äî"}</td>
                      <td>
                        {client.originalAgeAnswer ||
                          getAgeGroupLabel(client.ageFromAnswer) ||
                          "‚Äî"}
                      </td>
                      <td>
                        {client.originalRegionAnswer ||
                          getRegionLabel(client.regionFromAnswer) ||
                          "‚Äî"}
                      </td>
                      <td>{client.originalProfessionAnswer || "‚Äî"}</td>
                      <td>{formatDate(client.clientSince)}</td>
                    </tr>
                  ))
                )}
              </tbody>
            </table>
          </div>
        )}
      </div>
    </div>
  )
}

export default ClientSegmentsPage
