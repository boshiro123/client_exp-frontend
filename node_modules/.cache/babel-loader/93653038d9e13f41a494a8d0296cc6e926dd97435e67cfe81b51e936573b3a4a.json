{"ast":null,"code":"var _jsxFileName = \"/Users/shirokiy/Desktop/Repositories/\\u0414\\u0438\\u043F\\u043B\\u043E\\u043C\\u044B/ClientExp/client_exp-frontend/src/pages/Dashboard/ClientSegmentsPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useMemo } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Sidebar from \"../../components/common/Sidebar\";\nimport { authService } from \"../../api/auth\";\nimport { clientSegmentsService } from \"../../api/client-segments\";\nimport \"./DashboardStyles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ClientSegmentsPage = () => {\n  _s();\n  const [clients, setClients] = useState([]);\n  const [filteredClients, setFilteredClients] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [currentUser, setCurrentUser] = useState(null);\n\n  // Состояние для фильтров\n  const [filters, setFilters] = useState({\n    ageGroup: \"ALL\",\n    gender: \"ALL\",\n    profession: \"\"\n  });\n\n  // Идентификаторы вопросов для возраста, пола и профессии\n  // Может потребоваться настройка в зависимости от вашей базы данных\n  const AGE_QUESTION_ID = 1; // ID вопроса о возрасте\n  const GENDER_QUESTION_ID = 2; // ID вопроса о поле\n  const PROFESSION_QUESTION_ID = 3; // ID вопроса о профессии\n\n  // Загружаем опции для фильтров\n  const ageGroups = [{\n    value: \"ALL\",\n    label: \"Все возрасты\"\n  }, ...clientSegmentsService.getAgeGroups()];\n  const genders = [{\n    value: \"ALL\",\n    label: \"Любой пол\"\n  }, ...clientSegmentsService.getGenders()];\n  const navigate = useNavigate();\n  useEffect(() => {\n    const user = authService.getCurrentUser();\n    if (!user || user.role !== \"ADMIN\" && user.role !== \"MANAGER\") {\n      navigate(\"/login\");\n      return;\n    }\n    setCurrentUser(user);\n    fetchClients();\n  }, [navigate]);\n\n  // Обрабатываем клиентов, извлекая информацию из их ответов\n  const processedClients = useMemo(() => {\n    return clients.map(client => {\n      const answers = client.answers || [];\n\n      // Извлекаем ответы на вопросы о возрасте, поле и профессии\n      let ageAnswer = null;\n      let genderAnswer = null;\n      let professionAnswer = null;\n      answers.forEach(answer => {\n        if (answer.questionId === AGE_QUESTION_ID) {\n          ageAnswer = answer.answer;\n        } else if (answer.questionId === GENDER_QUESTION_ID) {\n          genderAnswer = answer.answer;\n        } else if (answer.questionId === PROFESSION_QUESTION_ID) {\n          professionAnswer = answer.answer;\n        }\n      });\n\n      // Преобразуем текстовые ответы в значения для фильтров\n      const mappedAgeGroup = mapAgeAnswerToGroup(ageAnswer);\n      const mappedGender = mapGenderAnswer(genderAnswer);\n      return {\n        ...client,\n        // Переопределяем значения для фильтрации на основе ответов\n        ageFromAnswer: mappedAgeGroup,\n        genderFromAnswer: mappedGender,\n        professionFromAnswer: professionAnswer\n      };\n    });\n  }, [clients]);\n\n  // При изменении фильтров обновляем отфильтрованный список\n  useEffect(() => {\n    if (processedClients.length > 0) {\n      // Фильтруем клиентов на основе ответов на вопросы\n      setFilteredClients(processedClients.filter(client => {\n        // Фильтр по возрастной группе на основе ответа на вопрос\n        if (filters.ageGroup && filters.ageGroup !== \"ALL\" && client.ageFromAnswer !== filters.ageGroup) {\n          return false;\n        }\n\n        // Фильтр по полу на основе ответа на вопрос\n        if (filters.gender && filters.gender !== \"ALL\" && client.genderFromAnswer !== filters.gender) {\n          return false;\n        }\n\n        // Фильтр по профессии на основе ответа на вопрос\n        if (filters.profession && client.professionFromAnswer) {\n          const clientProfession = client.professionFromAnswer.toLowerCase();\n          const searchProfession = filters.profession.toLowerCase();\n          if (!clientProfession.includes(searchProfession)) {\n            return false;\n          }\n        }\n        return true;\n      }));\n    }\n  }, [processedClients, filters]);\n  const fetchClients = async () => {\n    try {\n      setLoading(true);\n      const clientsData = await clientSegmentsService.getClientsWithAnswers();\n      setClients(clientsData);\n      setError(null);\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(\"Ошибка при загрузке клиентов: \" + (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || err.message));\n      console.error(\"Failed to fetch clients:\", err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleFilterChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFilters({\n      ...filters,\n      [name]: value\n    });\n  };\n  const clearFilters = () => {\n    setFilters({\n      ageGroup: \"ALL\",\n      gender: \"ALL\",\n      profession: \"\"\n    });\n  };\n\n  // Функция для преобразования текстового ответа о возрасте в группу\n  const mapAgeAnswerToGroup = answer => {\n    if (!answer) return null;\n\n    // Предполагаем различные форматы ответов и преобразуем их в стандартные группы\n    answer = answer.toLowerCase();\n    if (answer.includes(\"18\") || answer.includes(\"19\") || answer.includes(\"20\") || answer.includes(\"21\") || answer.includes(\"22\") || answer.includes(\"23\") || answer.includes(\"24\") || answer.includes(\"18-24\")) {\n      return \"AGE_18_24\";\n    } else if (answer.includes(\"25\") || answer.includes(\"26\") || answer.includes(\"27\") || answer.includes(\"28\") || answer.includes(\"29\") || answer.includes(\"30\") || answer.includes(\"31\") || answer.includes(\"32\") || answer.includes(\"33\") || answer.includes(\"34\") || answer.includes(\"25-34\")) {\n      return \"AGE_25_34\";\n    } else if (answer.includes(\"35\") || answer.includes(\"36\") || answer.includes(\"37\") || answer.includes(\"38\") || answer.includes(\"39\") || answer.includes(\"40\") || answer.includes(\"41\") || answer.includes(\"42\") || answer.includes(\"43\") || answer.includes(\"44\") || answer.includes(\"35-44\")) {\n      return \"AGE_35_44\";\n    } else if (answer.includes(\"45\") || answer.includes(\"46\") || answer.includes(\"47\") || answer.includes(\"48\") || answer.includes(\"49\") || answer.includes(\"50\") || answer.includes(\"51\") || answer.includes(\"52\") || answer.includes(\"53\") || answer.includes(\"54\") || answer.includes(\"45-54\")) {\n      return \"AGE_45_54\";\n    } else if (parseInt(answer) >= 55 || answer.includes(\"55\") || answer.includes(\"60\") || answer.includes(\"65\") || answer.includes(\"70\") || answer.includes(\"55+\")) {\n      return \"AGE_55_PLUS\";\n    }\n    return null;\n  };\n\n  // Функция для преобразования текстового ответа о поле в стандартный формат\n  const mapGenderAnswer = answer => {\n    if (!answer) return null;\n    answer = answer.toLowerCase();\n    if (answer.includes(\"муж\") || answer === \"м\" || answer === \"m\" || answer.includes(\"male\") || answer.includes(\"мужской\")) {\n      return \"MALE\";\n    } else if (answer.includes(\"жен\") || answer === \"ж\" || answer === \"f\" || answer.includes(\"female\") || answer.includes(\"женский\")) {\n      return \"FEMALE\";\n    } else {\n      return \"OTHER\";\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      user: currentUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"segments-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"\\u0421\\u0435\\u0433\\u043C\\u0435\\u043D\\u0442\\u044B \\u043A\\u043B\\u0438\\u0435\\u043D\\u0442\\u043E\\u0432\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filters-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\u0424\\u0438\\u043B\\u044C\\u0442\\u0440\\u044B\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filters-grid\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"filter-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"ageGroup\",\n              children: \"\\u0412\\u043E\\u0437\\u0440\\u0430\\u0441\\u0442\\u043D\\u0430\\u044F \\u0433\\u0440\\u0443\\u043F\\u043F\\u0430:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"ageGroup\",\n              name: \"ageGroup\",\n              value: filters.ageGroup,\n              onChange: handleFilterChange,\n              children: ageGroups.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: option.value,\n                children: option.label\n              }, option.value, false, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"filter-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"gender\",\n              children: \"\\u041F\\u043E\\u043B:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"gender\",\n              name: \"gender\",\n              value: filters.gender,\n              onChange: handleFilterChange,\n              children: genders.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: option.value,\n                children: option.label\n              }, option.value, false, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"filter-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"profession\",\n              children: \"\\u041F\\u0440\\u043E\\u0444\\u0435\\u0441\\u0441\\u0438\\u044F:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"profession\",\n              name: \"profession\",\n              value: filters.profession,\n              onChange: handleFilterChange,\n              placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043F\\u0440\\u043E\\u0444\\u0435\\u0441\\u0441\\u0438\\u044E\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"clear-filters-btn\",\n            onClick: clearFilters,\n            children: \"\\u0421\\u0431\\u0440\\u043E\\u0441\\u0438\\u0442\\u044C \\u0444\\u0438\\u043B\\u044C\\u0442\\u0440\\u044B\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\",\n        children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430 \\u043A\\u043B\\u0438\\u0435\\u043D\\u0442\\u043E\\u0432...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"clients-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"results-summary\",\n          children: [\"\\u041D\\u0430\\u0439\\u0434\\u0435\\u043D\\u043E \\u043A\\u043B\\u0438\\u0435\\u043D\\u0442\\u043E\\u0432: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: filteredClients.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 33\n          }, this), \" \\u0438\\u0437\", \" \", processedClients.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 333,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"\\u0418\\u043C\\u044F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 334,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 335,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"\\u0422\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 336,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"\\u0412\\u043E\\u0437\\u0440\\u0430\\u0441\\u0442\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 337,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"\\u041F\\u043E\\u043B\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 338,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"\\u041F\\u0440\\u043E\\u0444\\u0435\\u0441\\u0441\\u0438\\u044F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 339,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"\\u0420\\u0435\\u0433\\u0438\\u043E\\u043D\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 340,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"\\u0414\\u0430\\u0442\\u0430 \\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0430\\u0446\\u0438\\u0438\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 341,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: filteredClients.length === 0 ? /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                colSpan: \"9\",\n                className: \"no-data\",\n                children: \"\\u041A\\u043B\\u0438\\u0435\\u043D\\u0442\\u044B \\u043D\\u0435 \\u043D\\u0430\\u0439\\u0434\\u0435\\u043D\\u044B\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 347,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 346,\n              columnNumber: 19\n            }, this) : filteredClients.map(client => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: client.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 354,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: client.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 355,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: client.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 356,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: client.phone || \"—\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 357,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: getAgeGroupLabel(client.ageFromAnswer || client.ageGroup)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 358,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: getGenderLabel(client.genderFromAnswer || client.gender)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 363,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: client.professionFromAnswer || client.profession || \"—\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 368,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: client.region || \"—\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 373,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: formatDate(client.clientSince)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 374,\n                columnNumber: 23\n              }, this)]\n            }, client.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 353,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info-block\",\n        style: {\n          marginTop: \"20px\",\n          padding: \"15px\",\n          backgroundColor: \"#f8f9fa\",\n          borderRadius: \"8px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\u0418\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u044F \\u043E \\u0444\\u0438\\u043B\\u044C\\u0442\\u0440\\u0430\\u0445\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u0424\\u0438\\u043B\\u044C\\u0442\\u0440\\u0430\\u0446\\u0438\\u044F \\u043A\\u043B\\u0438\\u0435\\u043D\\u0442\\u043E\\u0432 \\u043F\\u0440\\u043E\\u0438\\u0441\\u0445\\u043E\\u0434\\u0438\\u0442 \\u043D\\u0430 \\u043E\\u0441\\u043D\\u043E\\u0432\\u0435 \\u0438\\u0445 \\u043E\\u0442\\u0432\\u0435\\u0442\\u043E\\u0432 \\u043D\\u0430 \\u0441\\u043B\\u0435\\u0434\\u0443\\u044E\\u0449\\u0438\\u0435 \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\\u044B:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"\\u0412\\u043E\\u0437\\u0440\\u0430\\u0441\\u0442:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 400,\n              columnNumber: 15\n            }, this), \" \\u0412\\u043E\\u043F\\u0440\\u043E\\u0441 \\u2116\", AGE_QUESTION_ID]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 399,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"\\u041F\\u043E\\u043B:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 403,\n              columnNumber: 15\n            }, this), \" \\u0412\\u043E\\u043F\\u0440\\u043E\\u0441 \\u2116\", GENDER_QUESTION_ID]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 402,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"\\u041F\\u0440\\u043E\\u0444\\u0435\\u0441\\u0441\\u0438\\u044F:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 406,\n              columnNumber: 15\n            }, this), \" \\u0412\\u043E\\u043F\\u0440\\u043E\\u0441 \\u2116\", PROFESSION_QUESTION_ID]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 259,\n    columnNumber: 5\n  }, this);\n};\n\n// Вспомогательные функции форматирования данных\n_s(ClientSegmentsPage, \"A9K3+cKMvtSA6pV1WtEMC2ieFG4=\", false, function () {\n  return [useNavigate];\n});\n_c = ClientSegmentsPage;\nconst getAgeGroupLabel = ageGroup => {\n  const groups = {\n    AGE_18_24: \"18-24 года\",\n    AGE_25_34: \"25-34 года\",\n    AGE_35_44: \"35-44 года\",\n    AGE_45_54: \"45-54 года\",\n    AGE_55_PLUS: \"55+ лет\"\n  };\n  return groups[ageGroup] || ageGroup || \"—\";\n};\nconst getGenderLabel = gender => {\n  const genders = {\n    MALE: \"Мужской\",\n    FEMALE: \"Женский\",\n    OTHER: \"Другой\"\n  };\n  return genders[gender] || gender || \"—\";\n};\nconst formatDate = dateString => {\n  if (!dateString) return \"—\";\n  try {\n    const date = new Date(dateString);\n    return date.toLocaleDateString(\"ru-RU\");\n  } catch (e) {\n    return dateString;\n  }\n};\nexport default ClientSegmentsPage;\nvar _c;\n$RefreshReg$(_c, \"ClientSegmentsPage\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","useNavigate","Sidebar","authService","clientSegmentsService","jsxDEV","_jsxDEV","ClientSegmentsPage","_s","clients","setClients","filteredClients","setFilteredClients","loading","setLoading","error","setError","currentUser","setCurrentUser","filters","setFilters","ageGroup","gender","profession","AGE_QUESTION_ID","GENDER_QUESTION_ID","PROFESSION_QUESTION_ID","ageGroups","value","label","getAgeGroups","genders","getGenders","navigate","user","getCurrentUser","role","fetchClients","processedClients","map","client","answers","ageAnswer","genderAnswer","professionAnswer","forEach","answer","questionId","mappedAgeGroup","mapAgeAnswerToGroup","mappedGender","mapGenderAnswer","ageFromAnswer","genderFromAnswer","professionFromAnswer","length","filter","clientProfession","toLowerCase","searchProfession","includes","clientsData","getClientsWithAnswers","err","_err$response","_err$response$data","response","data","message","console","handleFilterChange","e","name","target","clearFilters","parseInt","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","onChange","option","type","placeholder","onClick","colSpan","email","phone","getAgeGroupLabel","getGenderLabel","region","formatDate","clientSince","style","marginTop","padding","backgroundColor","borderRadius","_c","groups","AGE_18_24","AGE_25_34","AGE_35_44","AGE_45_54","AGE_55_PLUS","MALE","FEMALE","OTHER","dateString","date","Date","toLocaleDateString","$RefreshReg$"],"sources":["/Users/shirokiy/Desktop/Repositories/Дипломы/ClientExp/client_exp-frontend/src/pages/Dashboard/ClientSegmentsPage.jsx"],"sourcesContent":["import React, { useState, useEffect, useMemo } from \"react\"\nimport { useNavigate } from \"react-router-dom\"\nimport Sidebar from \"../../components/common/Sidebar\"\nimport { authService } from \"../../api/auth\"\nimport { clientSegmentsService } from \"../../api/client-segments\"\nimport \"./DashboardStyles.css\"\n\nconst ClientSegmentsPage = () => {\n  const [clients, setClients] = useState([])\n  const [filteredClients, setFilteredClients] = useState([])\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState(null)\n  const [currentUser, setCurrentUser] = useState(null)\n\n  // Состояние для фильтров\n  const [filters, setFilters] = useState({\n    ageGroup: \"ALL\",\n    gender: \"ALL\",\n    profession: \"\",\n  })\n\n  // Идентификаторы вопросов для возраста, пола и профессии\n  // Может потребоваться настройка в зависимости от вашей базы данных\n  const AGE_QUESTION_ID = 1 // ID вопроса о возрасте\n  const GENDER_QUESTION_ID = 2 // ID вопроса о поле\n  const PROFESSION_QUESTION_ID = 3 // ID вопроса о профессии\n\n  // Загружаем опции для фильтров\n  const ageGroups = [\n    { value: \"ALL\", label: \"Все возрасты\" },\n    ...clientSegmentsService.getAgeGroups(),\n  ]\n  const genders = [\n    { value: \"ALL\", label: \"Любой пол\" },\n    ...clientSegmentsService.getGenders(),\n  ]\n\n  const navigate = useNavigate()\n\n  useEffect(() => {\n    const user = authService.getCurrentUser()\n    if (!user || (user.role !== \"ADMIN\" && user.role !== \"MANAGER\")) {\n      navigate(\"/login\")\n      return\n    }\n    setCurrentUser(user)\n\n    fetchClients()\n  }, [navigate])\n\n  // Обрабатываем клиентов, извлекая информацию из их ответов\n  const processedClients = useMemo(() => {\n    return clients.map(client => {\n      const answers = client.answers || []\n\n      // Извлекаем ответы на вопросы о возрасте, поле и профессии\n      let ageAnswer = null\n      let genderAnswer = null\n      let professionAnswer = null\n\n      answers.forEach(answer => {\n        if (answer.questionId === AGE_QUESTION_ID) {\n          ageAnswer = answer.answer\n        } else if (answer.questionId === GENDER_QUESTION_ID) {\n          genderAnswer = answer.answer\n        } else if (answer.questionId === PROFESSION_QUESTION_ID) {\n          professionAnswer = answer.answer\n        }\n      })\n\n      // Преобразуем текстовые ответы в значения для фильтров\n      const mappedAgeGroup = mapAgeAnswerToGroup(ageAnswer)\n      const mappedGender = mapGenderAnswer(genderAnswer)\n\n      return {\n        ...client,\n        // Переопределяем значения для фильтрации на основе ответов\n        ageFromAnswer: mappedAgeGroup,\n        genderFromAnswer: mappedGender,\n        professionFromAnswer: professionAnswer,\n      }\n    })\n  }, [clients])\n\n  // При изменении фильтров обновляем отфильтрованный список\n  useEffect(() => {\n    if (processedClients.length > 0) {\n      // Фильтруем клиентов на основе ответов на вопросы\n      setFilteredClients(\n        processedClients.filter(client => {\n          // Фильтр по возрастной группе на основе ответа на вопрос\n          if (\n            filters.ageGroup &&\n            filters.ageGroup !== \"ALL\" &&\n            client.ageFromAnswer !== filters.ageGroup\n          ) {\n            return false\n          }\n\n          // Фильтр по полу на основе ответа на вопрос\n          if (\n            filters.gender &&\n            filters.gender !== \"ALL\" &&\n            client.genderFromAnswer !== filters.gender\n          ) {\n            return false\n          }\n\n          // Фильтр по профессии на основе ответа на вопрос\n          if (filters.profession && client.professionFromAnswer) {\n            const clientProfession = client.professionFromAnswer.toLowerCase()\n            const searchProfession = filters.profession.toLowerCase()\n            if (!clientProfession.includes(searchProfession)) {\n              return false\n            }\n          }\n\n          return true\n        })\n      )\n    }\n  }, [processedClients, filters])\n\n  const fetchClients = async () => {\n    try {\n      setLoading(true)\n      const clientsData = await clientSegmentsService.getClientsWithAnswers()\n      setClients(clientsData)\n      setError(null)\n    } catch (err) {\n      setError(\n        \"Ошибка при загрузке клиентов: \" +\n          (err.response?.data?.message || err.message)\n      )\n      console.error(\"Failed to fetch clients:\", err)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const handleFilterChange = e => {\n    const { name, value } = e.target\n    setFilters({\n      ...filters,\n      [name]: value,\n    })\n  }\n\n  const clearFilters = () => {\n    setFilters({\n      ageGroup: \"ALL\",\n      gender: \"ALL\",\n      profession: \"\",\n    })\n  }\n\n  // Функция для преобразования текстового ответа о возрасте в группу\n  const mapAgeAnswerToGroup = answer => {\n    if (!answer) return null\n\n    // Предполагаем различные форматы ответов и преобразуем их в стандартные группы\n    answer = answer.toLowerCase()\n\n    if (\n      answer.includes(\"18\") ||\n      answer.includes(\"19\") ||\n      answer.includes(\"20\") ||\n      answer.includes(\"21\") ||\n      answer.includes(\"22\") ||\n      answer.includes(\"23\") ||\n      answer.includes(\"24\") ||\n      answer.includes(\"18-24\")\n    ) {\n      return \"AGE_18_24\"\n    } else if (\n      answer.includes(\"25\") ||\n      answer.includes(\"26\") ||\n      answer.includes(\"27\") ||\n      answer.includes(\"28\") ||\n      answer.includes(\"29\") ||\n      answer.includes(\"30\") ||\n      answer.includes(\"31\") ||\n      answer.includes(\"32\") ||\n      answer.includes(\"33\") ||\n      answer.includes(\"34\") ||\n      answer.includes(\"25-34\")\n    ) {\n      return \"AGE_25_34\"\n    } else if (\n      answer.includes(\"35\") ||\n      answer.includes(\"36\") ||\n      answer.includes(\"37\") ||\n      answer.includes(\"38\") ||\n      answer.includes(\"39\") ||\n      answer.includes(\"40\") ||\n      answer.includes(\"41\") ||\n      answer.includes(\"42\") ||\n      answer.includes(\"43\") ||\n      answer.includes(\"44\") ||\n      answer.includes(\"35-44\")\n    ) {\n      return \"AGE_35_44\"\n    } else if (\n      answer.includes(\"45\") ||\n      answer.includes(\"46\") ||\n      answer.includes(\"47\") ||\n      answer.includes(\"48\") ||\n      answer.includes(\"49\") ||\n      answer.includes(\"50\") ||\n      answer.includes(\"51\") ||\n      answer.includes(\"52\") ||\n      answer.includes(\"53\") ||\n      answer.includes(\"54\") ||\n      answer.includes(\"45-54\")\n    ) {\n      return \"AGE_45_54\"\n    } else if (\n      parseInt(answer) >= 55 ||\n      answer.includes(\"55\") ||\n      answer.includes(\"60\") ||\n      answer.includes(\"65\") ||\n      answer.includes(\"70\") ||\n      answer.includes(\"55+\")\n    ) {\n      return \"AGE_55_PLUS\"\n    }\n\n    return null\n  }\n\n  // Функция для преобразования текстового ответа о поле в стандартный формат\n  const mapGenderAnswer = answer => {\n    if (!answer) return null\n\n    answer = answer.toLowerCase()\n\n    if (\n      answer.includes(\"муж\") ||\n      answer === \"м\" ||\n      answer === \"m\" ||\n      answer.includes(\"male\") ||\n      answer.includes(\"мужской\")\n    ) {\n      return \"MALE\"\n    } else if (\n      answer.includes(\"жен\") ||\n      answer === \"ж\" ||\n      answer === \"f\" ||\n      answer.includes(\"female\") ||\n      answer.includes(\"женский\")\n    ) {\n      return \"FEMALE\"\n    } else {\n      return \"OTHER\"\n    }\n  }\n\n  return (\n    <div className=\"dashboard-container\">\n      <Sidebar user={currentUser} />\n      <div className=\"dashboard-content\">\n        <div className=\"segments-header\">\n          <h1>Сегменты клиентов</h1>\n        </div>\n\n        {error && <div className=\"error-message\">{error}</div>}\n\n        <div className=\"filters-container\">\n          <h2>Фильтры</h2>\n          <div className=\"filters-grid\">\n            <div className=\"filter-group\">\n              <label htmlFor=\"ageGroup\">Возрастная группа:</label>\n              <select\n                id=\"ageGroup\"\n                name=\"ageGroup\"\n                value={filters.ageGroup}\n                onChange={handleFilterChange}\n              >\n                {ageGroups.map(option => (\n                  <option key={option.value} value={option.value}>\n                    {option.label}\n                  </option>\n                ))}\n              </select>\n            </div>\n\n            <div className=\"filter-group\">\n              <label htmlFor=\"gender\">Пол:</label>\n              <select\n                id=\"gender\"\n                name=\"gender\"\n                value={filters.gender}\n                onChange={handleFilterChange}\n              >\n                {genders.map(option => (\n                  <option key={option.value} value={option.value}>\n                    {option.label}\n                  </option>\n                ))}\n              </select>\n            </div>\n\n            <div className=\"filter-group\">\n              <label htmlFor=\"profession\">Профессия:</label>\n              <input\n                type=\"text\"\n                id=\"profession\"\n                name=\"profession\"\n                value={filters.profession}\n                onChange={handleFilterChange}\n                placeholder=\"Введите профессию\"\n              />\n            </div>\n\n            <button className=\"clear-filters-btn\" onClick={clearFilters}>\n              Сбросить фильтры\n            </button>\n          </div>\n        </div>\n\n        {loading ? (\n          <div className=\"loading-spinner\">Загрузка клиентов...</div>\n        ) : (\n          <div className=\"clients-list\">\n            <div className=\"results-summary\">\n              Найдено клиентов: <strong>{filteredClients.length}</strong> из{\" \"}\n              {processedClients.length}\n            </div>\n\n            <table>\n              <thead>\n                <tr>\n                  <th>ID</th>\n                  <th>Имя</th>\n                  <th>Email</th>\n                  <th>Телефон</th>\n                  <th>Возраст</th>\n                  <th>Пол</th>\n                  <th>Профессия</th>\n                  <th>Регион</th>\n                  <th>Дата регистрации</th>\n                </tr>\n              </thead>\n              <tbody>\n                {filteredClients.length === 0 ? (\n                  <tr>\n                    <td colSpan=\"9\" className=\"no-data\">\n                      Клиенты не найдены\n                    </td>\n                  </tr>\n                ) : (\n                  filteredClients.map(client => (\n                    <tr key={client.id}>\n                      <td>{client.id}</td>\n                      <td>{client.name}</td>\n                      <td>{client.email}</td>\n                      <td>{client.phone || \"—\"}</td>\n                      <td>\n                        {getAgeGroupLabel(\n                          client.ageFromAnswer || client.ageGroup\n                        )}\n                      </td>\n                      <td>\n                        {getGenderLabel(\n                          client.genderFromAnswer || client.gender\n                        )}\n                      </td>\n                      <td>\n                        {client.professionFromAnswer ||\n                          client.profession ||\n                          \"—\"}\n                      </td>\n                      <td>{client.region || \"—\"}</td>\n                      <td>{formatDate(client.clientSince)}</td>\n                    </tr>\n                  ))\n                )}\n              </tbody>\n            </table>\n          </div>\n        )}\n\n        {/* Информация о вопросах */}\n        <div\n          className=\"info-block\"\n          style={{\n            marginTop: \"20px\",\n            padding: \"15px\",\n            backgroundColor: \"#f8f9fa\",\n            borderRadius: \"8px\",\n          }}\n        >\n          <h3>Информация о фильтрах</h3>\n          <p>\n            Фильтрация клиентов происходит на основе их ответов на следующие\n            вопросы:\n          </p>\n          <ul>\n            <li>\n              <strong>Возраст:</strong> Вопрос №{AGE_QUESTION_ID}\n            </li>\n            <li>\n              <strong>Пол:</strong> Вопрос №{GENDER_QUESTION_ID}\n            </li>\n            <li>\n              <strong>Профессия:</strong> Вопрос №{PROFESSION_QUESTION_ID}\n            </li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  )\n}\n\n// Вспомогательные функции форматирования данных\nconst getAgeGroupLabel = ageGroup => {\n  const groups = {\n    AGE_18_24: \"18-24 года\",\n    AGE_25_34: \"25-34 года\",\n    AGE_35_44: \"35-44 года\",\n    AGE_45_54: \"45-54 года\",\n    AGE_55_PLUS: \"55+ лет\",\n  }\n  return groups[ageGroup] || ageGroup || \"—\"\n}\n\nconst getGenderLabel = gender => {\n  const genders = {\n    MALE: \"Мужской\",\n    FEMALE: \"Женский\",\n    OTHER: \"Другой\",\n  }\n  return genders[gender] || gender || \"—\"\n}\n\nconst formatDate = dateString => {\n  if (!dateString) return \"—\"\n\n  try {\n    const date = new Date(dateString)\n    return date.toLocaleDateString(\"ru-RU\")\n  } catch (e) {\n    return dateString\n  }\n}\n\nexport default ClientSegmentsPage\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}