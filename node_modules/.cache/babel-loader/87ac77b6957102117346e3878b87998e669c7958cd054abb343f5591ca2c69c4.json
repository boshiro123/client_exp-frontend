{"ast":null,"code":"var _jsxFileName = \"/Users/shirokiy/Desktop/Repositories/\\u0414\\u0438\\u043F\\u043B\\u043E\\u043C\\u044B/ClientExp/client_exp-frontend/src/pages/Dashboard/ClientSegmentsPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useMemo } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Sidebar from \"../../components/common/Sidebar\";\nimport { authService } from \"../../api/auth\";\nimport { clientSegmentsService } from \"../../api/client-segments\";\nimport \"./DashboardStyles.css\";\n\n// Вспомогательные функции форматирования данных\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getAgeGroupLabel = ageGroup => {\n  const groups = {\n    AGE_18_24: \"18-24 года\",\n    AGE_25_34: \"25-34 года\",\n    AGE_35_44: \"35-44 года\",\n    AGE_45_54: \"45-54 года\",\n    AGE_55_PLUS: \"55+ лет\"\n  };\n  return groups[ageGroup] || ageGroup || \"—\";\n};\nconst getRegionLabel = region => {\n  const regions = {\n    BREST: \"Брестская область\",\n    VITEBSK: \"Витебская область\",\n    GOMEL: \"Гомельская область\",\n    GRODNO: \"Гродненская область\",\n    MINSK_REGION: \"Минская область\",\n    MOGILEV: \"Могилевская область\",\n    MINSK_CITY: \"г. Минск\"\n  };\n  return regions[region] || region || \"—\";\n};\nconst formatDate = dateString => {\n  if (!dateString) return \"—\";\n  try {\n    const date = new Date(dateString);\n    return date.toLocaleDateString(\"ru-RU\");\n  } catch (e) {\n    return dateString;\n  }\n};\n\n// Функция для преобразования текстового ответа о возрасте в группу\nconst mapAgeAnswerToGroup = answer => {\n  if (!answer) return null;\n  answer = answer.toLowerCase().trim();\n\n  // Прямое соответствие для стандартных форматов возрастных групп\n  if (answer.includes(\"до 18\") || answer.includes(\"менее 18\")) {\n    return \"AGE_UNDER_18\";\n  } else if (answer.includes(\"18–25\") || answer.includes(\"18-25\")) {\n    return \"AGE_18_24\";\n  } else if (answer.includes(\"26–35\") || answer.includes(\"26-35\")) {\n    return \"AGE_25_34\";\n  } else if (answer.includes(\"36–45\") || answer.includes(\"36-45\")) {\n    return \"AGE_35_44\";\n  } else if (answer.includes(\"46–60\") || answer.includes(\"46-60\")) {\n    return \"AGE_45_54\";\n  } else if (answer.includes(\"60+\") || answer.includes(\"старше 60\")) {\n    return \"AGE_55_PLUS\";\n  }\n\n  // Пытаемся извлечь числовое значение из ответа\n  const numMatch = answer.match(/\\d+/);\n  if (numMatch) {\n    const age = parseInt(numMatch[0]);\n    if (age < 18) return \"AGE_UNDER_18\";\n    if (age >= 18 && age <= 25) return \"AGE_18_24\";\n    if (age >= 26 && age <= 35) return \"AGE_25_34\";\n    if (age >= 36 && age <= 45) return \"AGE_35_44\";\n    if (age >= 46 && age <= 60) return \"AGE_45_54\";\n    if (age > 60) return \"AGE_55_PLUS\";\n  }\n  return null;\n};\n\n// Функция для преобразования текстового ответа о регионе в стандартный формат\nconst mapRegionAnswer = answer => {\n  if (!answer) return null;\n  answer = answer.toLowerCase().trim();\n  if (answer.includes(\"брест\")) {\n    return \"BREST\";\n  } else if (answer.includes(\"витебск\")) {\n    return \"VITEBSK\";\n  } else if (answer.includes(\"гомель\")) {\n    return \"GOMEL\";\n  } else if (answer.includes(\"гродн\")) {\n    return \"GRODNO\";\n  } else if (answer.includes(\"минская\") && answer.includes(\"область\")) {\n    return \"MINSK_REGION\";\n  } else if (answer.includes(\"могилев\")) {\n    return \"MOGILEV\";\n  } else if (answer.includes(\"минск\") && !answer.includes(\"область\")) {\n    return \"MINSK_CITY\";\n  }\n  return null;\n};\nconst ClientSegmentsPage = () => {\n  _s();\n  const [clients, setClients] = useState([]);\n  const [filteredClients, setFilteredClients] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [currentUser, setCurrentUser] = useState(null);\n\n  // Состояние для фильтров\n  const [filters, setFilters] = useState({\n    ageGroup: \"ALL\",\n    region: \"ALL\",\n    profession: \"\"\n  });\n\n  // Идентификаторы вопросов согласно новой структуре опросника\n  const AGE_QUESTION_ID = 1; // \"Укажите ваш возраст\"\n  const REGION_QUESTION_ID = 2; // \"Из какого региона Беларуси вы?\"\n  const PROFESSION_QUESTION_ID = 3; // \"Ваша профессия или сфера деятельности\"\n\n  // Загружаем опции для фильтров\n  const ageGroups = [{\n    value: \"ALL\",\n    label: \"Все возрасты\"\n  }, {\n    value: \"AGE_UNDER_18\",\n    label: \"До 18 лет\"\n  }, {\n    value: \"AGE_18_24\",\n    label: \"18–25 лет\"\n  }, {\n    value: \"AGE_25_34\",\n    label: \"26–35 лет\"\n  }, {\n    value: \"AGE_35_44\",\n    label: \"36–45 лет\"\n  }, {\n    value: \"AGE_45_54\",\n    label: \"46–60 лет\"\n  }, {\n    value: \"AGE_55_PLUS\",\n    label: \"60+ лет\"\n  }];\n  const regions = [{\n    value: \"ALL\",\n    label: \"Все регионы\"\n  }, {\n    value: \"BREST\",\n    label: \"Брестская область\"\n  }, {\n    value: \"VITEBSK\",\n    label: \"Витебская область\"\n  }, {\n    value: \"GOMEL\",\n    label: \"Гомельская область\"\n  }, {\n    value: \"GRODNO\",\n    label: \"Гродненская область\"\n  }, {\n    value: \"MINSK_REGION\",\n    label: \"Минская область\"\n  }, {\n    value: \"MOGILEV\",\n    label: \"Могилевская область\"\n  }, {\n    value: \"MINSK_CITY\",\n    label: \"г. Минск\"\n  }];\n  const navigate = useNavigate();\n  useEffect(() => {\n    const user = authService.getCurrentUser();\n    if (!user || user.role !== \"ADMIN\" && user.role !== \"MANAGER\") {\n      navigate(\"/login\");\n      return;\n    }\n    setCurrentUser(user);\n    fetchClients();\n  }, [navigate]);\n\n  // Обрабатываем клиентов, извлекая информацию из их ответов\n  const processedClients = useMemo(() => {\n    return clients.map(client => {\n      const answers = client.answers || [];\n\n      // Извлекаем ответы на вопросы о возрасте, регионе и профессии\n      let ageAnswer = null;\n      let regionAnswer = null;\n      let professionAnswer = null;\n      answers.forEach(answer => {\n        if (answer.questionId === AGE_QUESTION_ID) {\n          ageAnswer = answer.answer;\n        } else if (answer.questionId === REGION_QUESTION_ID) {\n          regionAnswer = answer.answer;\n        } else if (answer.questionId === PROFESSION_QUESTION_ID) {\n          professionAnswer = answer.answer;\n        }\n      });\n\n      // Преобразуем текстовые ответы в значения для фильтров\n      const mappedAgeGroup = mapAgeAnswerToGroup(ageAnswer);\n      const mappedRegion = mapRegionAnswer(regionAnswer);\n      return {\n        ...client,\n        // Переопределяем значения для фильтрации на основе ответов\n        ageFromAnswer: mappedAgeGroup,\n        regionFromAnswer: mappedRegion,\n        professionFromAnswer: professionAnswer,\n        // Сохраняем оригинальные ответы для отображения\n        originalAgeAnswer: ageAnswer,\n        originalRegionAnswer: regionAnswer,\n        originalProfessionAnswer: professionAnswer\n      };\n    });\n  }, [clients, AGE_QUESTION_ID, REGION_QUESTION_ID, PROFESSION_QUESTION_ID]);\n\n  // При изменении фильтров обновляем отфильтрованный список\n  useEffect(() => {\n    if (processedClients.length > 0) {\n      // Фильтруем клиентов на основе ответов на вопросы\n      setFilteredClients(processedClients.filter(client => {\n        // Фильтр по возрастной группе на основе ответа на вопрос\n        if (filters.ageGroup && filters.ageGroup !== \"ALL\" && client.ageFromAnswer !== filters.ageGroup) {\n          return false;\n        }\n\n        // Фильтр по региону на основе ответа на вопрос\n        if (filters.region && filters.region !== \"ALL\" && client.regionFromAnswer !== filters.region) {\n          return false;\n        }\n\n        // Фильтр по профессии на основе ответа на вопрос\n        if (filters.profession && client.professionFromAnswer) {\n          const clientProfession = client.professionFromAnswer.toLowerCase();\n          const searchProfession = filters.profession.toLowerCase();\n          if (!clientProfession.includes(searchProfession)) {\n            return false;\n          }\n        }\n        return true;\n      }));\n    }\n  }, [processedClients, filters]);\n  const fetchClients = async () => {\n    try {\n      setLoading(true);\n      const clientsData = await clientSegmentsService.getClientsWithAnswers();\n      setClients(clientsData);\n      setError(null);\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(\"Ошибка при загрузке клиентов: \" + (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || err.message));\n      console.error(\"Failed to fetch clients:\", err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleFilterChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFilters({\n      ...filters,\n      [name]: value\n    });\n  };\n  const clearFilters = () => {\n    setFilters({\n      ageGroup: \"ALL\",\n      region: \"ALL\",\n      profession: \"\"\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      user: currentUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"segments-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"\\u0421\\u0435\\u0433\\u043C\\u0435\\u043D\\u0442\\u044B \\u043A\\u043B\\u0438\\u0435\\u043D\\u0442\\u043E\\u0432\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filters-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\u0424\\u0438\\u043B\\u044C\\u0442\\u0440\\u044B\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filters-grid\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"filter-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"ageGroup\",\n              children: \"\\u0412\\u043E\\u0437\\u0440\\u0430\\u0441\\u0442\\u043D\\u0430\\u044F \\u0433\\u0440\\u0443\\u043F\\u043F\\u0430:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"ageGroup\",\n              name: \"ageGroup\",\n              value: filters.ageGroup,\n              onChange: handleFilterChange,\n              children: ageGroups.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: option.value,\n                children: option.label\n              }, option.value, false, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"filter-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"region\",\n              children: \"\\u0420\\u0435\\u0433\\u0438\\u043E\\u043D:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"region\",\n              name: \"region\",\n              value: filters.region,\n              onChange: handleFilterChange,\n              children: regions.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: option.value,\n                children: option.label\n              }, option.value, false, {\n                fileName: _jsxFileName,\n                lineNumber: 307,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"filter-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"profession\",\n              children: \"\\u041F\\u0440\\u043E\\u0444\\u0435\\u0441\\u0441\\u0438\\u044F:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"profession\",\n              name: \"profession\",\n              value: filters.profession,\n              onChange: handleFilterChange,\n              placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043F\\u0440\\u043E\\u0444\\u0435\\u0441\\u0441\\u0438\\u044E\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"clear-filters-btn\",\n            onClick: clearFilters,\n            children: \"\\u0421\\u0431\\u0440\\u043E\\u0441\\u0438\\u0442\\u044C \\u0444\\u0438\\u043B\\u044C\\u0442\\u0440\\u044B\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\",\n        children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430 \\u043A\\u043B\\u0438\\u0435\\u043D\\u0442\\u043E\\u0432...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"clients-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"results-summary\",\n          children: [\"\\u041D\\u0430\\u0439\\u0434\\u0435\\u043D\\u043E \\u043A\\u043B\\u0438\\u0435\\u043D\\u0442\\u043E\\u0432: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: filteredClients.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 33\n          }, this), \" \\u0438\\u0437\", \" \", processedClients.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 344,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"\\u0418\\u043C\\u044F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 345,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 346,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"\\u0422\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 347,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"\\u0412\\u043E\\u0437\\u0440\\u0430\\u0441\\u0442\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 348,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"\\u0420\\u0435\\u0433\\u0438\\u043E\\u043D\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 349,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"\\u041F\\u0440\\u043E\\u0444\\u0435\\u0441\\u0441\\u0438\\u044F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 350,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"\\u0414\\u0430\\u0442\\u0430 \\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0430\\u0446\\u0438\\u0438\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 351,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: filteredClients.length === 0 ? /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                colSpan: \"8\",\n                className: \"no-data\",\n                children: \"\\u041A\\u043B\\u0438\\u0435\\u043D\\u0442\\u044B \\u043D\\u0435 \\u043D\\u0430\\u0439\\u0434\\u0435\\u043D\\u044B\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 357,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 19\n            }, this) : filteredClients.map(client => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: client.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 364,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: client.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 365,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: client.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 366,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: client.phone || \"—\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 367,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: client.originalAgeAnswer || getAgeGroupLabel(client.ageFromAnswer) || \"—\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 368,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: client.originalRegionAnswer || getRegionLabel(client.regionFromAnswer) || \"—\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 373,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: client.originalProfessionAnswer || \"—\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 378,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: formatDate(client.clientSince)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 379,\n                columnNumber: 23\n              }, this)]\n            }, client.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 363,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info-block\",\n        style: {\n          marginTop: \"20px\",\n          padding: \"15px\",\n          backgroundColor: \"#f8f9fa\",\n          borderRadius: \"8px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\u0418\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u044F \\u043E \\u0444\\u0438\\u043B\\u044C\\u0442\\u0440\\u0430\\u0445\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u0424\\u0438\\u043B\\u044C\\u0442\\u0440\\u0430\\u0446\\u0438\\u044F \\u043A\\u043B\\u0438\\u0435\\u043D\\u0442\\u043E\\u0432 \\u043F\\u0440\\u043E\\u0438\\u0441\\u0445\\u043E\\u0434\\u0438\\u0442 \\u043D\\u0430 \\u043E\\u0441\\u043D\\u043E\\u0432\\u0435 \\u0438\\u0445 \\u043E\\u0442\\u0432\\u0435\\u0442\\u043E\\u0432 \\u043D\\u0430 \\u0441\\u043B\\u0435\\u0434\\u0443\\u044E\\u0449\\u0438\\u0435 \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\\u044B \\u0438\\u0437 \\u0431\\u0430\\u0437\\u043E\\u0432\\u043E\\u0433\\u043E \\u043E\\u043F\\u0440\\u043E\\u0441\\u043D\\u0438\\u043A\\u0430:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"\\u0412\\u043E\\u0437\\u0440\\u0430\\u0441\\u0442:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 405,\n              columnNumber: 15\n            }, this), \" \\\"\\u0423\\u043A\\u0430\\u0436\\u0438\\u0442\\u0435 \\u0432\\u0430\\u0448 \\u0432\\u043E\\u0437\\u0440\\u0430\\u0441\\u0442\\\" (\\u0412\\u043E\\u043F\\u0440\\u043E\\u0441 \\u2116\", AGE_QUESTION_ID, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 404,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"\\u0420\\u0435\\u0433\\u0438\\u043E\\u043D:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 409,\n              columnNumber: 15\n            }, this), \" \\\"\\u0418\\u0437 \\u043A\\u0430\\u043A\\u043E\\u0433\\u043E \\u0440\\u0435\\u0433\\u0438\\u043E\\u043D\\u0430 \\u0411\\u0435\\u043B\\u0430\\u0440\\u0443\\u0441\\u0438 \\u0432\\u044B?\\\" (\\u0412\\u043E\\u043F\\u0440\\u043E\\u0441 \\u2116\", REGION_QUESTION_ID, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"\\u041F\\u0440\\u043E\\u0444\\u0435\\u0441\\u0441\\u0438\\u044F:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 413,\n              columnNumber: 15\n            }, this), \" \\\"\\u0412\\u0430\\u0448\\u0430 \\u043F\\u0440\\u043E\\u0444\\u0435\\u0441\\u0441\\u0438\\u044F \\u0438\\u043B\\u0438 \\u0441\\u0444\\u0435\\u0440\\u0430 \\u0434\\u0435\\u044F\\u0442\\u0435\\u043B\\u044C\\u043D\\u043E\\u0441\\u0442\\u0438\\\" (\\u0412\\u043E\\u043F\\u0440\\u043E\\u0441 \\u2116\", PROFESSION_QUESTION_ID, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 270,\n    columnNumber: 5\n  }, this);\n};\n_s(ClientSegmentsPage, \"ubgeF6iEZ9RO7fpNotroeSGrkbM=\", false, function () {\n  return [useNavigate];\n});\n_c = ClientSegmentsPage;\nexport default ClientSegmentsPage;\nvar _c;\n$RefreshReg$(_c, \"ClientSegmentsPage\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","useNavigate","Sidebar","authService","clientSegmentsService","jsxDEV","_jsxDEV","getAgeGroupLabel","ageGroup","groups","AGE_18_24","AGE_25_34","AGE_35_44","AGE_45_54","AGE_55_PLUS","getRegionLabel","region","regions","BREST","VITEBSK","GOMEL","GRODNO","MINSK_REGION","MOGILEV","MINSK_CITY","formatDate","dateString","date","Date","toLocaleDateString","e","mapAgeAnswerToGroup","answer","toLowerCase","trim","includes","numMatch","match","age","parseInt","mapRegionAnswer","ClientSegmentsPage","_s","clients","setClients","filteredClients","setFilteredClients","loading","setLoading","error","setError","currentUser","setCurrentUser","filters","setFilters","profession","AGE_QUESTION_ID","REGION_QUESTION_ID","PROFESSION_QUESTION_ID","ageGroups","value","label","navigate","user","getCurrentUser","role","fetchClients","processedClients","map","client","answers","ageAnswer","regionAnswer","professionAnswer","forEach","questionId","mappedAgeGroup","mappedRegion","ageFromAnswer","regionFromAnswer","professionFromAnswer","originalAgeAnswer","originalRegionAnswer","originalProfessionAnswer","length","filter","clientProfession","searchProfession","clientsData","getClientsWithAnswers","err","_err$response","_err$response$data","response","data","message","console","handleFilterChange","name","target","clearFilters","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","onChange","option","type","placeholder","onClick","colSpan","email","phone","clientSince","style","marginTop","padding","backgroundColor","borderRadius","_c","$RefreshReg$"],"sources":["/Users/shirokiy/Desktop/Repositories/Дипломы/ClientExp/client_exp-frontend/src/pages/Dashboard/ClientSegmentsPage.jsx"],"sourcesContent":["import React, { useState, useEffect, useMemo } from \"react\"\nimport { useNavigate } from \"react-router-dom\"\nimport Sidebar from \"../../components/common/Sidebar\"\nimport { authService } from \"../../api/auth\"\nimport { clientSegmentsService } from \"../../api/client-segments\"\nimport \"./DashboardStyles.css\"\n\n// Вспомогательные функции форматирования данных\nconst getAgeGroupLabel = ageGroup => {\n  const groups = {\n    AGE_18_24: \"18-24 года\",\n    AGE_25_34: \"25-34 года\",\n    AGE_35_44: \"35-44 года\",\n    AGE_45_54: \"45-54 года\",\n    AGE_55_PLUS: \"55+ лет\",\n  }\n  return groups[ageGroup] || ageGroup || \"—\"\n}\n\nconst getRegionLabel = region => {\n  const regions = {\n    BREST: \"Брестская область\",\n    VITEBSK: \"Витебская область\",\n    GOMEL: \"Гомельская область\",\n    GRODNO: \"Гродненская область\",\n    MINSK_REGION: \"Минская область\",\n    MOGILEV: \"Могилевская область\",\n    MINSK_CITY: \"г. Минск\",\n  }\n  return regions[region] || region || \"—\"\n}\n\nconst formatDate = dateString => {\n  if (!dateString) return \"—\"\n\n  try {\n    const date = new Date(dateString)\n    return date.toLocaleDateString(\"ru-RU\")\n  } catch (e) {\n    return dateString\n  }\n}\n\n// Функция для преобразования текстового ответа о возрасте в группу\nconst mapAgeAnswerToGroup = answer => {\n  if (!answer) return null\n\n  answer = answer.toLowerCase().trim()\n\n  // Прямое соответствие для стандартных форматов возрастных групп\n  if (answer.includes(\"до 18\") || answer.includes(\"менее 18\")) {\n    return \"AGE_UNDER_18\"\n  } else if (answer.includes(\"18–25\") || answer.includes(\"18-25\")) {\n    return \"AGE_18_24\"\n  } else if (answer.includes(\"26–35\") || answer.includes(\"26-35\")) {\n    return \"AGE_25_34\"\n  } else if (answer.includes(\"36–45\") || answer.includes(\"36-45\")) {\n    return \"AGE_35_44\"\n  } else if (answer.includes(\"46–60\") || answer.includes(\"46-60\")) {\n    return \"AGE_45_54\"\n  } else if (answer.includes(\"60+\") || answer.includes(\"старше 60\")) {\n    return \"AGE_55_PLUS\"\n  }\n\n  // Пытаемся извлечь числовое значение из ответа\n  const numMatch = answer.match(/\\d+/)\n  if (numMatch) {\n    const age = parseInt(numMatch[0])\n    if (age < 18) return \"AGE_UNDER_18\"\n    if (age >= 18 && age <= 25) return \"AGE_18_24\"\n    if (age >= 26 && age <= 35) return \"AGE_25_34\"\n    if (age >= 36 && age <= 45) return \"AGE_35_44\"\n    if (age >= 46 && age <= 60) return \"AGE_45_54\"\n    if (age > 60) return \"AGE_55_PLUS\"\n  }\n\n  return null\n}\n\n// Функция для преобразования текстового ответа о регионе в стандартный формат\nconst mapRegionAnswer = answer => {\n  if (!answer) return null\n\n  answer = answer.toLowerCase().trim()\n\n  if (answer.includes(\"брест\")) {\n    return \"BREST\"\n  } else if (answer.includes(\"витебск\")) {\n    return \"VITEBSK\"\n  } else if (answer.includes(\"гомель\")) {\n    return \"GOMEL\"\n  } else if (answer.includes(\"гродн\")) {\n    return \"GRODNO\"\n  } else if (answer.includes(\"минская\") && answer.includes(\"область\")) {\n    return \"MINSK_REGION\"\n  } else if (answer.includes(\"могилев\")) {\n    return \"MOGILEV\"\n  } else if (answer.includes(\"минск\") && !answer.includes(\"область\")) {\n    return \"MINSK_CITY\"\n  }\n\n  return null\n}\n\nconst ClientSegmentsPage = () => {\n  const [clients, setClients] = useState([])\n  const [filteredClients, setFilteredClients] = useState([])\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState(null)\n  const [currentUser, setCurrentUser] = useState(null)\n\n  // Состояние для фильтров\n  const [filters, setFilters] = useState({\n    ageGroup: \"ALL\",\n    region: \"ALL\",\n    profession: \"\",\n  })\n\n  // Идентификаторы вопросов согласно новой структуре опросника\n  const AGE_QUESTION_ID = 1 // \"Укажите ваш возраст\"\n  const REGION_QUESTION_ID = 2 // \"Из какого региона Беларуси вы?\"\n  const PROFESSION_QUESTION_ID = 3 // \"Ваша профессия или сфера деятельности\"\n\n  // Загружаем опции для фильтров\n  const ageGroups = [\n    { value: \"ALL\", label: \"Все возрасты\" },\n    { value: \"AGE_UNDER_18\", label: \"До 18 лет\" },\n    { value: \"AGE_18_24\", label: \"18–25 лет\" },\n    { value: \"AGE_25_34\", label: \"26–35 лет\" },\n    { value: \"AGE_35_44\", label: \"36–45 лет\" },\n    { value: \"AGE_45_54\", label: \"46–60 лет\" },\n    { value: \"AGE_55_PLUS\", label: \"60+ лет\" },\n  ]\n\n  const regions = [\n    { value: \"ALL\", label: \"Все регионы\" },\n    { value: \"BREST\", label: \"Брестская область\" },\n    { value: \"VITEBSK\", label: \"Витебская область\" },\n    { value: \"GOMEL\", label: \"Гомельская область\" },\n    { value: \"GRODNO\", label: \"Гродненская область\" },\n    { value: \"MINSK_REGION\", label: \"Минская область\" },\n    { value: \"MOGILEV\", label: \"Могилевская область\" },\n    { value: \"MINSK_CITY\", label: \"г. Минск\" },\n  ]\n\n  const navigate = useNavigate()\n\n  useEffect(() => {\n    const user = authService.getCurrentUser()\n    if (!user || (user.role !== \"ADMIN\" && user.role !== \"MANAGER\")) {\n      navigate(\"/login\")\n      return\n    }\n    setCurrentUser(user)\n\n    fetchClients()\n  }, [navigate])\n\n  // Обрабатываем клиентов, извлекая информацию из их ответов\n  const processedClients = useMemo(() => {\n    return clients.map(client => {\n      const answers = client.answers || []\n\n      // Извлекаем ответы на вопросы о возрасте, регионе и профессии\n      let ageAnswer = null\n      let regionAnswer = null\n      let professionAnswer = null\n\n      answers.forEach(answer => {\n        if (answer.questionId === AGE_QUESTION_ID) {\n          ageAnswer = answer.answer\n        } else if (answer.questionId === REGION_QUESTION_ID) {\n          regionAnswer = answer.answer\n        } else if (answer.questionId === PROFESSION_QUESTION_ID) {\n          professionAnswer = answer.answer\n        }\n      })\n\n      // Преобразуем текстовые ответы в значения для фильтров\n      const mappedAgeGroup = mapAgeAnswerToGroup(ageAnswer)\n      const mappedRegion = mapRegionAnswer(regionAnswer)\n\n      return {\n        ...client,\n        // Переопределяем значения для фильтрации на основе ответов\n        ageFromAnswer: mappedAgeGroup,\n        regionFromAnswer: mappedRegion,\n        professionFromAnswer: professionAnswer,\n        // Сохраняем оригинальные ответы для отображения\n        originalAgeAnswer: ageAnswer,\n        originalRegionAnswer: regionAnswer,\n        originalProfessionAnswer: professionAnswer,\n      }\n    })\n  }, [clients, AGE_QUESTION_ID, REGION_QUESTION_ID, PROFESSION_QUESTION_ID])\n\n  // При изменении фильтров обновляем отфильтрованный список\n  useEffect(() => {\n    if (processedClients.length > 0) {\n      // Фильтруем клиентов на основе ответов на вопросы\n      setFilteredClients(\n        processedClients.filter(client => {\n          // Фильтр по возрастной группе на основе ответа на вопрос\n          if (\n            filters.ageGroup &&\n            filters.ageGroup !== \"ALL\" &&\n            client.ageFromAnswer !== filters.ageGroup\n          ) {\n            return false\n          }\n\n          // Фильтр по региону на основе ответа на вопрос\n          if (\n            filters.region &&\n            filters.region !== \"ALL\" &&\n            client.regionFromAnswer !== filters.region\n          ) {\n            return false\n          }\n\n          // Фильтр по профессии на основе ответа на вопрос\n          if (filters.profession && client.professionFromAnswer) {\n            const clientProfession = client.professionFromAnswer.toLowerCase()\n            const searchProfession = filters.profession.toLowerCase()\n            if (!clientProfession.includes(searchProfession)) {\n              return false\n            }\n          }\n\n          return true\n        })\n      )\n    }\n  }, [processedClients, filters])\n\n  const fetchClients = async () => {\n    try {\n      setLoading(true)\n      const clientsData = await clientSegmentsService.getClientsWithAnswers()\n      setClients(clientsData)\n      setError(null)\n    } catch (err) {\n      setError(\n        \"Ошибка при загрузке клиентов: \" +\n          (err.response?.data?.message || err.message)\n      )\n      console.error(\"Failed to fetch clients:\", err)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const handleFilterChange = e => {\n    const { name, value } = e.target\n    setFilters({\n      ...filters,\n      [name]: value,\n    })\n  }\n\n  const clearFilters = () => {\n    setFilters({\n      ageGroup: \"ALL\",\n      region: \"ALL\",\n      profession: \"\",\n    })\n  }\n\n  return (\n    <div className=\"dashboard-container\">\n      <Sidebar user={currentUser} />\n      <div className=\"dashboard-content\">\n        <div className=\"segments-header\">\n          <h1>Сегменты клиентов</h1>\n        </div>\n\n        {error && <div className=\"error-message\">{error}</div>}\n\n        <div className=\"filters-container\">\n          <h2>Фильтры</h2>\n          <div className=\"filters-grid\">\n            <div className=\"filter-group\">\n              <label htmlFor=\"ageGroup\">Возрастная группа:</label>\n              <select\n                id=\"ageGroup\"\n                name=\"ageGroup\"\n                value={filters.ageGroup}\n                onChange={handleFilterChange}\n              >\n                {ageGroups.map(option => (\n                  <option key={option.value} value={option.value}>\n                    {option.label}\n                  </option>\n                ))}\n              </select>\n            </div>\n\n            <div className=\"filter-group\">\n              <label htmlFor=\"region\">Регион:</label>\n              <select\n                id=\"region\"\n                name=\"region\"\n                value={filters.region}\n                onChange={handleFilterChange}\n              >\n                {regions.map(option => (\n                  <option key={option.value} value={option.value}>\n                    {option.label}\n                  </option>\n                ))}\n              </select>\n            </div>\n\n            <div className=\"filter-group\">\n              <label htmlFor=\"profession\">Профессия:</label>\n              <input\n                type=\"text\"\n                id=\"profession\"\n                name=\"profession\"\n                value={filters.profession}\n                onChange={handleFilterChange}\n                placeholder=\"Введите профессию\"\n              />\n            </div>\n\n            <button className=\"clear-filters-btn\" onClick={clearFilters}>\n              Сбросить фильтры\n            </button>\n          </div>\n        </div>\n\n        {loading ? (\n          <div className=\"loading-spinner\">Загрузка клиентов...</div>\n        ) : (\n          <div className=\"clients-list\">\n            <div className=\"results-summary\">\n              Найдено клиентов: <strong>{filteredClients.length}</strong> из{\" \"}\n              {processedClients.length}\n            </div>\n\n            <table>\n              <thead>\n                <tr>\n                  <th>ID</th>\n                  <th>Имя</th>\n                  <th>Email</th>\n                  <th>Телефон</th>\n                  <th>Возраст</th>\n                  <th>Регион</th>\n                  <th>Профессия</th>\n                  <th>Дата регистрации</th>\n                </tr>\n              </thead>\n              <tbody>\n                {filteredClients.length === 0 ? (\n                  <tr>\n                    <td colSpan=\"8\" className=\"no-data\">\n                      Клиенты не найдены\n                    </td>\n                  </tr>\n                ) : (\n                  filteredClients.map(client => (\n                    <tr key={client.id}>\n                      <td>{client.id}</td>\n                      <td>{client.name}</td>\n                      <td>{client.email}</td>\n                      <td>{client.phone || \"—\"}</td>\n                      <td>\n                        {client.originalAgeAnswer ||\n                          getAgeGroupLabel(client.ageFromAnswer) ||\n                          \"—\"}\n                      </td>\n                      <td>\n                        {client.originalRegionAnswer ||\n                          getRegionLabel(client.regionFromAnswer) ||\n                          \"—\"}\n                      </td>\n                      <td>{client.originalProfessionAnswer || \"—\"}</td>\n                      <td>{formatDate(client.clientSince)}</td>\n                    </tr>\n                  ))\n                )}\n              </tbody>\n            </table>\n          </div>\n        )}\n\n        {/* Информация о вопросах */}\n        <div\n          className=\"info-block\"\n          style={{\n            marginTop: \"20px\",\n            padding: \"15px\",\n            backgroundColor: \"#f8f9fa\",\n            borderRadius: \"8px\",\n          }}\n        >\n          <h3>Информация о фильтрах</h3>\n          <p>\n            Фильтрация клиентов происходит на основе их ответов на следующие\n            вопросы из базового опросника:\n          </p>\n          <ul>\n            <li>\n              <strong>Возраст:</strong> \"Укажите ваш возраст\" (Вопрос №\n              {AGE_QUESTION_ID})\n            </li>\n            <li>\n              <strong>Регион:</strong> \"Из какого региона Беларуси вы?\" (Вопрос\n              №{REGION_QUESTION_ID})\n            </li>\n            <li>\n              <strong>Профессия:</strong> \"Ваша профессия или сфера\n              деятельности\" (Вопрос №{PROFESSION_QUESTION_ID})\n            </li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default ClientSegmentsPage\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,OAAO,QAAQ,OAAO;AAC3D,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,OAAO,MAAM,iCAAiC;AACrD,SAASC,WAAW,QAAQ,gBAAgB;AAC5C,SAASC,qBAAqB,QAAQ,2BAA2B;AACjE,OAAO,uBAAuB;;AAE9B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,gBAAgB,GAAGC,QAAQ,IAAI;EACnC,MAAMC,MAAM,GAAG;IACbC,SAAS,EAAE,YAAY;IACvBC,SAAS,EAAE,YAAY;IACvBC,SAAS,EAAE,YAAY;IACvBC,SAAS,EAAE,YAAY;IACvBC,WAAW,EAAE;EACf,CAAC;EACD,OAAOL,MAAM,CAACD,QAAQ,CAAC,IAAIA,QAAQ,IAAI,GAAG;AAC5C,CAAC;AAED,MAAMO,cAAc,GAAGC,MAAM,IAAI;EAC/B,MAAMC,OAAO,GAAG;IACdC,KAAK,EAAE,mBAAmB;IAC1BC,OAAO,EAAE,mBAAmB;IAC5BC,KAAK,EAAE,oBAAoB;IAC3BC,MAAM,EAAE,qBAAqB;IAC7BC,YAAY,EAAE,iBAAiB;IAC/BC,OAAO,EAAE,qBAAqB;IAC9BC,UAAU,EAAE;EACd,CAAC;EACD,OAAOP,OAAO,CAACD,MAAM,CAAC,IAAIA,MAAM,IAAI,GAAG;AACzC,CAAC;AAED,MAAMS,UAAU,GAAGC,UAAU,IAAI;EAC/B,IAAI,CAACA,UAAU,EAAE,OAAO,GAAG;EAE3B,IAAI;IACF,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAACF,UAAU,CAAC;IACjC,OAAOC,IAAI,CAACE,kBAAkB,CAAC,OAAO,CAAC;EACzC,CAAC,CAAC,OAAOC,CAAC,EAAE;IACV,OAAOJ,UAAU;EACnB;AACF,CAAC;;AAED;AACA,MAAMK,mBAAmB,GAAGC,MAAM,IAAI;EACpC,IAAI,CAACA,MAAM,EAAE,OAAO,IAAI;EAExBA,MAAM,GAAGA,MAAM,CAACC,WAAW,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC;;EAEpC;EACA,IAAIF,MAAM,CAACG,QAAQ,CAAC,OAAO,CAAC,IAAIH,MAAM,CAACG,QAAQ,CAAC,UAAU,CAAC,EAAE;IAC3D,OAAO,cAAc;EACvB,CAAC,MAAM,IAAIH,MAAM,CAACG,QAAQ,CAAC,OAAO,CAAC,IAAIH,MAAM,CAACG,QAAQ,CAAC,OAAO,CAAC,EAAE;IAC/D,OAAO,WAAW;EACpB,CAAC,MAAM,IAAIH,MAAM,CAACG,QAAQ,CAAC,OAAO,CAAC,IAAIH,MAAM,CAACG,QAAQ,CAAC,OAAO,CAAC,EAAE;IAC/D,OAAO,WAAW;EACpB,CAAC,MAAM,IAAIH,MAAM,CAACG,QAAQ,CAAC,OAAO,CAAC,IAAIH,MAAM,CAACG,QAAQ,CAAC,OAAO,CAAC,EAAE;IAC/D,OAAO,WAAW;EACpB,CAAC,MAAM,IAAIH,MAAM,CAACG,QAAQ,CAAC,OAAO,CAAC,IAAIH,MAAM,CAACG,QAAQ,CAAC,OAAO,CAAC,EAAE;IAC/D,OAAO,WAAW;EACpB,CAAC,MAAM,IAAIH,MAAM,CAACG,QAAQ,CAAC,KAAK,CAAC,IAAIH,MAAM,CAACG,QAAQ,CAAC,WAAW,CAAC,EAAE;IACjE,OAAO,aAAa;EACtB;;EAEA;EACA,MAAMC,QAAQ,GAAGJ,MAAM,CAACK,KAAK,CAAC,KAAK,CAAC;EACpC,IAAID,QAAQ,EAAE;IACZ,MAAME,GAAG,GAAGC,QAAQ,CAACH,QAAQ,CAAC,CAAC,CAAC,CAAC;IACjC,IAAIE,GAAG,GAAG,EAAE,EAAE,OAAO,cAAc;IACnC,IAAIA,GAAG,IAAI,EAAE,IAAIA,GAAG,IAAI,EAAE,EAAE,OAAO,WAAW;IAC9C,IAAIA,GAAG,IAAI,EAAE,IAAIA,GAAG,IAAI,EAAE,EAAE,OAAO,WAAW;IAC9C,IAAIA,GAAG,IAAI,EAAE,IAAIA,GAAG,IAAI,EAAE,EAAE,OAAO,WAAW;IAC9C,IAAIA,GAAG,IAAI,EAAE,IAAIA,GAAG,IAAI,EAAE,EAAE,OAAO,WAAW;IAC9C,IAAIA,GAAG,GAAG,EAAE,EAAE,OAAO,aAAa;EACpC;EAEA,OAAO,IAAI;AACb,CAAC;;AAED;AACA,MAAME,eAAe,GAAGR,MAAM,IAAI;EAChC,IAAI,CAACA,MAAM,EAAE,OAAO,IAAI;EAExBA,MAAM,GAAGA,MAAM,CAACC,WAAW,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC;EAEpC,IAAIF,MAAM,CAACG,QAAQ,CAAC,OAAO,CAAC,EAAE;IAC5B,OAAO,OAAO;EAChB,CAAC,MAAM,IAAIH,MAAM,CAACG,QAAQ,CAAC,SAAS,CAAC,EAAE;IACrC,OAAO,SAAS;EAClB,CAAC,MAAM,IAAIH,MAAM,CAACG,QAAQ,CAAC,QAAQ,CAAC,EAAE;IACpC,OAAO,OAAO;EAChB,CAAC,MAAM,IAAIH,MAAM,CAACG,QAAQ,CAAC,OAAO,CAAC,EAAE;IACnC,OAAO,QAAQ;EACjB,CAAC,MAAM,IAAIH,MAAM,CAACG,QAAQ,CAAC,SAAS,CAAC,IAAIH,MAAM,CAACG,QAAQ,CAAC,SAAS,CAAC,EAAE;IACnE,OAAO,cAAc;EACvB,CAAC,MAAM,IAAIH,MAAM,CAACG,QAAQ,CAAC,SAAS,CAAC,EAAE;IACrC,OAAO,SAAS;EAClB,CAAC,MAAM,IAAIH,MAAM,CAACG,QAAQ,CAAC,OAAO,CAAC,IAAI,CAACH,MAAM,CAACG,QAAQ,CAAC,SAAS,CAAC,EAAE;IAClE,OAAO,YAAY;EACrB;EAEA,OAAO,IAAI;AACb,CAAC;AAED,MAAMM,kBAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAG9C,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAAC+C,eAAe,EAAEC,kBAAkB,CAAC,GAAGhD,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACiD,OAAO,EAAEC,UAAU,CAAC,GAAGlD,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACmD,KAAK,EAAEC,QAAQ,CAAC,GAAGpD,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACqD,WAAW,EAAEC,cAAc,CAAC,GAAGtD,QAAQ,CAAC,IAAI,CAAC;;EAEpD;EACA,MAAM,CAACuD,OAAO,EAAEC,UAAU,CAAC,GAAGxD,QAAQ,CAAC;IACrCU,QAAQ,EAAE,KAAK;IACfQ,MAAM,EAAE,KAAK;IACbuC,UAAU,EAAE;EACd,CAAC,CAAC;;EAEF;EACA,MAAMC,eAAe,GAAG,CAAC,EAAC;EAC1B,MAAMC,kBAAkB,GAAG,CAAC,EAAC;EAC7B,MAAMC,sBAAsB,GAAG,CAAC,EAAC;;EAEjC;EACA,MAAMC,SAAS,GAAG,CAChB;IAAEC,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAe,CAAC,EACvC;IAAED,KAAK,EAAE,cAAc;IAAEC,KAAK,EAAE;EAAY,CAAC,EAC7C;IAAED,KAAK,EAAE,WAAW;IAAEC,KAAK,EAAE;EAAY,CAAC,EAC1C;IAAED,KAAK,EAAE,WAAW;IAAEC,KAAK,EAAE;EAAY,CAAC,EAC1C;IAAED,KAAK,EAAE,WAAW;IAAEC,KAAK,EAAE;EAAY,CAAC,EAC1C;IAAED,KAAK,EAAE,WAAW;IAAEC,KAAK,EAAE;EAAY,CAAC,EAC1C;IAAED,KAAK,EAAE,aAAa;IAAEC,KAAK,EAAE;EAAU,CAAC,CAC3C;EAED,MAAM5C,OAAO,GAAG,CACd;IAAE2C,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAc,CAAC,EACtC;IAAED,KAAK,EAAE,OAAO;IAAEC,KAAK,EAAE;EAAoB,CAAC,EAC9C;IAAED,KAAK,EAAE,SAAS;IAAEC,KAAK,EAAE;EAAoB,CAAC,EAChD;IAAED,KAAK,EAAE,OAAO;IAAEC,KAAK,EAAE;EAAqB,CAAC,EAC/C;IAAED,KAAK,EAAE,QAAQ;IAAEC,KAAK,EAAE;EAAsB,CAAC,EACjD;IAAED,KAAK,EAAE,cAAc;IAAEC,KAAK,EAAE;EAAkB,CAAC,EACnD;IAAED,KAAK,EAAE,SAAS;IAAEC,KAAK,EAAE;EAAsB,CAAC,EAClD;IAAED,KAAK,EAAE,YAAY;IAAEC,KAAK,EAAE;EAAW,CAAC,CAC3C;EAED,MAAMC,QAAQ,GAAG7D,WAAW,CAAC,CAAC;EAE9BF,SAAS,CAAC,MAAM;IACd,MAAMgE,IAAI,GAAG5D,WAAW,CAAC6D,cAAc,CAAC,CAAC;IACzC,IAAI,CAACD,IAAI,IAAKA,IAAI,CAACE,IAAI,KAAK,OAAO,IAAIF,IAAI,CAACE,IAAI,KAAK,SAAU,EAAE;MAC/DH,QAAQ,CAAC,QAAQ,CAAC;MAClB;IACF;IACAV,cAAc,CAACW,IAAI,CAAC;IAEpBG,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,CAACJ,QAAQ,CAAC,CAAC;;EAEd;EACA,MAAMK,gBAAgB,GAAGnE,OAAO,CAAC,MAAM;IACrC,OAAO2C,OAAO,CAACyB,GAAG,CAACC,MAAM,IAAI;MAC3B,MAAMC,OAAO,GAAGD,MAAM,CAACC,OAAO,IAAI,EAAE;;MAEpC;MACA,IAAIC,SAAS,GAAG,IAAI;MACpB,IAAIC,YAAY,GAAG,IAAI;MACvB,IAAIC,gBAAgB,GAAG,IAAI;MAE3BH,OAAO,CAACI,OAAO,CAAC1C,MAAM,IAAI;QACxB,IAAIA,MAAM,CAAC2C,UAAU,KAAKnB,eAAe,EAAE;UACzCe,SAAS,GAAGvC,MAAM,CAACA,MAAM;QAC3B,CAAC,MAAM,IAAIA,MAAM,CAAC2C,UAAU,KAAKlB,kBAAkB,EAAE;UACnDe,YAAY,GAAGxC,MAAM,CAACA,MAAM;QAC9B,CAAC,MAAM,IAAIA,MAAM,CAAC2C,UAAU,KAAKjB,sBAAsB,EAAE;UACvDe,gBAAgB,GAAGzC,MAAM,CAACA,MAAM;QAClC;MACF,CAAC,CAAC;;MAEF;MACA,MAAM4C,cAAc,GAAG7C,mBAAmB,CAACwC,SAAS,CAAC;MACrD,MAAMM,YAAY,GAAGrC,eAAe,CAACgC,YAAY,CAAC;MAElD,OAAO;QACL,GAAGH,MAAM;QACT;QACAS,aAAa,EAAEF,cAAc;QAC7BG,gBAAgB,EAAEF,YAAY;QAC9BG,oBAAoB,EAAEP,gBAAgB;QACtC;QACAQ,iBAAiB,EAAEV,SAAS;QAC5BW,oBAAoB,EAAEV,YAAY;QAClCW,wBAAwB,EAAEV;MAC5B,CAAC;IACH,CAAC,CAAC;EACJ,CAAC,EAAE,CAAC9B,OAAO,EAAEa,eAAe,EAAEC,kBAAkB,EAAEC,sBAAsB,CAAC,CAAC;;EAE1E;EACA3D,SAAS,CAAC,MAAM;IACd,IAAIoE,gBAAgB,CAACiB,MAAM,GAAG,CAAC,EAAE;MAC/B;MACAtC,kBAAkB,CAChBqB,gBAAgB,CAACkB,MAAM,CAAChB,MAAM,IAAI;QAChC;QACA,IACEhB,OAAO,CAAC7C,QAAQ,IAChB6C,OAAO,CAAC7C,QAAQ,KAAK,KAAK,IAC1B6D,MAAM,CAACS,aAAa,KAAKzB,OAAO,CAAC7C,QAAQ,EACzC;UACA,OAAO,KAAK;QACd;;QAEA;QACA,IACE6C,OAAO,CAACrC,MAAM,IACdqC,OAAO,CAACrC,MAAM,KAAK,KAAK,IACxBqD,MAAM,CAACU,gBAAgB,KAAK1B,OAAO,CAACrC,MAAM,EAC1C;UACA,OAAO,KAAK;QACd;;QAEA;QACA,IAAIqC,OAAO,CAACE,UAAU,IAAIc,MAAM,CAACW,oBAAoB,EAAE;UACrD,MAAMM,gBAAgB,GAAGjB,MAAM,CAACW,oBAAoB,CAAC/C,WAAW,CAAC,CAAC;UAClE,MAAMsD,gBAAgB,GAAGlC,OAAO,CAACE,UAAU,CAACtB,WAAW,CAAC,CAAC;UACzD,IAAI,CAACqD,gBAAgB,CAACnD,QAAQ,CAACoD,gBAAgB,CAAC,EAAE;YAChD,OAAO,KAAK;UACd;QACF;QAEA,OAAO,IAAI;MACb,CAAC,CACH,CAAC;IACH;EACF,CAAC,EAAE,CAACpB,gBAAgB,EAAEd,OAAO,CAAC,CAAC;EAE/B,MAAMa,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACFlB,UAAU,CAAC,IAAI,CAAC;MAChB,MAAMwC,WAAW,GAAG,MAAMpF,qBAAqB,CAACqF,qBAAqB,CAAC,CAAC;MACvE7C,UAAU,CAAC4C,WAAW,CAAC;MACvBtC,QAAQ,CAAC,IAAI,CAAC;IAChB,CAAC,CAAC,OAAOwC,GAAG,EAAE;MAAA,IAAAC,aAAA,EAAAC,kBAAA;MACZ1C,QAAQ,CACN,gCAAgC,IAC7B,EAAAyC,aAAA,GAAAD,GAAG,CAACG,QAAQ,cAAAF,aAAA,wBAAAC,kBAAA,GAAZD,aAAA,CAAcG,IAAI,cAAAF,kBAAA,uBAAlBA,kBAAA,CAAoBG,OAAO,KAAIL,GAAG,CAACK,OAAO,CAC/C,CAAC;MACDC,OAAO,CAAC/C,KAAK,CAAC,0BAA0B,EAAEyC,GAAG,CAAC;IAChD,CAAC,SAAS;MACR1C,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMiD,kBAAkB,GAAGnE,CAAC,IAAI;IAC9B,MAAM;MAAEoE,IAAI;MAAEtC;IAAM,CAAC,GAAG9B,CAAC,CAACqE,MAAM;IAChC7C,UAAU,CAAC;MACT,GAAGD,OAAO;MACV,CAAC6C,IAAI,GAAGtC;IACV,CAAC,CAAC;EACJ,CAAC;EAED,MAAMwC,YAAY,GAAGA,CAAA,KAAM;IACzB9C,UAAU,CAAC;MACT9C,QAAQ,EAAE,KAAK;MACfQ,MAAM,EAAE,KAAK;MACbuC,UAAU,EAAE;IACd,CAAC,CAAC;EACJ,CAAC;EAED,oBACEjD,OAAA;IAAK+F,SAAS,EAAC,qBAAqB;IAAAC,QAAA,gBAClChG,OAAA,CAACJ,OAAO;MAAC6D,IAAI,EAAEZ;IAAY;MAAAoD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC9BpG,OAAA;MAAK+F,SAAS,EAAC,mBAAmB;MAAAC,QAAA,gBAChChG,OAAA;QAAK+F,SAAS,EAAC,iBAAiB;QAAAC,QAAA,eAC9BhG,OAAA;UAAAgG,QAAA,EAAI;QAAiB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvB,CAAC,EAELzD,KAAK,iBAAI3C,OAAA;QAAK+F,SAAS,EAAC,eAAe;QAAAC,QAAA,EAAErD;MAAK;QAAAsD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAEtDpG,OAAA;QAAK+F,SAAS,EAAC,mBAAmB;QAAAC,QAAA,gBAChChG,OAAA;UAAAgG,QAAA,EAAI;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAChBpG,OAAA;UAAK+F,SAAS,EAAC,cAAc;UAAAC,QAAA,gBAC3BhG,OAAA;YAAK+F,SAAS,EAAC,cAAc;YAAAC,QAAA,gBAC3BhG,OAAA;cAAOqG,OAAO,EAAC,UAAU;cAAAL,QAAA,EAAC;YAAkB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACpDpG,OAAA;cACEsG,EAAE,EAAC,UAAU;cACbV,IAAI,EAAC,UAAU;cACftC,KAAK,EAAEP,OAAO,CAAC7C,QAAS;cACxBqG,QAAQ,EAAEZ,kBAAmB;cAAAK,QAAA,EAE5B3C,SAAS,CAACS,GAAG,CAAC0C,MAAM,iBACnBxG,OAAA;gBAA2BsD,KAAK,EAAEkD,MAAM,CAAClD,KAAM;gBAAA0C,QAAA,EAC5CQ,MAAM,CAACjD;cAAK,GADFiD,MAAM,CAAClD,KAAK;gBAAA2C,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAEjB,CACT;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC,eAENpG,OAAA;YAAK+F,SAAS,EAAC,cAAc;YAAAC,QAAA,gBAC3BhG,OAAA;cAAOqG,OAAO,EAAC,QAAQ;cAAAL,QAAA,EAAC;YAAO;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACvCpG,OAAA;cACEsG,EAAE,EAAC,QAAQ;cACXV,IAAI,EAAC,QAAQ;cACbtC,KAAK,EAAEP,OAAO,CAACrC,MAAO;cACtB6F,QAAQ,EAAEZ,kBAAmB;cAAAK,QAAA,EAE5BrF,OAAO,CAACmD,GAAG,CAAC0C,MAAM,iBACjBxG,OAAA;gBAA2BsD,KAAK,EAAEkD,MAAM,CAAClD,KAAM;gBAAA0C,QAAA,EAC5CQ,MAAM,CAACjD;cAAK,GADFiD,MAAM,CAAClD,KAAK;gBAAA2C,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAEjB,CACT;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC,eAENpG,OAAA;YAAK+F,SAAS,EAAC,cAAc;YAAAC,QAAA,gBAC3BhG,OAAA;cAAOqG,OAAO,EAAC,YAAY;cAAAL,QAAA,EAAC;YAAU;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eAC9CpG,OAAA;cACEyG,IAAI,EAAC,MAAM;cACXH,EAAE,EAAC,YAAY;cACfV,IAAI,EAAC,YAAY;cACjBtC,KAAK,EAAEP,OAAO,CAACE,UAAW;cAC1BsD,QAAQ,EAAEZ,kBAAmB;cAC7Be,WAAW,EAAC;YAAmB;cAAAT,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAChC,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,eAENpG,OAAA;YAAQ+F,SAAS,EAAC,mBAAmB;YAACY,OAAO,EAAEb,YAAa;YAAAE,QAAA,EAAC;UAE7D;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,EAEL3D,OAAO,gBACNzC,OAAA;QAAK+F,SAAS,EAAC,iBAAiB;QAAAC,QAAA,EAAC;MAAoB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,gBAE3DpG,OAAA;QAAK+F,SAAS,EAAC,cAAc;QAAAC,QAAA,gBAC3BhG,OAAA;UAAK+F,SAAS,EAAC,iBAAiB;UAAAC,QAAA,GAAC,+FACb,eAAAhG,OAAA;YAAAgG,QAAA,EAASzD,eAAe,CAACuC;UAAM;YAAAmB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAS,CAAC,iBAAG,EAAC,GAAG,EACjEvC,gBAAgB,CAACiB,MAAM;QAAA;UAAAmB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrB,CAAC,eAENpG,OAAA;UAAAgG,QAAA,gBACEhG,OAAA;YAAAgG,QAAA,eACEhG,OAAA;cAAAgG,QAAA,gBACEhG,OAAA;gBAAAgG,QAAA,EAAI;cAAE;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACXpG,OAAA;gBAAAgG,QAAA,EAAI;cAAG;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACZpG,OAAA;gBAAAgG,QAAA,EAAI;cAAK;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACdpG,OAAA;gBAAAgG,QAAA,EAAI;cAAO;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eAChBpG,OAAA;gBAAAgG,QAAA,EAAI;cAAO;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eAChBpG,OAAA;gBAAAgG,QAAA,EAAI;cAAM;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACfpG,OAAA;gBAAAgG,QAAA,EAAI;cAAS;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eAClBpG,OAAA;gBAAAgG,QAAA,EAAI;cAAgB;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACvB;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC,eACRpG,OAAA;YAAAgG,QAAA,EACGzD,eAAe,CAACuC,MAAM,KAAK,CAAC,gBAC3B9E,OAAA;cAAAgG,QAAA,eACEhG,OAAA;gBAAI4G,OAAO,EAAC,GAAG;gBAACb,SAAS,EAAC,SAAS;gBAAAC,QAAA,EAAC;cAEpC;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC,GAEL7D,eAAe,CAACuB,GAAG,CAACC,MAAM,iBACxB/D,OAAA;cAAAgG,QAAA,gBACEhG,OAAA;gBAAAgG,QAAA,EAAKjC,MAAM,CAACuC;cAAE;gBAAAL,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACpBpG,OAAA;gBAAAgG,QAAA,EAAKjC,MAAM,CAAC6B;cAAI;gBAAAK,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACtBpG,OAAA;gBAAAgG,QAAA,EAAKjC,MAAM,CAAC8C;cAAK;gBAAAZ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACvBpG,OAAA;gBAAAgG,QAAA,EAAKjC,MAAM,CAAC+C,KAAK,IAAI;cAAG;gBAAAb,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eAC9BpG,OAAA;gBAAAgG,QAAA,EACGjC,MAAM,CAACY,iBAAiB,IACvB1E,gBAAgB,CAAC8D,MAAM,CAACS,aAAa,CAAC,IACtC;cAAG;gBAAAyB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH,CAAC,eACLpG,OAAA;gBAAAgG,QAAA,EACGjC,MAAM,CAACa,oBAAoB,IAC1BnE,cAAc,CAACsD,MAAM,CAACU,gBAAgB,CAAC,IACvC;cAAG;gBAAAwB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH,CAAC,eACLpG,OAAA;gBAAAgG,QAAA,EAAKjC,MAAM,CAACc,wBAAwB,IAAI;cAAG;gBAAAoB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACjDpG,OAAA;gBAAAgG,QAAA,EAAK7E,UAAU,CAAC4C,MAAM,CAACgD,WAAW;cAAC;gBAAAd,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC;YAAA,GAhBlCrC,MAAM,CAACuC,EAAE;cAAAL,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAiBd,CACL;UACF;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CACN,eAGDpG,OAAA;QACE+F,SAAS,EAAC,YAAY;QACtBiB,KAAK,EAAE;UACLC,SAAS,EAAE,MAAM;UACjBC,OAAO,EAAE,MAAM;UACfC,eAAe,EAAE,SAAS;UAC1BC,YAAY,EAAE;QAChB,CAAE;QAAApB,QAAA,gBAEFhG,OAAA;UAAAgG,QAAA,EAAI;QAAqB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC9BpG,OAAA;UAAAgG,QAAA,EAAG;QAGH;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACJpG,OAAA;UAAAgG,QAAA,gBACEhG,OAAA;YAAAgG,QAAA,gBACEhG,OAAA;cAAAgG,QAAA,EAAQ;YAAQ;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,8JACzB,EAAClD,eAAe,EAAC,GACnB;UAAA;YAAA+C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACLpG,OAAA;YAAAgG,QAAA,gBACEhG,OAAA;cAAAgG,QAAA,EAAQ;YAAO;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,iNACvB,EAACjD,kBAAkB,EAAC,GACvB;UAAA;YAAA8C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACLpG,OAAA;YAAAgG,QAAA,gBACEhG,OAAA;cAAAgG,QAAA,EAAQ;YAAU;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,gQACJ,EAAChD,sBAAsB,EAAC,GACjD;UAAA;YAAA6C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAAhE,EAAA,CA5TKD,kBAAkB;EAAA,QAyCLxC,WAAW;AAAA;AAAA0H,EAAA,GAzCxBlF,kBAAkB;AA8TxB,eAAeA,kBAAkB;AAAA,IAAAkF,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}