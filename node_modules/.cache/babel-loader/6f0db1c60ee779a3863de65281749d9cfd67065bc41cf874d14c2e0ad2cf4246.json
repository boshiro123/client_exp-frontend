{"ast":null,"code":"var _jsxFileName = \"/Users/shirokiy/Desktop/Repositories/\\u0414\\u0438\\u043F\\u043B\\u043E\\u043C\\u044B/ClientExp/client_exp-frontend/src/pages/Dashboard/DashboardPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { authService } from \"../../api/auth\";\nimport { surveyService } from \"../../api/survey\";\nimport { questionsService } from \"../../api/questions\";\nimport Sidebar from \"../../components/common/Sidebar\";\nimport \"../../components/common/AuthStyles.css\";\nimport \"./DashboardStyles.css\";\n\n// SVG иконки для кнопок действий\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst icons = {\n  edit: /*#__PURE__*/_jsxDEV(\"svg\", {\n    width: \"16\",\n    height: \"16\",\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    children: /*#__PURE__*/_jsxDEV(\"path\", {\n      d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34c-.39-.39-1.02-.39-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\",\n      fill: \"currentColor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this),\n  preview: /*#__PURE__*/_jsxDEV(\"svg\", {\n    width: \"16\",\n    height: \"16\",\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    children: /*#__PURE__*/_jsxDEV(\"path\", {\n      d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\",\n      fill: \"currentColor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this),\n  activate: /*#__PURE__*/_jsxDEV(\"svg\", {\n    width: \"16\",\n    height: \"16\",\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    children: /*#__PURE__*/_jsxDEV(\"path\", {\n      d: \"M8 5v14l11-7z\",\n      fill: \"currentColor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this),\n  stop: /*#__PURE__*/_jsxDEV(\"svg\", {\n    width: \"16\",\n    height: \"16\",\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    children: /*#__PURE__*/_jsxDEV(\"path\", {\n      d: \"M6 6h12v12H6z\",\n      fill: \"currentColor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this),\n  delete: /*#__PURE__*/_jsxDEV(\"svg\", {\n    width: \"16\",\n    height: \"16\",\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    children: /*#__PURE__*/_jsxDEV(\"path\", {\n      d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\",\n      fill: \"currentColor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this)\n};\nconst DashboardPage = () => {\n  _s();\n  const navigate = useNavigate();\n  const [user, setUser] = useState(null);\n  const [showSurveyForm, setShowSurveyForm] = useState(false);\n  const [surveyData, setSurveyData] = useState({\n    title: \"\",\n    description: \"\",\n    status: \"DRAFT\",\n    startDate: \"\",\n    endDate: \"\",\n    questions: [{\n      text: \"Укажите ваш возраст\",\n      type: \"single_choice\",\n      required: true,\n      category: \"Демографическая информация\",\n      options: [\"До 18 лет\", \"18–25 лет\", \"26–35 лет\", \"36–45 лет\", \"46–60 лет\", \"60+ лет\"]\n    }, {\n      text: \"Ваш пол\",\n      type: \"single_choice\",\n      required: true,\n      category: \"Демографическая информация\",\n      options: [\"Мужской\", \"Женский\"]\n    }, {\n      text: \"Ваша профессия или сфера деятельности\",\n      type: \"single_choice\",\n      required: false,\n      category: \"Демографическая информация\",\n      options: [\"Студент\", \"Фрилансер\", \"Офисный работник\", \"Руководитель/владелец бизнеса\", \"Другое\"]\n    }]\n  });\n  const [newQuestion, setNewQuestion] = useState({\n    text: \"\",\n    type: \"single_choice\",\n    required: false,\n    category: \"\",\n    options: [\"\"]\n  });\n  const [categories, setCategories] = useState([\"Демографическая информация\", \"Географическая сегментация\", \"Поведенческая сегментация\", \"Сегментация по удовлетворенности\", \"Сегментация по клиентскому пути\", \"Сегментация по мотивации и ценности клиента\"]);\n  const [newCategory, setNewCategory] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const [surveys, setSurveys] = useState([]);\n  const [surveysFetching, setSurveysFetching] = useState(false);\n  const [surveysError, setSurveysError] = useState(\"\");\n\n  // Состояния для работы с существующими вопросами\n  const [existingQuestions, setExistingQuestions] = useState([]);\n  const [showExistingQuestions, setShowExistingQuestions] = useState(false);\n  const [loadingQuestions, setLoadingQuestions] = useState(false);\n  const [selectedExistingQuestions, setSelectedExistingQuestions] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  useEffect(() => {\n    const currentUser = authService.getCurrentUser();\n    if (currentUser) {\n      setUser(currentUser);\n      fetchSurveys();\n    } else {\n      navigate(\"/login\");\n    }\n  }, [navigate]);\n  const fetchSurveys = async () => {\n    setSurveysFetching(true);\n    setSurveysError(\"\");\n    try {\n      const response = await surveyService.getAllSurveys();\n      console.log(\"Получены данные:\", response);\n\n      // Проверяем, есть ли поле content в ответе\n      if (response && response.content && Array.isArray(response.content)) {\n        console.log(`Получено ${response.content.length} опросников из поля content`);\n        setSurveys(response.content);\n      } else if (Array.isArray(response)) {\n        // На случай, если API вернет просто массив\n        console.log(`Получено ${response.length} опросников напрямую`);\n        setSurveys(response);\n      } else {\n        console.log(\"Ответ не содержит опросников в ожидаемом формате:\", response);\n        setSurveys([]);\n      }\n    } catch (error) {\n      console.error(\"Ошибка при получении опросников:\", error);\n      setSurveysError(\"Не удалось загрузить опросники. Пожалуйста, попробуйте позже.\");\n      setSurveys([]);\n    } finally {\n      setSurveysFetching(false);\n    }\n  };\n\n  // Функция для загрузки существующих вопросов\n  const fetchExistingQuestions = async () => {\n    setLoadingQuestions(true);\n    try {\n      const questions = await questionsService.getAllQuestions();\n      console.log(\"Получены существующие вопросы:\", questions);\n      setExistingQuestions(questions);\n    } catch (error) {\n      console.error(\"Ошибка при загрузке существующих вопросов:\", error);\n      alert(\"Не удалось загрузить существующие вопросы\");\n    } finally {\n      setLoadingQuestions(false);\n    }\n  };\n  const handleLogout = () => {\n    authService.logout();\n    navigate(\"/login\");\n  };\n  const handleCreateSurvey = () => {\n    // Сбрасываем форму на значения по умолчанию\n    setSurveyData({\n      title: \"\",\n      description: \"\",\n      status: \"DRAFT\",\n      startDate: \"\",\n      endDate: \"\",\n      questions: [{\n        text: \"Укажите ваш возраст\",\n        type: \"single_choice\",\n        required: true,\n        category: \"Демографическая информация\",\n        options: [\"До 18 лет\", \"18–25 лет\", \"26–35 лет\", \"36–45 лет\", \"46–60 лет\", \"60+ лет\"]\n      }, {\n        text: \"Ваш пол\",\n        type: \"single_choice\",\n        required: true,\n        category: \"Демографическая информация\",\n        options: [\"Мужской\", \"Женский\"]\n      }, {\n        text: \"Ваша профессия или сфера деятельности\",\n        type: \"single_choice\",\n        required: false,\n        category: \"Демографическая информация\",\n        options: [\"Студент\", \"Фрилансер\", \"Офисный работник\", \"Руководитель/владелец бизнеса\", \"Другое\"]\n      }]\n    });\n\n    // Очищаем сообщения об ошибках и успехе\n    setErrorMessage(\"\");\n    setSuccessMessage(\"\");\n\n    // Показываем форму создания\n    setShowSurveyForm(true);\n  };\n  const handleSurveyChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setSurveyData({\n      ...surveyData,\n      [name]: value\n    });\n  };\n  const handleQuestionChange = (e, index) => {\n    const {\n      name,\n      value\n    } = e.target;\n    const updatedQuestions = [...surveyData.questions];\n    updatedQuestions[index] = {\n      ...updatedQuestions[index],\n      [name]: value\n    };\n    setSurveyData({\n      ...surveyData,\n      questions: updatedQuestions\n    });\n  };\n  const handleOptionChange = (questionIndex, optionIndex, value) => {\n    const updatedQuestions = [...surveyData.questions];\n    updatedQuestions[questionIndex].options[optionIndex] = value;\n    setSurveyData({\n      ...surveyData,\n      questions: updatedQuestions\n    });\n  };\n  const addOption = questionIndex => {\n    const updatedQuestions = [...surveyData.questions];\n    updatedQuestions[questionIndex].options.push(\"\");\n    setSurveyData({\n      ...surveyData,\n      questions: updatedQuestions\n    });\n  };\n  const removeOption = (questionIndex, optionIndex) => {\n    const updatedQuestions = [...surveyData.questions];\n    updatedQuestions[questionIndex].options.splice(optionIndex, 1);\n    setSurveyData({\n      ...surveyData,\n      questions: updatedQuestions\n    });\n  };\n  const handleRequiredChange = index => {\n    const updatedQuestions = [...surveyData.questions];\n    updatedQuestions[index].required = !updatedQuestions[index].required;\n    setSurveyData({\n      ...surveyData,\n      questions: updatedQuestions\n    });\n  };\n  const handleNewQuestionChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewQuestion({\n      ...newQuestion,\n      [name]: value\n    });\n  };\n  const handleNewOptionChange = (index, value) => {\n    const updatedOptions = [...newQuestion.options];\n    updatedOptions[index] = value;\n    setNewQuestion({\n      ...newQuestion,\n      options: updatedOptions\n    });\n  };\n  const addNewOption = () => {\n    setNewQuestion({\n      ...newQuestion,\n      options: [...newQuestion.options, \"\"]\n    });\n  };\n  const removeNewOption = index => {\n    const updatedOptions = [...newQuestion.options];\n    updatedOptions.splice(index, 1);\n    setNewQuestion({\n      ...newQuestion,\n      options: updatedOptions\n    });\n  };\n  const addNewQuestion = () => {\n    if (newQuestion.text.trim() === \"\") {\n      alert(\"Вопрос не может быть пустым\");\n      return;\n    }\n    setSurveyData({\n      ...surveyData,\n      questions: [...surveyData.questions, {\n        ...newQuestion\n      }]\n    });\n\n    // Сбросить форму нового вопроса\n    setNewQuestion({\n      text: \"\",\n      type: \"single_choice\",\n      required: false,\n      category: newQuestion.category,\n      options: [\"\"]\n    });\n  };\n  const removeQuestion = index => {\n    if (index < 3) {\n      alert(\"Первые три вопроса обязательны и не могут быть удалены\");\n      return;\n    }\n    const updatedQuestions = [...surveyData.questions];\n    updatedQuestions.splice(index, 1);\n    setSurveyData({\n      ...surveyData,\n      questions: updatedQuestions\n    });\n  };\n  const addCategory = () => {\n    if (newCategory.trim() === \"\") return;\n    setCategories([...categories, newCategory]);\n    setNewCategory(\"\");\n  };\n\n  // Функция для показа модального окна с существующими вопросами\n  const handleShowExistingQuestions = () => {\n    if (existingQuestions.length === 0) {\n      fetchExistingQuestions();\n    }\n    setShowExistingQuestions(true);\n    setSelectedExistingQuestions([]);\n    setSearchTerm(\"\");\n  };\n\n  // Функция для закрытия модального окна\n  const handleCloseExistingQuestions = () => {\n    setShowExistingQuestions(false);\n    setSelectedExistingQuestions([]);\n    setSearchTerm(\"\");\n  };\n\n  // Функция для выбора/отмены выбора существующего вопроса\n  const toggleExistingQuestion = question => {\n    // Теперь выбираем только один вопрос\n    if (selectedExistingQuestions.length > 0 && selectedExistingQuestions[0].id === question.id) {\n      setSelectedExistingQuestions([]);\n    } else {\n      setSelectedExistingQuestions([question]);\n    }\n  };\n\n  // Функция для заполнения формы выбранным вопросом\n  const fillFormWithSelectedQuestion = () => {\n    if (selectedExistingQuestions.length === 0) return;\n    const question = selectedExistingQuestions[0];\n\n    // Преобразуем формат из базы вопросов в формат формы\n    let type = question.type;\n    if (type === \"SINGLE_CHOICE\") type = \"single_choice\";else if (type === \"MULTIPLE_CHOICE\") type = \"multiple_choice\";else if (type === \"TEXT\") type = \"text\";else if (type === \"RATING\") type = \"rating\";else type = type.toLowerCase();\n\n    // Заполняем форму нового вопроса\n    setNewQuestion({\n      text: question.text,\n      type: type,\n      required: question.required || false,\n      category: question.category || \"\",\n      options: question.options || [\"\"]\n    });\n    handleCloseExistingQuestions();\n\n    // Показываем уведомление\n    alert(\"Вопрос загружен в форму. Вы можете отредактировать его перед добавлением.\");\n  };\n\n  // Функция для фильтрации вопросов по поисковому запросу\n  const getFilteredQuestions = () => {\n    if (!searchTerm.trim()) return existingQuestions;\n    return existingQuestions.filter(question => question.text.toLowerCase().includes(searchTerm.toLowerCase()) || question.category && question.category.toLowerCase().includes(searchTerm.toLowerCase()));\n  };\n  const saveSurvey = async () => {\n    // Валидация данных опросника перед отправкой\n    if (!surveyData.title.trim()) {\n      setErrorMessage(\"Необходимо указать название опросника\");\n      return;\n    }\n    if (surveyData.questions.length < 3) {\n      setErrorMessage(\"Опросник должен содержать минимум 3 вопроса\");\n      return;\n    }\n\n    // Сброс сообщений об ошибках/успехе\n    setErrorMessage(\"\");\n    setSuccessMessage(\"\");\n    setIsLoading(true);\n    try {\n      // Преобразуем данные в формат, ожидаемый сервером\n      const serverData = {\n        ...surveyData,\n        // Преобразуем статус к верхнему регистру, если он в верблюжьем регистре\n        status: surveyData.status === \"черновик\" ? \"DRAFT\" : surveyData.status === \"активный\" ? \"ACTIVE\" : surveyData.status === \"завершенный\" ? \"COMPLETED\" : surveyData.status,\n        // Добавляем порядковые номера вопросам\n        questions: surveyData.questions.map((question, index) => ({\n          ...question,\n          orderNumber: index + 1,\n          // Преобразуем тип вопроса к формату сервера\n          type: question.type === \"single_choice\" ? \"SINGLE_CHOICE\" : question.type === \"multiple_choice\" ? \"MULTIPLE_CHOICE\" : question.type === \"text\" ? \"TEXT\" : question.type === \"rating\" ? \"RATING\" : question.type.toUpperCase()\n        }))\n      };\n      console.log(\"Отправка данных на сервер:\", serverData);\n      let response;\n      let successMsg;\n\n      // Если у опросника есть id, то это обновление, иначе - создание\n      if (surveyData.id) {\n        // Обновление существующего опросника\n        response = await surveyService.updateSurvey(surveyData.id, serverData);\n        successMsg = \"Опросник успешно обновлен!\";\n      } else {\n        // Создание нового опросника\n        response = await surveyService.createSurvey(serverData);\n        successMsg = \"Опросник успешно создан!\";\n      }\n      console.log(\"Опросник успешно сохранен:\", response);\n      setSuccessMessage(successMsg);\n\n      // Обновляем список опросников\n      fetchSurveys();\n\n      // Сброс формы и возврат к главному экрану через 2 секунды\n      setTimeout(() => {\n        setShowSurveyForm(false);\n        setSuccessMessage(\"\");\n      }, 2000);\n    } catch (error) {\n      console.error(\"Ошибка при сохранении опросника:\", error);\n      let errorMsg = \"Произошла ошибка при сохранении опросника. Пожалуйста, попробуйте позже.\";\n\n      // Обработка различных типов ошибок\n      if (error.response) {\n        var _error$response$data;\n        // Ошибка от сервера с кодом статуса\n        errorMsg = ((_error$response$data = error.response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || `Ошибка сервера: ${error.response.status} - ${error.response.statusText}`;\n      } else if (error.request) {\n        // Ошибка сети - запрос был отправлен, но ответ не получен\n        errorMsg = \"Сервер не отвечает. Проверьте подключение к Интернету.\";\n      } else {\n        // Ошибка при настройке запроса\n        errorMsg = `Ошибка при создании запроса: ${error.message}`;\n      }\n      setErrorMessage(errorMsg);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const cancelSurveyCreation = () => {\n    if (window.confirm(\"Вы уверены, что хотите отменить создание опросника? Все введенные данные будут потеряны.\")) {\n      setShowSurveyForm(false);\n    }\n  };\n  const handleEditSurvey = async id => {\n    try {\n      setIsLoading(true);\n      // Получаем детальную информацию об опроснике с сервера\n      const surveyDetails = await surveyService.getSurveyById(id);\n      console.log(\"Получены данные опросника для редактирования:\", surveyDetails);\n\n      // Преобразуем вопросы из формата сервера в формат интерфейса\n      const transformedQuestions = surveyDetails.questions.map(question => ({\n        ...question,\n        // Преобразуем тип вопроса из формата сервера в формат интерфейса\n        type: question.type === \"SINGLE_CHOICE\" ? \"single_choice\" : question.type === \"MULTIPLE_CHOICE\" ? \"multiple_choice\" : question.type === \"TEXT\" ? \"text\" : question.type === \"RATING\" ? \"rating\" : question.type.toLowerCase()\n      }));\n\n      // Устанавливаем данные опросника в состояние формы\n      setSurveyData({\n        ...surveyDetails,\n        questions: transformedQuestions\n      });\n\n      // Показываем форму для редактирования\n      setShowSurveyForm(true);\n      setIsLoading(false);\n    } catch (error) {\n      console.error(\"Ошибка при получении данных опросника:\", error);\n      alert(\"Не удалось загрузить опросник для редактирования. Пожалуйста, попробуйте позже.\");\n      setIsLoading(false);\n    }\n  };\n  const handleDeleteSurvey = async id => {\n    if (window.confirm(\"Вы уверены, что хотите удалить этот опросник?\")) {\n      try {\n        setIsLoading(true);\n        await surveyService.deleteSurvey(id);\n\n        // Показываем временное уведомление об успехе\n        setSuccessMessage(\"Опросник успешно удален\");\n        setTimeout(() => setSuccessMessage(\"\"), 3000);\n\n        // Обновить список опросников после удаления\n        fetchSurveys();\n        setIsLoading(false);\n      } catch (error) {\n        console.error(\"Ошибка при удалении опросника:\", error);\n        let errorMsg = \"Не удалось удалить опросник. Пожалуйста, попробуйте позже.\";\n\n        // Обработка различных типов ошибок\n        if (error.response) {\n          var _error$response$data2;\n          errorMsg = ((_error$response$data2 = error.response.data) === null || _error$response$data2 === void 0 ? void 0 : _error$response$data2.message) || `Ошибка сервера: ${error.response.status} - ${error.response.statusText}`;\n        }\n        setErrorMessage(errorMsg);\n        setTimeout(() => setErrorMessage(\"\"), 3000);\n        setIsLoading(false);\n      }\n    }\n  };\n  const handleChangeSurveyStatus = async (id, newStatus) => {\n    try {\n      setIsLoading(true);\n\n      // Преобразуем статус в формат сервера\n      const serverStatus = newStatus === \"активный\" ? \"ACTIVE\" : newStatus === \"завершенный\" ? \"COMPLETED\" : newStatus === \"черновик\" ? \"DRAFT\" : newStatus;\n\n      // Получаем русское название статуса для уведомления\n      const statusDisplayName = serverStatus === \"ACTIVE\" ? \"активный\" : serverStatus === \"COMPLETED\" ? \"завершенный\" : serverStatus === \"DRAFT\" ? \"черновик\" : serverStatus;\n      await surveyService.changeSurveyStatus(id, serverStatus);\n\n      // Показываем временное уведомление об успехе\n      setSuccessMessage(`Статус опросника изменен на \"${statusDisplayName}\"`);\n      setTimeout(() => setSuccessMessage(\"\"), 3000);\n\n      // Обновить список опросников после изменения статуса\n      fetchSurveys();\n      setIsLoading(false);\n    } catch (error) {\n      console.error(\"Ошибка при изменении статуса опросника:\", error);\n      let errorMsg = \"Не удалось изменить статус опросника. Пожалуйста, попробуйте позже.\";\n\n      // Обработка различных типов ошибок\n      if (error.response) {\n        var _error$response$data3;\n        errorMsg = ((_error$response$data3 = error.response.data) === null || _error$response$data3 === void 0 ? void 0 : _error$response$data3.message) || `Ошибка сервера: ${error.response.status} - ${error.response.statusText}`;\n      }\n      setErrorMessage(errorMsg);\n      setTimeout(() => setErrorMessage(\"\"), 3000);\n      setIsLoading(false);\n    }\n  };\n  const getStatusColor = status => {\n    switch (status) {\n      case \"черновик\":\n      case \"DRAFT\":\n        return \"#6c757d\";\n      // серый\n      case \"активный\":\n      case \"ACTIVE\":\n        return \"#28a745\";\n      // зеленый\n      case \"завершенный\":\n      case \"COMPLETED\":\n        return \"#dc3545\";\n      // красный\n      default:\n        return \"#6c757d\";\n    }\n  };\n  const getStatusDisplayText = status => {\n    switch (status) {\n      case \"DRAFT\":\n        return \"Черновик\";\n      case \"ACTIVE\":\n        return \"Активный\";\n      case \"COMPLETED\":\n        return \"Завершенный\";\n      default:\n        return status;\n    }\n  };\n  const formatDate = dateString => {\n    if (!dateString) return \"—\";\n    const date = new Date(dateString);\n    return date.toLocaleDateString(\"ru-RU\");\n  };\n  if (!user) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 756,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      user: user\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 761,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"dashboard-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u041F\\u0430\\u043D\\u0435\\u043B\\u044C \\u0443\\u043F\\u0440\\u0430\\u0432\\u043B\\u0435\\u043D\\u0438\\u044F \\u043A\\u043B\\u0438\\u0435\\u043D\\u0442\\u0441\\u043A\\u0438\\u043C \\u043E\\u043F\\u044B\\u0442\\u043E\\u043C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 763,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-info\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"\\u041F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044C: \", user.username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 765,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 764,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 762,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"dashboard-content\",\n      children: !showSurveyForm ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"\\u0414\\u043E\\u0431\\u0440\\u043E \\u043F\\u043E\\u0436\\u0430\\u043B\\u043E\\u0432\\u0430\\u0442\\u044C, \", user.username, \"!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 772,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u0423\\u043F\\u0440\\u0430\\u0432\\u043B\\u044F\\u0439\\u0442\\u0435 \\u043A\\u043B\\u0438\\u0435\\u043D\\u0442\\u0441\\u043A\\u0438\\u043C \\u043E\\u043F\\u044B\\u0442\\u043E\\u043C \\u0441 \\u043F\\u043E\\u043C\\u043E\\u0449\\u044C\\u044E \\u0441\\u043E\\u0437\\u0434\\u0430\\u043D\\u0438\\u044F \\u0438 \\u0430\\u043D\\u0430\\u043B\\u0438\\u0437\\u0430 \\u043E\\u043F\\u0440\\u043E\\u0441\\u043D\\u0438\\u043A\\u043E\\u0432.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 773,\n          columnNumber: 13\n        }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: errorMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 779,\n          columnNumber: 15\n        }, this), successMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"success-message\",\n          children: successMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 782,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"action-buttons\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"primary-button\",\n            onClick: handleCreateSurvey,\n            children: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C \\u043D\\u043E\\u0432\\u044B\\u0439 \\u043E\\u043F\\u0440\\u043E\\u0441\\u043D\\u0438\\u043A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 786,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 785,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"surveys-list-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"\\u041C\\u043E\\u0438 \\u043E\\u043F\\u0440\\u043E\\u0441\\u043D\\u0438\\u043A\\u0438\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 792,\n            columnNumber: 15\n          }, this), surveysFetching && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"loading-indicator\",\n            children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430 \\u043E\\u043F\\u0440\\u043E\\u0441\\u043D\\u0438\\u043A\\u043E\\u0432...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 795,\n            columnNumber: 17\n          }, this), surveysError && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-message\",\n            children: surveysError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 798,\n            columnNumber: 17\n          }, this), !surveysFetching && !surveysError && surveys.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"empty-state\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"\\u0423 \\u0432\\u0430\\u0441 \\u043F\\u043E\\u043A\\u0430 \\u043D\\u0435\\u0442 \\u0441\\u043E\\u0437\\u0434\\u0430\\u043D\\u043D\\u044B\\u0445 \\u043E\\u043F\\u0440\\u043E\\u0441\\u043D\\u0438\\u043A\\u043E\\u0432.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 803,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 802,\n            columnNumber: 17\n          }, this), !surveysFetching && !surveysError && surveys.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"surveys-table-container\",\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"surveys-table\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 812,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"\\u0421\\u0442\\u0430\\u0442\\u0443\\u0441\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 813,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"\\u0414\\u0430\\u0442\\u0430 \\u043D\\u0430\\u0447\\u0430\\u043B\\u0430\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 814,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"\\u0414\\u0430\\u0442\\u0430 \\u043E\\u043A\\u043E\\u043D\\u0447\\u0430\\u043D\\u0438\\u044F\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 815,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"\\u0414\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u044F\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 816,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 811,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 810,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: surveys.map(survey => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: survey.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 822,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"status-badge\",\n                      style: {\n                        backgroundColor: getStatusColor(survey.status)\n                      },\n                      children: getStatusDisplayText(survey.status)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 824,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 823,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: formatDate(survey.startDate)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 833,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: formatDate(survey.endDate)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 834,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"survey-actions\",\n                      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                        className: \"action-button edit-button\",\n                        onClick: () => handleEditSurvey(survey.id),\n                        title: \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\",\n                        children: icons.edit\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 837,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                        className: \"action-button preview-button\",\n                        onClick: () => navigate(`/survey/${survey.id}`),\n                        title: \"\\u041F\\u0440\\u0435\\u0434\\u043F\\u0440\\u043E\\u0441\\u043C\\u043E\\u0442\\u0440\",\n                        children: icons.preview\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 845,\n                        columnNumber: 31\n                      }, this), survey.status !== \"активный\" && survey.status !== \"ACTIVE\" && /*#__PURE__*/_jsxDEV(\"button\", {\n                        className: \"action-button activate-button\",\n                        onClick: () => handleChangeSurveyStatus(survey.id, \"активный\"),\n                        title: \"\\u0410\\u043A\\u0442\\u0438\\u0432\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\",\n                        children: icons.activate\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 855,\n                        columnNumber: 35\n                      }, this), (survey.status === \"активный\" || survey.status === \"ACTIVE\") && /*#__PURE__*/_jsxDEV(\"button\", {\n                        className: \"action-button complete-button\",\n                        onClick: () => handleChangeSurveyStatus(survey.id, \"завершенный\"),\n                        title: \"\\u0417\\u0430\\u0432\\u0435\\u0440\\u0448\\u0438\\u0442\\u044C\",\n                        children: icons.stop\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 871,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                        className: \"action-button delete-button\",\n                        onClick: () => handleDeleteSurvey(survey.id),\n                        title: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\",\n                        children: icons.delete\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 885,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 836,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 835,\n                    columnNumber: 27\n                  }, this)]\n                }, survey.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 821,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 819,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 809,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 808,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 791,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 771,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"survey-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u043D\\u0438\\u0435 \\u043D\\u043E\\u0432\\u043E\\u0433\\u043E \\u043E\\u043F\\u0440\\u043E\\u0441\\u043D\\u0438\\u043A\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 904,\n          columnNumber: 13\n        }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: errorMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 907,\n          columnNumber: 15\n        }, this), successMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"success-message\",\n          children: successMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 910,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"\\u041E\\u0441\\u043D\\u043E\\u0432\\u043D\\u0430\\u044F \\u0438\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u044F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 914,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"title\",\n              children: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u043E\\u043F\\u0440\\u043E\\u0441\\u043D\\u0438\\u043A\\u0430:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 916,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"title\",\n              name: \"title\",\n              className: \"form-control\",\n              value: surveyData.title,\n              onChange: handleSurveyChange,\n              placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u043E\\u043F\\u0440\\u043E\\u0441\\u043D\\u0438\\u043A\\u0430\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 917,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 915,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"description\",\n              children: \"\\u041E\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 930,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              id: \"description\",\n              name: \"description\",\n              className: \"form-control\",\n              value: surveyData.description,\n              onChange: handleSurveyChange,\n              placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043E\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435 \\u043E\\u043F\\u0440\\u043E\\u0441\\u043D\\u0438\\u043A\\u0430\",\n              rows: \"3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 931,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 929,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group half-width\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"startDate\",\n                children: \"\\u0414\\u0430\\u0442\\u0430 \\u043D\\u0430\\u0447\\u0430\\u043B\\u0430:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 944,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"date\",\n                id: \"startDate\",\n                name: \"startDate\",\n                className: \"form-control\",\n                value: surveyData.startDate,\n                onChange: handleSurveyChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 945,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 943,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group half-width\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"endDate\",\n                children: \"\\u0414\\u0430\\u0442\\u0430 \\u043E\\u043A\\u043E\\u043D\\u0447\\u0430\\u043D\\u0438\\u044F:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 956,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"date\",\n                id: \"endDate\",\n                name: \"endDate\",\n                className: \"form-control\",\n                value: surveyData.endDate,\n                onChange: handleSurveyChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 957,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 955,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 942,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"status\",\n              children: \"\\u0421\\u0442\\u0430\\u0442\\u0443\\u0441:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 969,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"status\",\n              name: \"status\",\n              className: \"form-select\",\n              value: surveyData.status,\n              onChange: handleSurveyChange,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"DRAFT\",\n                children: \"\\u0427\\u0435\\u0440\\u043D\\u043E\\u0432\\u0438\\u043A\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 977,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"ACTIVE\",\n                children: \"\\u0410\\u043A\\u0442\\u0438\\u0432\\u043D\\u044B\\u0439\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 978,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"COMPLETED\",\n                children: \"\\u0417\\u0430\\u0432\\u0435\\u0440\\u0448\\u0435\\u043D\\u043D\\u044B\\u0439\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 979,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 970,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 968,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 913,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"\\u0412\\u043E\\u043F\\u0440\\u043E\\u0441\\u044B \\u043E\\u043F\\u0440\\u043E\\u0441\\u043D\\u0438\\u043A\\u0430\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 985,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"info-text\",\n            children: \"\\u041F\\u0435\\u0440\\u0432\\u044B\\u0435 \\u0442\\u0440\\u0438 \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\\u0430 \\u044F\\u0432\\u043B\\u044F\\u044E\\u0442\\u0441\\u044F \\u043E\\u0431\\u044F\\u0437\\u0430\\u0442\\u0435\\u043B\\u044C\\u043D\\u044B\\u043C\\u0438 \\u0438 \\u043F\\u0440\\u0438\\u0441\\u0443\\u0442\\u0441\\u0442\\u0432\\u0443\\u044E\\u0442 \\u0432\\u043E \\u0432\\u0441\\u0435\\u0445 \\u043E\\u043F\\u0440\\u043E\\u0441\\u043D\\u0438\\u043A\\u0430\\u0445.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 986,\n            columnNumber: 15\n          }, this), surveyData.questions.map((question, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"question-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"question-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: [\"\\u0412\\u043E\\u043F\\u0440\\u043E\\u0441 \", index + 1]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 994,\n                columnNumber: 21\n              }, this), index >= 3 && /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"delete-button\",\n                onClick: () => removeQuestion(index),\n                children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 996,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 993,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: `question-${index}`,\n                children: \"\\u0422\\u0435\\u043A\\u0441\\u0442 \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\\u0430:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1007,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: `question-${index}`,\n                name: \"text\",\n                className: \"form-control\",\n                value: question.text,\n                onChange: e => handleQuestionChange(e, index),\n                placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0442\\u0435\\u043A\\u0441\\u0442 \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\\u0430\",\n                disabled: index < 3 // Первые три вопроса нельзя изменять\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1008,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1006,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group half-width\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: `type-${index}`,\n                  children: \"\\u0422\\u0438\\u043F \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\\u0430:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1022,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                  id: `type-${index}`,\n                  name: \"type\",\n                  className: \"form-select\",\n                  value: question.type,\n                  onChange: e => handleQuestionChange(e, index),\n                  disabled: index < 3,\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"single_choice\",\n                    children: \"\\u041E\\u0434\\u0438\\u043D \\u0432\\u0430\\u0440\\u0438\\u0430\\u043D\\u0442 \\u043E\\u0442\\u0432\\u0435\\u0442\\u0430\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1031,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"multiple_choice\",\n                    children: \"\\u041D\\u0435\\u0441\\u043A\\u043E\\u043B\\u044C\\u043A\\u043E \\u0432\\u0430\\u0440\\u0438\\u0430\\u043D\\u0442\\u043E\\u0432 \\u043E\\u0442\\u0432\\u0435\\u0442\\u0430\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1034,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"text\",\n                    children: \"\\u0422\\u0435\\u043A\\u0441\\u0442\\u043E\\u0432\\u044B\\u0439 \\u043E\\u0442\\u0432\\u0435\\u0442\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1037,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"rating\",\n                    children: \"\\u041E\\u0446\\u0435\\u043D\\u043A\\u0430\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1038,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1023,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1021,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group half-width\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: `category-${index}`,\n                  children: \"\\u041A\\u0430\\u0442\\u0435\\u0433\\u043E\\u0440\\u0438\\u044F:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1043,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                  id: `category-${index}`,\n                  name: \"category\",\n                  className: \"form-select\",\n                  value: question.category,\n                  onChange: e => handleQuestionChange(e, index),\n                  disabled: index < 3,\n                  children: categories.map((category, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: category,\n                    children: category\n                  }, i, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1053,\n                    columnNumber: 27\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1044,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1042,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1020,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group checkbox-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                id: `required-${index}`,\n                checked: question.required,\n                onChange: () => handleRequiredChange(index),\n                disabled: index < 3\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1062,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: `required-${index}`,\n                children: \"\\u041E\\u0431\\u044F\\u0437\\u0430\\u0442\\u0435\\u043B\\u044C\\u043D\\u044B\\u0439 \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1069,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1061,\n              columnNumber: 19\n            }, this), (question.type === \"single_choice\" || question.type === \"multiple_choice\") && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"options-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"\\u0412\\u0430\\u0440\\u0438\\u0430\\u043D\\u0442\\u044B \\u043E\\u0442\\u0432\\u0435\\u0442\\u043E\\u0432:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1077,\n                columnNumber: 23\n              }, this), question.options.map((option, optionIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"option-row\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  className: \"form-control\",\n                  value: option,\n                  onChange: e => handleOptionChange(index, optionIndex, e.target.value),\n                  placeholder: `Вариант ${optionIndex + 1}`,\n                  disabled: index < 3\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1080,\n                  columnNumber: 27\n                }, this), question.options.length > 1 && index >= 3 && /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: \"delete-option-button\",\n                  onClick: () => removeOption(index, optionIndex),\n                  children: \"\\u2715\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1095,\n                  columnNumber: 29\n                }, this)]\n              }, optionIndex, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1079,\n                columnNumber: 25\n              }, this)), index >= 3 && /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"add-option-button\",\n                onClick: () => addOption(index),\n                children: \"+ \\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0432\\u0430\\u0440\\u0438\\u0430\\u043D\\u0442\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1106,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1076,\n              columnNumber: 21\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 992,\n            columnNumber: 17\n          }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"add-question-form\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"add-question-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C \\u043D\\u043E\\u0432\\u044B\\u0439 \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1121,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"secondary-button small-button\",\n                onClick: handleShowExistingQuestions,\n                children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0438\\u0437 \\u0431\\u0430\\u0437\\u044B\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1122,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1120,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"newQuestionText\",\n                children: \"\\u0422\\u0435\\u043A\\u0441\\u0442 \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\\u0430:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1132,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"newQuestionText\",\n                name: \"text\",\n                className: \"form-control\",\n                value: newQuestion.text,\n                onChange: handleNewQuestionChange,\n                placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0442\\u0435\\u043A\\u0441\\u0442 \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\\u0430\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1133,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1131,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group half-width\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"newQuestionType\",\n                  children: \"\\u0422\\u0438\\u043F \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\\u0430:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1146,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                  id: \"newQuestionType\",\n                  name: \"type\",\n                  className: \"form-select\",\n                  value: newQuestion.type,\n                  onChange: handleNewQuestionChange,\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"single_choice\",\n                    children: \"\\u041E\\u0434\\u0438\\u043D \\u0432\\u0430\\u0440\\u0438\\u0430\\u043D\\u0442 \\u043E\\u0442\\u0432\\u0435\\u0442\\u0430\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1154,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"multiple_choice\",\n                    children: \"\\u041D\\u0435\\u0441\\u043A\\u043E\\u043B\\u044C\\u043A\\u043E \\u0432\\u0430\\u0440\\u0438\\u0430\\u043D\\u0442\\u043E\\u0432 \\u043E\\u0442\\u0432\\u0435\\u0442\\u0430\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1155,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"text\",\n                    children: \"\\u0422\\u0435\\u043A\\u0441\\u0442\\u043E\\u0432\\u044B\\u0439 \\u043E\\u0442\\u0432\\u0435\\u0442\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1158,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"rating\",\n                    children: \"\\u041E\\u0446\\u0435\\u043D\\u043A\\u0430\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1159,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1147,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1145,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group half-width\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"newQuestionCategory\",\n                  children: \"\\u041A\\u0430\\u0442\\u0435\\u0433\\u043E\\u0440\\u0438\\u044F:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1164,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                  id: \"newQuestionCategory\",\n                  name: \"category\",\n                  className: \"form-select\",\n                  value: newQuestion.category,\n                  onChange: handleNewQuestionChange,\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u043A\\u0430\\u0442\\u0435\\u0433\\u043E\\u0440\\u0438\\u044E\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1172,\n                    columnNumber: 23\n                  }, this), categories.map((category, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: category,\n                    children: category\n                  }, i, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1174,\n                    columnNumber: 25\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1165,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1163,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1144,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group checkbox-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                id: \"newQuestionRequired\",\n                name: \"required\",\n                checked: newQuestion.required,\n                onChange: () => setNewQuestion({\n                  ...newQuestion,\n                  required: !newQuestion.required\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1183,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"newQuestionRequired\",\n                children: \"\\u041E\\u0431\\u044F\\u0437\\u0430\\u0442\\u0435\\u043B\\u044C\\u043D\\u044B\\u0439 \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1195,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1182,\n              columnNumber: 17\n            }, this), (newQuestion.type === \"single_choice\" || newQuestion.type === \"multiple_choice\") && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"options-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"\\u0412\\u0430\\u0440\\u0438\\u0430\\u043D\\u0442\\u044B \\u043E\\u0442\\u0432\\u0435\\u0442\\u043E\\u0432:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1203,\n                columnNumber: 21\n              }, this), newQuestion.options.map((option, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"option-row\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  className: \"form-control\",\n                  value: option,\n                  onChange: e => handleNewOptionChange(index, e.target.value),\n                  placeholder: `Вариант ${index + 1}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1206,\n                  columnNumber: 25\n                }, this), newQuestion.options.length > 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: \"delete-option-button\",\n                  onClick: () => removeNewOption(index),\n                  children: \"\\u2715\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1216,\n                  columnNumber: 27\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1205,\n                columnNumber: 23\n              }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"add-option-button\",\n                onClick: addNewOption,\n                children: \"+ \\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0432\\u0430\\u0440\\u0438\\u0430\\u043D\\u0442\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1226,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1202,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"add-button\",\n              onClick: addNewQuestion,\n              style: {\n                marginTop: \"10px\"\n              },\n              children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1236,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1119,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"add-category-form\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u043D\\u043E\\u0432\\u0443\\u044E \\u043A\\u0430\\u0442\\u0435\\u0433\\u043E\\u0440\\u0438\\u044E\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1247,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  className: \"form-control\",\n                  value: newCategory,\n                  onChange: e => setNewCategory(e.target.value),\n                  placeholder: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u043D\\u043E\\u0432\\u043E\\u0439 \\u043A\\u0430\\u0442\\u0435\\u0433\\u043E\\u0440\\u0438\\u0438\",\n                  style: {\n                    // marginBottom: \"10px\",\n                    width: \"100%\",\n                    minWidth: \"250px\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1250,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1249,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"add-button\",\n                onClick: addCategory,\n                style: {\n                  marginBottom: \"10px\"\n                },\n                children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u043A\\u0430\\u0442\\u0435\\u0433\\u043E\\u0440\\u0438\\u044E\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1263,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1248,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1246,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 984,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"primary-button\",\n            onClick: saveSurvey,\n            disabled: isLoading,\n            children: isLoading ? \"Сохранение...\" : \"Сохранить опросник\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1276,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"secondary-button\",\n            onClick: cancelSurveyCreation,\n            disabled: isLoading,\n            children: \"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1284,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1275,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 903,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 769,\n      columnNumber: 7\n    }, this), showExistingQuestions && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      onClick: handleCloseExistingQuestions,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        onClick: e => e.stopPropagation(),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"\\u0412\\u044B\\u0431\\u0440\\u0430\\u0442\\u044C \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\\u044B \\u0438\\u0437 \\u0431\\u0430\\u0437\\u044B\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1302,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"modal-close-button\",\n            onClick: handleCloseExistingQuestions,\n            children: \"\\u2715\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1303,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1301,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"search-section\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              placeholder: \"\\u041F\\u043E\\u0438\\u0441\\u043A \\u043F\\u043E \\u0442\\u0435\\u043A\\u0441\\u0442\\u0443 \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\\u0430 \\u0438\\u043B\\u0438 \\u043A\\u0430\\u0442\\u0435\\u0433\\u043E\\u0440\\u0438\\u0438...\",\n              value: searchTerm,\n              onChange: e => setSearchTerm(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1314,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1313,\n            columnNumber: 15\n          }, this), loadingQuestions && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"loading-indicator\",\n            children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430 \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\\u043E\\u0432...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1325,\n            columnNumber: 17\n          }, this), !loadingQuestions && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"questions-list\",\n            children: getFilteredQuestions().length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"empty-state\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"\\u0412\\u043E\\u043F\\u0440\\u043E\\u0441\\u044B \\u043D\\u0435 \\u043D\\u0430\\u0439\\u0434\\u0435\\u043D\\u044B\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1333,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1332,\n              columnNumber: 21\n            }, this) : getFilteredQuestions().map(question => {\n              const isSelected = selectedExistingQuestions.some(q => q.id === question.id);\n              const isDuplicate = surveyData.questions.some(q => q.text.toLowerCase().trim() === question.text.toLowerCase().trim());\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `question-item ${isSelected ? \"selected\" : \"\"} ${isDuplicate ? \"duplicate\" : \"\"}`,\n                onClick: () => !isDuplicate && toggleExistingQuestion(question),\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"question-checkbox\",\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkbox\",\n                    checked: isSelected,\n                    onChange: () => !isDuplicate && toggleExistingQuestion(question),\n                    disabled: isDuplicate\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1357,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1356,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"question-details\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"question-text\",\n                    children: [question.text, isDuplicate && /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"duplicate-label\",\n                      children: \"(\\u0443\\u0436\\u0435 \\u0434\\u043E\\u0431\\u0430\\u0432\\u043B\\u0435\\u043D)\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1371,\n                      columnNumber: 33\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1368,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"question-meta\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"question-type\",\n                      children: question.type === \"SINGLE_CHOICE\" ? \"Один вариант\" : question.type === \"MULTIPLE_CHOICE\" ? \"Несколько вариантов\" : question.type === \"TEXT\" ? \"Текст\" : question.type === \"RATING\" ? \"Рейтинг\" : question.type\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1377,\n                      columnNumber: 31\n                    }, this), question.category && /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"question-category\",\n                      children: [\"\\u2022 \", question.category]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1389,\n                      columnNumber: 33\n                    }, this), question.required && /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"question-required\",\n                      children: \"\\u2022 \\u041E\\u0431\\u044F\\u0437\\u0430\\u0442\\u0435\\u043B\\u044C\\u043D\\u044B\\u0439\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1394,\n                      columnNumber: 33\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1376,\n                    columnNumber: 29\n                  }, this), question.options && question.options.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"question-options-preview\",\n                    children: [\"\\u0412\\u0430\\u0440\\u0438\\u0430\\u043D\\u0442\\u044B:\", \" \", question.options.slice(0, 3).join(\", \"), question.options.length > 3 && \"...\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1401,\n                    columnNumber: 33\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1367,\n                  columnNumber: 27\n                }, this)]\n              }, question.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1347,\n                columnNumber: 25\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1330,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1311,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-footer\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"selected-count\",\n            children: [\"\\u0412\\u044B\\u0431\\u0440\\u0430\\u043D\\u043E: \", selectedExistingQuestions.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1417,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"secondary-button\",\n              onClick: handleCloseExistingQuestions,\n              children: \"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0430\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1421,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"primary-button\",\n              onClick: fillFormWithSelectedQuestion,\n              disabled: selectedExistingQuestions.length === 0,\n              children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0432\\u044B\\u0431\\u0440\\u0430\\u043D\\u043D\\u044B\\u0439 \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1427,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1420,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1416,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1300,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1299,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 760,\n    columnNumber: 5\n  }, this);\n};\n_s(DashboardPage, \"RNYEqQhD0IBJVNrOnwN9URpLF6M=\", false, function () {\n  return [useNavigate];\n});\n_c = DashboardPage;\nexport default DashboardPage;\nvar _c;\n$RefreshReg$(_c, \"DashboardPage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","authService","surveyService","questionsService","Sidebar","jsxDEV","_jsxDEV","icons","edit","width","height","viewBox","fill","xmlns","children","d","fileName","_jsxFileName","lineNumber","columnNumber","preview","activate","stop","delete","DashboardPage","_s","navigate","user","setUser","showSurveyForm","setShowSurveyForm","surveyData","setSurveyData","title","description","status","startDate","endDate","questions","text","type","required","category","options","newQuestion","setNewQuestion","categories","setCategories","newCategory","setNewCategory","isLoading","setIsLoading","errorMessage","setErrorMessage","successMessage","setSuccessMessage","surveys","setSurveys","surveysFetching","setSurveysFetching","surveysError","setSurveysError","existingQuestions","setExistingQuestions","showExistingQuestions","setShowExistingQuestions","loadingQuestions","setLoadingQuestions","selectedExistingQuestions","setSelectedExistingQuestions","searchTerm","setSearchTerm","currentUser","getCurrentUser","fetchSurveys","response","getAllSurveys","console","log","content","Array","isArray","length","error","fetchExistingQuestions","getAllQuestions","alert","handleLogout","logout","handleCreateSurvey","handleSurveyChange","e","name","value","target","handleQuestionChange","index","updatedQuestions","handleOptionChange","questionIndex","optionIndex","addOption","push","removeOption","splice","handleRequiredChange","handleNewQuestionChange","handleNewOptionChange","updatedOptions","addNewOption","removeNewOption","addNewQuestion","trim","removeQuestion","addCategory","handleShowExistingQuestions","handleCloseExistingQuestions","toggleExistingQuestion","question","id","fillFormWithSelectedQuestion","toLowerCase","getFilteredQuestions","filter","includes","saveSurvey","serverData","map","orderNumber","toUpperCase","successMsg","updateSurvey","createSurvey","setTimeout","errorMsg","_error$response$data","data","message","statusText","request","cancelSurveyCreation","window","confirm","handleEditSurvey","surveyDetails","getSurveyById","transformedQuestions","handleDeleteSurvey","deleteSurvey","_error$response$data2","handleChangeSurveyStatus","newStatus","serverStatus","statusDisplayName","changeSurveyStatus","_error$response$data3","getStatusColor","getStatusDisplayText","formatDate","dateString","date","Date","toLocaleDateString","className","username","onClick","survey","style","backgroundColor","htmlFor","onChange","placeholder","rows","disabled","i","checked","option","marginTop","minWidth","marginBottom","stopPropagation","isSelected","some","q","isDuplicate","slice","join","_c","$RefreshReg$"],"sources":["/Users/shirokiy/Desktop/Repositories/Дипломы/ClientExp/client_exp-frontend/src/pages/Dashboard/DashboardPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport { useNavigate } from \"react-router-dom\"\nimport { authService } from \"../../api/auth\"\nimport { surveyService } from \"../../api/survey\"\nimport { questionsService } from \"../../api/questions\"\nimport Sidebar from \"../../components/common/Sidebar\"\nimport \"../../components/common/AuthStyles.css\"\nimport \"./DashboardStyles.css\"\n\n// SVG иконки для кнопок действий\nconst icons = {\n  edit: (\n    <svg\n      width=\"16\"\n      height=\"16\"\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34c-.39-.39-1.02-.39-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  ),\n  preview: (\n    <svg\n      width=\"16\"\n      height=\"16\"\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  ),\n  activate: (\n    <svg\n      width=\"16\"\n      height=\"16\"\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path d=\"M8 5v14l11-7z\" fill=\"currentColor\" />\n    </svg>\n  ),\n  stop: (\n    <svg\n      width=\"16\"\n      height=\"16\"\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path d=\"M6 6h12v12H6z\" fill=\"currentColor\" />\n    </svg>\n  ),\n  delete: (\n    <svg\n      width=\"16\"\n      height=\"16\"\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  ),\n}\n\nconst DashboardPage = () => {\n  const navigate = useNavigate()\n  const [user, setUser] = useState(null)\n  const [showSurveyForm, setShowSurveyForm] = useState(false)\n  const [surveyData, setSurveyData] = useState({\n    title: \"\",\n    description: \"\",\n    status: \"DRAFT\",\n    startDate: \"\",\n    endDate: \"\",\n    questions: [\n      {\n        text: \"Укажите ваш возраст\",\n        type: \"single_choice\",\n        required: true,\n        category: \"Демографическая информация\",\n        options: [\n          \"До 18 лет\",\n          \"18–25 лет\",\n          \"26–35 лет\",\n          \"36–45 лет\",\n          \"46–60 лет\",\n          \"60+ лет\",\n        ],\n      },\n      {\n        text: \"Ваш пол\",\n        type: \"single_choice\",\n        required: true,\n        category: \"Демографическая информация\",\n        options: [\"Мужской\", \"Женский\"],\n      },\n      {\n        text: \"Ваша профессия или сфера деятельности\",\n        type: \"single_choice\",\n        required: false,\n        category: \"Демографическая информация\",\n        options: [\n          \"Студент\",\n          \"Фрилансер\",\n          \"Офисный работник\",\n          \"Руководитель/владелец бизнеса\",\n          \"Другое\",\n        ],\n      },\n    ],\n  })\n  const [newQuestion, setNewQuestion] = useState({\n    text: \"\",\n    type: \"single_choice\",\n    required: false,\n    category: \"\",\n    options: [\"\"],\n  })\n  const [categories, setCategories] = useState([\n    \"Демографическая информация\",\n    \"Географическая сегментация\",\n    \"Поведенческая сегментация\",\n    \"Сегментация по удовлетворенности\",\n    \"Сегментация по клиентскому пути\",\n    \"Сегментация по мотивации и ценности клиента\",\n  ])\n  const [newCategory, setNewCategory] = useState(\"\")\n  const [isLoading, setIsLoading] = useState(false)\n  const [errorMessage, setErrorMessage] = useState(\"\")\n  const [successMessage, setSuccessMessage] = useState(\"\")\n  const [surveys, setSurveys] = useState([])\n  const [surveysFetching, setSurveysFetching] = useState(false)\n  const [surveysError, setSurveysError] = useState(\"\")\n\n  // Состояния для работы с существующими вопросами\n  const [existingQuestions, setExistingQuestions] = useState([])\n  const [showExistingQuestions, setShowExistingQuestions] = useState(false)\n  const [loadingQuestions, setLoadingQuestions] = useState(false)\n  const [selectedExistingQuestions, setSelectedExistingQuestions] = useState([])\n  const [searchTerm, setSearchTerm] = useState(\"\")\n\n  useEffect(() => {\n    const currentUser = authService.getCurrentUser()\n    if (currentUser) {\n      setUser(currentUser)\n      fetchSurveys()\n    } else {\n      navigate(\"/login\")\n    }\n  }, [navigate])\n\n  const fetchSurveys = async () => {\n    setSurveysFetching(true)\n    setSurveysError(\"\")\n    try {\n      const response = await surveyService.getAllSurveys()\n      console.log(\"Получены данные:\", response)\n\n      // Проверяем, есть ли поле content в ответе\n      if (response && response.content && Array.isArray(response.content)) {\n        console.log(\n          `Получено ${response.content.length} опросников из поля content`\n        )\n        setSurveys(response.content)\n      } else if (Array.isArray(response)) {\n        // На случай, если API вернет просто массив\n        console.log(`Получено ${response.length} опросников напрямую`)\n        setSurveys(response)\n      } else {\n        console.log(\n          \"Ответ не содержит опросников в ожидаемом формате:\",\n          response\n        )\n        setSurveys([])\n      }\n    } catch (error) {\n      console.error(\"Ошибка при получении опросников:\", error)\n      setSurveysError(\n        \"Не удалось загрузить опросники. Пожалуйста, попробуйте позже.\"\n      )\n      setSurveys([])\n    } finally {\n      setSurveysFetching(false)\n    }\n  }\n\n  // Функция для загрузки существующих вопросов\n  const fetchExistingQuestions = async () => {\n    setLoadingQuestions(true)\n    try {\n      const questions = await questionsService.getAllQuestions()\n      console.log(\"Получены существующие вопросы:\", questions)\n      setExistingQuestions(questions)\n    } catch (error) {\n      console.error(\"Ошибка при загрузке существующих вопросов:\", error)\n      alert(\"Не удалось загрузить существующие вопросы\")\n    } finally {\n      setLoadingQuestions(false)\n    }\n  }\n\n  const handleLogout = () => {\n    authService.logout()\n    navigate(\"/login\")\n  }\n\n  const handleCreateSurvey = () => {\n    // Сбрасываем форму на значения по умолчанию\n    setSurveyData({\n      title: \"\",\n      description: \"\",\n      status: \"DRAFT\",\n      startDate: \"\",\n      endDate: \"\",\n      questions: [\n        {\n          text: \"Укажите ваш возраст\",\n          type: \"single_choice\",\n          required: true,\n          category: \"Демографическая информация\",\n          options: [\n            \"До 18 лет\",\n            \"18–25 лет\",\n            \"26–35 лет\",\n            \"36–45 лет\",\n            \"46–60 лет\",\n            \"60+ лет\",\n          ],\n        },\n        {\n          text: \"Ваш пол\",\n          type: \"single_choice\",\n          required: true,\n          category: \"Демографическая информация\",\n          options: [\"Мужской\", \"Женский\"],\n        },\n        {\n          text: \"Ваша профессия или сфера деятельности\",\n          type: \"single_choice\",\n          required: false,\n          category: \"Демографическая информация\",\n          options: [\n            \"Студент\",\n            \"Фрилансер\",\n            \"Офисный работник\",\n            \"Руководитель/владелец бизнеса\",\n            \"Другое\",\n          ],\n        },\n      ],\n    })\n\n    // Очищаем сообщения об ошибках и успехе\n    setErrorMessage(\"\")\n    setSuccessMessage(\"\")\n\n    // Показываем форму создания\n    setShowSurveyForm(true)\n  }\n\n  const handleSurveyChange = e => {\n    const { name, value } = e.target\n    setSurveyData({\n      ...surveyData,\n      [name]: value,\n    })\n  }\n\n  const handleQuestionChange = (e, index) => {\n    const { name, value } = e.target\n    const updatedQuestions = [...surveyData.questions]\n    updatedQuestions[index] = {\n      ...updatedQuestions[index],\n      [name]: value,\n    }\n    setSurveyData({\n      ...surveyData,\n      questions: updatedQuestions,\n    })\n  }\n\n  const handleOptionChange = (questionIndex, optionIndex, value) => {\n    const updatedQuestions = [...surveyData.questions]\n    updatedQuestions[questionIndex].options[optionIndex] = value\n    setSurveyData({\n      ...surveyData,\n      questions: updatedQuestions,\n    })\n  }\n\n  const addOption = questionIndex => {\n    const updatedQuestions = [...surveyData.questions]\n    updatedQuestions[questionIndex].options.push(\"\")\n    setSurveyData({\n      ...surveyData,\n      questions: updatedQuestions,\n    })\n  }\n\n  const removeOption = (questionIndex, optionIndex) => {\n    const updatedQuestions = [...surveyData.questions]\n    updatedQuestions[questionIndex].options.splice(optionIndex, 1)\n    setSurveyData({\n      ...surveyData,\n      questions: updatedQuestions,\n    })\n  }\n\n  const handleRequiredChange = index => {\n    const updatedQuestions = [...surveyData.questions]\n    updatedQuestions[index].required = !updatedQuestions[index].required\n    setSurveyData({\n      ...surveyData,\n      questions: updatedQuestions,\n    })\n  }\n\n  const handleNewQuestionChange = e => {\n    const { name, value } = e.target\n    setNewQuestion({\n      ...newQuestion,\n      [name]: value,\n    })\n  }\n\n  const handleNewOptionChange = (index, value) => {\n    const updatedOptions = [...newQuestion.options]\n    updatedOptions[index] = value\n    setNewQuestion({\n      ...newQuestion,\n      options: updatedOptions,\n    })\n  }\n\n  const addNewOption = () => {\n    setNewQuestion({\n      ...newQuestion,\n      options: [...newQuestion.options, \"\"],\n    })\n  }\n\n  const removeNewOption = index => {\n    const updatedOptions = [...newQuestion.options]\n    updatedOptions.splice(index, 1)\n    setNewQuestion({\n      ...newQuestion,\n      options: updatedOptions,\n    })\n  }\n\n  const addNewQuestion = () => {\n    if (newQuestion.text.trim() === \"\") {\n      alert(\"Вопрос не может быть пустым\")\n      return\n    }\n\n    setSurveyData({\n      ...surveyData,\n      questions: [...surveyData.questions, { ...newQuestion }],\n    })\n\n    // Сбросить форму нового вопроса\n    setNewQuestion({\n      text: \"\",\n      type: \"single_choice\",\n      required: false,\n      category: newQuestion.category,\n      options: [\"\"],\n    })\n  }\n\n  const removeQuestion = index => {\n    if (index < 3) {\n      alert(\"Первые три вопроса обязательны и не могут быть удалены\")\n      return\n    }\n\n    const updatedQuestions = [...surveyData.questions]\n    updatedQuestions.splice(index, 1)\n    setSurveyData({\n      ...surveyData,\n      questions: updatedQuestions,\n    })\n  }\n\n  const addCategory = () => {\n    if (newCategory.trim() === \"\") return\n\n    setCategories([...categories, newCategory])\n    setNewCategory(\"\")\n  }\n\n  // Функция для показа модального окна с существующими вопросами\n  const handleShowExistingQuestions = () => {\n    if (existingQuestions.length === 0) {\n      fetchExistingQuestions()\n    }\n    setShowExistingQuestions(true)\n    setSelectedExistingQuestions([])\n    setSearchTerm(\"\")\n  }\n\n  // Функция для закрытия модального окна\n  const handleCloseExistingQuestions = () => {\n    setShowExistingQuestions(false)\n    setSelectedExistingQuestions([])\n    setSearchTerm(\"\")\n  }\n\n  // Функция для выбора/отмены выбора существующего вопроса\n  const toggleExistingQuestion = question => {\n    // Теперь выбираем только один вопрос\n    if (\n      selectedExistingQuestions.length > 0 &&\n      selectedExistingQuestions[0].id === question.id\n    ) {\n      setSelectedExistingQuestions([])\n    } else {\n      setSelectedExistingQuestions([question])\n    }\n  }\n\n  // Функция для заполнения формы выбранным вопросом\n  const fillFormWithSelectedQuestion = () => {\n    if (selectedExistingQuestions.length === 0) return\n\n    const question = selectedExistingQuestions[0]\n\n    // Преобразуем формат из базы вопросов в формат формы\n    let type = question.type\n    if (type === \"SINGLE_CHOICE\") type = \"single_choice\"\n    else if (type === \"MULTIPLE_CHOICE\") type = \"multiple_choice\"\n    else if (type === \"TEXT\") type = \"text\"\n    else if (type === \"RATING\") type = \"rating\"\n    else type = type.toLowerCase()\n\n    // Заполняем форму нового вопроса\n    setNewQuestion({\n      text: question.text,\n      type: type,\n      required: question.required || false,\n      category: question.category || \"\",\n      options: question.options || [\"\"],\n    })\n\n    handleCloseExistingQuestions()\n\n    // Показываем уведомление\n    alert(\n      \"Вопрос загружен в форму. Вы можете отредактировать его перед добавлением.\"\n    )\n  }\n\n  // Функция для фильтрации вопросов по поисковому запросу\n  const getFilteredQuestions = () => {\n    if (!searchTerm.trim()) return existingQuestions\n\n    return existingQuestions.filter(\n      question =>\n        question.text.toLowerCase().includes(searchTerm.toLowerCase()) ||\n        (question.category &&\n          question.category.toLowerCase().includes(searchTerm.toLowerCase()))\n    )\n  }\n\n  const saveSurvey = async () => {\n    // Валидация данных опросника перед отправкой\n    if (!surveyData.title.trim()) {\n      setErrorMessage(\"Необходимо указать название опросника\")\n      return\n    }\n\n    if (surveyData.questions.length < 3) {\n      setErrorMessage(\"Опросник должен содержать минимум 3 вопроса\")\n      return\n    }\n\n    // Сброс сообщений об ошибках/успехе\n    setErrorMessage(\"\")\n    setSuccessMessage(\"\")\n    setIsLoading(true)\n\n    try {\n      // Преобразуем данные в формат, ожидаемый сервером\n      const serverData = {\n        ...surveyData,\n        // Преобразуем статус к верхнему регистру, если он в верблюжьем регистре\n        status:\n          surveyData.status === \"черновик\"\n            ? \"DRAFT\"\n            : surveyData.status === \"активный\"\n            ? \"ACTIVE\"\n            : surveyData.status === \"завершенный\"\n            ? \"COMPLETED\"\n            : surveyData.status,\n        // Добавляем порядковые номера вопросам\n        questions: surveyData.questions.map((question, index) => ({\n          ...question,\n          orderNumber: index + 1,\n          // Преобразуем тип вопроса к формату сервера\n          type:\n            question.type === \"single_choice\"\n              ? \"SINGLE_CHOICE\"\n              : question.type === \"multiple_choice\"\n              ? \"MULTIPLE_CHOICE\"\n              : question.type === \"text\"\n              ? \"TEXT\"\n              : question.type === \"rating\"\n              ? \"RATING\"\n              : question.type.toUpperCase(),\n        })),\n      }\n\n      console.log(\"Отправка данных на сервер:\", serverData)\n\n      let response\n      let successMsg\n\n      // Если у опросника есть id, то это обновление, иначе - создание\n      if (surveyData.id) {\n        // Обновление существующего опросника\n        response = await surveyService.updateSurvey(surveyData.id, serverData)\n        successMsg = \"Опросник успешно обновлен!\"\n      } else {\n        // Создание нового опросника\n        response = await surveyService.createSurvey(serverData)\n        successMsg = \"Опросник успешно создан!\"\n      }\n\n      console.log(\"Опросник успешно сохранен:\", response)\n      setSuccessMessage(successMsg)\n\n      // Обновляем список опросников\n      fetchSurveys()\n\n      // Сброс формы и возврат к главному экрану через 2 секунды\n      setTimeout(() => {\n        setShowSurveyForm(false)\n        setSuccessMessage(\"\")\n      }, 2000)\n    } catch (error) {\n      console.error(\"Ошибка при сохранении опросника:\", error)\n\n      let errorMsg =\n        \"Произошла ошибка при сохранении опросника. Пожалуйста, попробуйте позже.\"\n\n      // Обработка различных типов ошибок\n      if (error.response) {\n        // Ошибка от сервера с кодом статуса\n        errorMsg =\n          error.response.data?.message ||\n          `Ошибка сервера: ${error.response.status} - ${error.response.statusText}`\n      } else if (error.request) {\n        // Ошибка сети - запрос был отправлен, но ответ не получен\n        errorMsg = \"Сервер не отвечает. Проверьте подключение к Интернету.\"\n      } else {\n        // Ошибка при настройке запроса\n        errorMsg = `Ошибка при создании запроса: ${error.message}`\n      }\n\n      setErrorMessage(errorMsg)\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  const cancelSurveyCreation = () => {\n    if (\n      window.confirm(\n        \"Вы уверены, что хотите отменить создание опросника? Все введенные данные будут потеряны.\"\n      )\n    ) {\n      setShowSurveyForm(false)\n    }\n  }\n\n  const handleEditSurvey = async id => {\n    try {\n      setIsLoading(true)\n      // Получаем детальную информацию об опроснике с сервера\n      const surveyDetails = await surveyService.getSurveyById(id)\n      console.log(\n        \"Получены данные опросника для редактирования:\",\n        surveyDetails\n      )\n\n      // Преобразуем вопросы из формата сервера в формат интерфейса\n      const transformedQuestions = surveyDetails.questions.map(question => ({\n        ...question,\n        // Преобразуем тип вопроса из формата сервера в формат интерфейса\n        type:\n          question.type === \"SINGLE_CHOICE\"\n            ? \"single_choice\"\n            : question.type === \"MULTIPLE_CHOICE\"\n            ? \"multiple_choice\"\n            : question.type === \"TEXT\"\n            ? \"text\"\n            : question.type === \"RATING\"\n            ? \"rating\"\n            : question.type.toLowerCase(),\n      }))\n\n      // Устанавливаем данные опросника в состояние формы\n      setSurveyData({\n        ...surveyDetails,\n        questions: transformedQuestions,\n      })\n\n      // Показываем форму для редактирования\n      setShowSurveyForm(true)\n      setIsLoading(false)\n    } catch (error) {\n      console.error(\"Ошибка при получении данных опросника:\", error)\n      alert(\n        \"Не удалось загрузить опросник для редактирования. Пожалуйста, попробуйте позже.\"\n      )\n      setIsLoading(false)\n    }\n  }\n\n  const handleDeleteSurvey = async id => {\n    if (window.confirm(\"Вы уверены, что хотите удалить этот опросник?\")) {\n      try {\n        setIsLoading(true)\n\n        await surveyService.deleteSurvey(id)\n\n        // Показываем временное уведомление об успехе\n        setSuccessMessage(\"Опросник успешно удален\")\n        setTimeout(() => setSuccessMessage(\"\"), 3000)\n\n        // Обновить список опросников после удаления\n        fetchSurveys()\n        setIsLoading(false)\n      } catch (error) {\n        console.error(\"Ошибка при удалении опросника:\", error)\n\n        let errorMsg =\n          \"Не удалось удалить опросник. Пожалуйста, попробуйте позже.\"\n\n        // Обработка различных типов ошибок\n        if (error.response) {\n          errorMsg =\n            error.response.data?.message ||\n            `Ошибка сервера: ${error.response.status} - ${error.response.statusText}`\n        }\n\n        setErrorMessage(errorMsg)\n        setTimeout(() => setErrorMessage(\"\"), 3000)\n        setIsLoading(false)\n      }\n    }\n  }\n\n  const handleChangeSurveyStatus = async (id, newStatus) => {\n    try {\n      setIsLoading(true)\n\n      // Преобразуем статус в формат сервера\n      const serverStatus =\n        newStatus === \"активный\"\n          ? \"ACTIVE\"\n          : newStatus === \"завершенный\"\n          ? \"COMPLETED\"\n          : newStatus === \"черновик\"\n          ? \"DRAFT\"\n          : newStatus\n\n      // Получаем русское название статуса для уведомления\n      const statusDisplayName =\n        serverStatus === \"ACTIVE\"\n          ? \"активный\"\n          : serverStatus === \"COMPLETED\"\n          ? \"завершенный\"\n          : serverStatus === \"DRAFT\"\n          ? \"черновик\"\n          : serverStatus\n\n      await surveyService.changeSurveyStatus(id, serverStatus)\n\n      // Показываем временное уведомление об успехе\n      setSuccessMessage(`Статус опросника изменен на \"${statusDisplayName}\"`)\n      setTimeout(() => setSuccessMessage(\"\"), 3000)\n\n      // Обновить список опросников после изменения статуса\n      fetchSurveys()\n      setIsLoading(false)\n    } catch (error) {\n      console.error(\"Ошибка при изменении статуса опросника:\", error)\n\n      let errorMsg =\n        \"Не удалось изменить статус опросника. Пожалуйста, попробуйте позже.\"\n\n      // Обработка различных типов ошибок\n      if (error.response) {\n        errorMsg =\n          error.response.data?.message ||\n          `Ошибка сервера: ${error.response.status} - ${error.response.statusText}`\n      }\n\n      setErrorMessage(errorMsg)\n      setTimeout(() => setErrorMessage(\"\"), 3000)\n      setIsLoading(false)\n    }\n  }\n\n  const getStatusColor = status => {\n    switch (status) {\n      case \"черновик\":\n      case \"DRAFT\":\n        return \"#6c757d\" // серый\n      case \"активный\":\n      case \"ACTIVE\":\n        return \"#28a745\" // зеленый\n      case \"завершенный\":\n      case \"COMPLETED\":\n        return \"#dc3545\" // красный\n      default:\n        return \"#6c757d\"\n    }\n  }\n\n  const getStatusDisplayText = status => {\n    switch (status) {\n      case \"DRAFT\":\n        return \"Черновик\"\n      case \"ACTIVE\":\n        return \"Активный\"\n      case \"COMPLETED\":\n        return \"Завершенный\"\n      default:\n        return status\n    }\n  }\n\n  const formatDate = dateString => {\n    if (!dateString) return \"—\"\n    const date = new Date(dateString)\n    return date.toLocaleDateString(\"ru-RU\")\n  }\n\n  if (!user) {\n    return <div>Загрузка...</div>\n  }\n\n  return (\n    <div className=\"dashboard-container\">\n      <Sidebar user={user} />\n      <header className=\"dashboard-header\">\n        <h1>Панель управления клиентским опытом</h1>\n        <div className=\"user-info\">\n          <span>Пользователь: {user.username}</span>\n        </div>\n      </header>\n\n      <main className=\"dashboard-content\">\n        {!showSurveyForm ? (\n          <div className=\"dashboard-actions\">\n            <h2>Добро пожаловать, {user.username}!</h2>\n            <p>\n              Управляйте клиентским опытом с помощью создания и анализа\n              опросников.\n            </p>\n\n            {errorMessage && (\n              <div className=\"error-message\">{errorMessage}</div>\n            )}\n            {successMessage && (\n              <div className=\"success-message\">{successMessage}</div>\n            )}\n\n            <div className=\"action-buttons\">\n              <button className=\"primary-button\" onClick={handleCreateSurvey}>\n                Создать новый опросник\n              </button>\n            </div>\n\n            <div className=\"surveys-list-section\">\n              <h3>Мои опросники</h3>\n\n              {surveysFetching && (\n                <div className=\"loading-indicator\">Загрузка опросников...</div>\n              )}\n              {surveysError && (\n                <div className=\"error-message\">{surveysError}</div>\n              )}\n\n              {!surveysFetching && !surveysError && surveys.length === 0 && (\n                <div className=\"empty-state\">\n                  <p>У вас пока нет созданных опросников.</p>\n                </div>\n              )}\n\n              {!surveysFetching && !surveysError && surveys.length > 0 && (\n                <div className=\"surveys-table-container\">\n                  <table className=\"surveys-table\">\n                    <thead>\n                      <tr>\n                        <th>Название</th>\n                        <th>Статус</th>\n                        <th>Дата начала</th>\n                        <th>Дата окончания</th>\n                        <th>Действия</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {surveys.map(survey => (\n                        <tr key={survey.id}>\n                          <td>{survey.title}</td>\n                          <td>\n                            <span\n                              className=\"status-badge\"\n                              style={{\n                                backgroundColor: getStatusColor(survey.status),\n                              }}\n                            >\n                              {getStatusDisplayText(survey.status)}\n                            </span>\n                          </td>\n                          <td>{formatDate(survey.startDate)}</td>\n                          <td>{formatDate(survey.endDate)}</td>\n                          <td>\n                            <div className=\"survey-actions\">\n                              <button\n                                className=\"action-button edit-button\"\n                                onClick={() => handleEditSurvey(survey.id)}\n                                title=\"Редактировать\"\n                              >\n                                {icons.edit}\n                              </button>\n\n                              <button\n                                className=\"action-button preview-button\"\n                                onClick={() => navigate(`/survey/${survey.id}`)}\n                                title=\"Предпросмотр\"\n                              >\n                                {icons.preview}\n                              </button>\n\n                              {survey.status !== \"активный\" &&\n                                survey.status !== \"ACTIVE\" && (\n                                  <button\n                                    className=\"action-button activate-button\"\n                                    onClick={() =>\n                                      handleChangeSurveyStatus(\n                                        survey.id,\n                                        \"активный\"\n                                      )\n                                    }\n                                    title=\"Активировать\"\n                                  >\n                                    {icons.activate}\n                                  </button>\n                                )}\n\n                              {(survey.status === \"активный\" ||\n                                survey.status === \"ACTIVE\") && (\n                                <button\n                                  className=\"action-button complete-button\"\n                                  onClick={() =>\n                                    handleChangeSurveyStatus(\n                                      survey.id,\n                                      \"завершенный\"\n                                    )\n                                  }\n                                  title=\"Завершить\"\n                                >\n                                  {icons.stop}\n                                </button>\n                              )}\n\n                              <button\n                                className=\"action-button delete-button\"\n                                onClick={() => handleDeleteSurvey(survey.id)}\n                                title=\"Удалить\"\n                              >\n                                {icons.delete}\n                              </button>\n                            </div>\n                          </td>\n                        </tr>\n                      ))}\n                    </tbody>\n                  </table>\n                </div>\n              )}\n            </div>\n          </div>\n        ) : (\n          <div className=\"survey-form\">\n            <h2>Создание нового опросника</h2>\n\n            {errorMessage && (\n              <div className=\"error-message\">{errorMessage}</div>\n            )}\n            {successMessage && (\n              <div className=\"success-message\">{successMessage}</div>\n            )}\n\n            <div className=\"form-section\">\n              <h3>Основная информация</h3>\n              <div className=\"form-group\">\n                <label htmlFor=\"title\">Название опросника:</label>\n                <input\n                  type=\"text\"\n                  id=\"title\"\n                  name=\"title\"\n                  className=\"form-control\"\n                  value={surveyData.title}\n                  onChange={handleSurveyChange}\n                  placeholder=\"Введите название опросника\"\n                  required\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"description\">Описание:</label>\n                <textarea\n                  id=\"description\"\n                  name=\"description\"\n                  className=\"form-control\"\n                  value={surveyData.description}\n                  onChange={handleSurveyChange}\n                  placeholder=\"Введите описание опросника\"\n                  rows=\"3\"\n                />\n              </div>\n\n              <div className=\"form-row\">\n                <div className=\"form-group half-width\">\n                  <label htmlFor=\"startDate\">Дата начала:</label>\n                  <input\n                    type=\"date\"\n                    id=\"startDate\"\n                    name=\"startDate\"\n                    className=\"form-control\"\n                    value={surveyData.startDate}\n                    onChange={handleSurveyChange}\n                  />\n                </div>\n\n                <div className=\"form-group half-width\">\n                  <label htmlFor=\"endDate\">Дата окончания:</label>\n                  <input\n                    type=\"date\"\n                    id=\"endDate\"\n                    name=\"endDate\"\n                    className=\"form-control\"\n                    value={surveyData.endDate}\n                    onChange={handleSurveyChange}\n                  />\n                </div>\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"status\">Статус:</label>\n                <select\n                  id=\"status\"\n                  name=\"status\"\n                  className=\"form-select\"\n                  value={surveyData.status}\n                  onChange={handleSurveyChange}\n                >\n                  <option value=\"DRAFT\">Черновик</option>\n                  <option value=\"ACTIVE\">Активный</option>\n                  <option value=\"COMPLETED\">Завершенный</option>\n                </select>\n              </div>\n            </div>\n\n            <div className=\"form-section\">\n              <h3>Вопросы опросника</h3>\n              <p className=\"info-text\">\n                Первые три вопроса являются обязательными и присутствуют во всех\n                опросниках.\n              </p>\n\n              {surveyData.questions.map((question, index) => (\n                <div key={index} className=\"question-card\">\n                  <div className=\"question-header\">\n                    <h4>Вопрос {index + 1}</h4>\n                    {index >= 3 && (\n                      <button\n                        type=\"button\"\n                        className=\"delete-button\"\n                        onClick={() => removeQuestion(index)}\n                      >\n                        Удалить\n                      </button>\n                    )}\n                  </div>\n\n                  <div className=\"form-group\">\n                    <label htmlFor={`question-${index}`}>Текст вопроса:</label>\n                    <input\n                      type=\"text\"\n                      id={`question-${index}`}\n                      name=\"text\"\n                      className=\"form-control\"\n                      value={question.text}\n                      onChange={e => handleQuestionChange(e, index)}\n                      placeholder=\"Введите текст вопроса\"\n                      disabled={index < 3} // Первые три вопроса нельзя изменять\n                    />\n                  </div>\n\n                  <div className=\"form-row\">\n                    <div className=\"form-group half-width\">\n                      <label htmlFor={`type-${index}`}>Тип вопроса:</label>\n                      <select\n                        id={`type-${index}`}\n                        name=\"type\"\n                        className=\"form-select\"\n                        value={question.type}\n                        onChange={e => handleQuestionChange(e, index)}\n                        disabled={index < 3}\n                      >\n                        <option value=\"single_choice\">\n                          Один вариант ответа\n                        </option>\n                        <option value=\"multiple_choice\">\n                          Несколько вариантов ответа\n                        </option>\n                        <option value=\"text\">Текстовый ответ</option>\n                        <option value=\"rating\">Оценка</option>\n                      </select>\n                    </div>\n\n                    <div className=\"form-group half-width\">\n                      <label htmlFor={`category-${index}`}>Категория:</label>\n                      <select\n                        id={`category-${index}`}\n                        name=\"category\"\n                        className=\"form-select\"\n                        value={question.category}\n                        onChange={e => handleQuestionChange(e, index)}\n                        disabled={index < 3}\n                      >\n                        {categories.map((category, i) => (\n                          <option key={i} value={category}>\n                            {category}\n                          </option>\n                        ))}\n                      </select>\n                    </div>\n                  </div>\n\n                  <div className=\"form-group checkbox-group\">\n                    <input\n                      type=\"checkbox\"\n                      id={`required-${index}`}\n                      checked={question.required}\n                      onChange={() => handleRequiredChange(index)}\n                      disabled={index < 3}\n                    />\n                    <label htmlFor={`required-${index}`}>\n                      Обязательный вопрос\n                    </label>\n                  </div>\n\n                  {(question.type === \"single_choice\" ||\n                    question.type === \"multiple_choice\") && (\n                    <div className=\"options-container\">\n                      <label>Варианты ответов:</label>\n                      {question.options.map((option, optionIndex) => (\n                        <div key={optionIndex} className=\"option-row\">\n                          <input\n                            type=\"text\"\n                            className=\"form-control\"\n                            value={option}\n                            onChange={e =>\n                              handleOptionChange(\n                                index,\n                                optionIndex,\n                                e.target.value\n                              )\n                            }\n                            placeholder={`Вариант ${optionIndex + 1}`}\n                            disabled={index < 3}\n                          />\n                          {question.options.length > 1 && index >= 3 && (\n                            <button\n                              type=\"button\"\n                              className=\"delete-option-button\"\n                              onClick={() => removeOption(index, optionIndex)}\n                            >\n                              ✕\n                            </button>\n                          )}\n                        </div>\n                      ))}\n                      {index >= 3 && (\n                        <button\n                          type=\"button\"\n                          className=\"add-option-button\"\n                          onClick={() => addOption(index)}\n                        >\n                          + Добавить вариант\n                        </button>\n                      )}\n                    </div>\n                  )}\n                </div>\n              ))}\n\n              <div className=\"add-question-form\">\n                <div className=\"add-question-header\">\n                  <h4>Создать новый вопрос</h4>\n                  <button\n                    type=\"button\"\n                    className=\"secondary-button small-button\"\n                    onClick={handleShowExistingQuestions}\n                  >\n                    Добавить из базы\n                  </button>\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"newQuestionText\">Текст вопроса:</label>\n                  <input\n                    type=\"text\"\n                    id=\"newQuestionText\"\n                    name=\"text\"\n                    className=\"form-control\"\n                    value={newQuestion.text}\n                    onChange={handleNewQuestionChange}\n                    placeholder=\"Введите текст вопроса\"\n                  />\n                </div>\n\n                <div className=\"form-row\">\n                  <div className=\"form-group half-width\">\n                    <label htmlFor=\"newQuestionType\">Тип вопроса:</label>\n                    <select\n                      id=\"newQuestionType\"\n                      name=\"type\"\n                      className=\"form-select\"\n                      value={newQuestion.type}\n                      onChange={handleNewQuestionChange}\n                    >\n                      <option value=\"single_choice\">Один вариант ответа</option>\n                      <option value=\"multiple_choice\">\n                        Несколько вариантов ответа\n                      </option>\n                      <option value=\"text\">Текстовый ответ</option>\n                      <option value=\"rating\">Оценка</option>\n                    </select>\n                  </div>\n\n                  <div className=\"form-group half-width\">\n                    <label htmlFor=\"newQuestionCategory\">Категория:</label>\n                    <select\n                      id=\"newQuestionCategory\"\n                      name=\"category\"\n                      className=\"form-select\"\n                      value={newQuestion.category}\n                      onChange={handleNewQuestionChange}\n                    >\n                      <option value=\"\">Выберите категорию</option>\n                      {categories.map((category, i) => (\n                        <option key={i} value={category}>\n                          {category}\n                        </option>\n                      ))}\n                    </select>\n                  </div>\n                </div>\n\n                <div className=\"form-group checkbox-group\">\n                  <input\n                    type=\"checkbox\"\n                    id=\"newQuestionRequired\"\n                    name=\"required\"\n                    checked={newQuestion.required}\n                    onChange={() =>\n                      setNewQuestion({\n                        ...newQuestion,\n                        required: !newQuestion.required,\n                      })\n                    }\n                  />\n                  <label htmlFor=\"newQuestionRequired\">\n                    Обязательный вопрос\n                  </label>\n                </div>\n\n                {(newQuestion.type === \"single_choice\" ||\n                  newQuestion.type === \"multiple_choice\") && (\n                  <div className=\"options-container\">\n                    <label>Варианты ответов:</label>\n                    {newQuestion.options.map((option, index) => (\n                      <div key={index} className=\"option-row\">\n                        <input\n                          type=\"text\"\n                          className=\"form-control\"\n                          value={option}\n                          onChange={e =>\n                            handleNewOptionChange(index, e.target.value)\n                          }\n                          placeholder={`Вариант ${index + 1}`}\n                        />\n                        {newQuestion.options.length > 1 && (\n                          <button\n                            type=\"button\"\n                            className=\"delete-option-button\"\n                            onClick={() => removeNewOption(index)}\n                          >\n                            ✕\n                          </button>\n                        )}\n                      </div>\n                    ))}\n                    <button\n                      type=\"button\"\n                      className=\"add-option-button\"\n                      onClick={addNewOption}\n                    >\n                      + Добавить вариант\n                    </button>\n                  </div>\n                )}\n\n                <button\n                  type=\"button\"\n                  className=\"add-button\"\n                  onClick={addNewQuestion}\n                  style={{ marginTop: \"10px\" }}\n                >\n                  Добавить вопрос\n                </button>\n              </div>\n\n              <div className=\"add-category-form\">\n                <h4>Добавить новую категорию</h4>\n                <div className=\"form-row\">\n                  <div className=\"form-group\">\n                    <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      value={newCategory}\n                      onChange={e => setNewCategory(e.target.value)}\n                      placeholder=\"Название новой категории\"\n                      style={{\n                        // marginBottom: \"10px\",\n                        width: \"100%\",\n                        minWidth: \"250px\",\n                      }}\n                    />\n                  </div>\n                  <button\n                    type=\"button\"\n                    className=\"add-button\"\n                    onClick={addCategory}\n                    style={{ marginBottom: \"10px\" }}\n                  >\n                    Добавить категорию\n                  </button>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"form-actions\">\n              <button\n                type=\"button\"\n                className=\"primary-button\"\n                onClick={saveSurvey}\n                disabled={isLoading}\n              >\n                {isLoading ? \"Сохранение...\" : \"Сохранить опросник\"}\n              </button>\n              <button\n                type=\"button\"\n                className=\"secondary-button\"\n                onClick={cancelSurveyCreation}\n                disabled={isLoading}\n              >\n                Отменить\n              </button>\n            </div>\n          </div>\n        )}\n      </main>\n\n      {/* Модальное окно для выбора существующих вопросов */}\n      {showExistingQuestions && (\n        <div className=\"modal-overlay\" onClick={handleCloseExistingQuestions}>\n          <div className=\"modal-content\" onClick={e => e.stopPropagation()}>\n            <div className=\"modal-header\">\n              <h3>Выбрать вопросы из базы</h3>\n              <button\n                className=\"modal-close-button\"\n                onClick={handleCloseExistingQuestions}\n              >\n                ✕\n              </button>\n            </div>\n\n            <div className=\"modal-body\">\n              {/* Поиск */}\n              <div className=\"search-section\">\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Поиск по тексту вопроса или категории...\"\n                  value={searchTerm}\n                  onChange={e => setSearchTerm(e.target.value)}\n                />\n              </div>\n\n              {/* Загрузка */}\n              {loadingQuestions && (\n                <div className=\"loading-indicator\">Загрузка вопросов...</div>\n              )}\n\n              {/* Список вопросов */}\n              {!loadingQuestions && (\n                <div className=\"questions-list\">\n                  {getFilteredQuestions().length === 0 ? (\n                    <div className=\"empty-state\">\n                      <p>Вопросы не найдены</p>\n                    </div>\n                  ) : (\n                    getFilteredQuestions().map(question => {\n                      const isSelected = selectedExistingQuestions.some(\n                        q => q.id === question.id\n                      )\n                      const isDuplicate = surveyData.questions.some(\n                        q =>\n                          q.text.toLowerCase().trim() ===\n                          question.text.toLowerCase().trim()\n                      )\n\n                      return (\n                        <div\n                          key={question.id}\n                          className={`question-item ${\n                            isSelected ? \"selected\" : \"\"\n                          } ${isDuplicate ? \"duplicate\" : \"\"}`}\n                          onClick={() =>\n                            !isDuplicate && toggleExistingQuestion(question)\n                          }\n                        >\n                          <div className=\"question-checkbox\">\n                            <input\n                              type=\"checkbox\"\n                              checked={isSelected}\n                              onChange={() =>\n                                !isDuplicate && toggleExistingQuestion(question)\n                              }\n                              disabled={isDuplicate}\n                            />\n                          </div>\n\n                          <div className=\"question-details\">\n                            <div className=\"question-text\">\n                              {question.text}\n                              {isDuplicate && (\n                                <span className=\"duplicate-label\">\n                                  (уже добавлен)\n                                </span>\n                              )}\n                            </div>\n                            <div className=\"question-meta\">\n                              <span className=\"question-type\">\n                                {question.type === \"SINGLE_CHOICE\"\n                                  ? \"Один вариант\"\n                                  : question.type === \"MULTIPLE_CHOICE\"\n                                  ? \"Несколько вариантов\"\n                                  : question.type === \"TEXT\"\n                                  ? \"Текст\"\n                                  : question.type === \"RATING\"\n                                  ? \"Рейтинг\"\n                                  : question.type}\n                              </span>\n                              {question.category && (\n                                <span className=\"question-category\">\n                                  • {question.category}\n                                </span>\n                              )}\n                              {question.required && (\n                                <span className=\"question-required\">\n                                  • Обязательный\n                                </span>\n                              )}\n                            </div>\n                            {question.options &&\n                              question.options.length > 0 && (\n                                <div className=\"question-options-preview\">\n                                  Варианты:{\" \"}\n                                  {question.options.slice(0, 3).join(\", \")}\n                                  {question.options.length > 3 && \"...\"}\n                                </div>\n                              )}\n                          </div>\n                        </div>\n                      )\n                    })\n                  )}\n                </div>\n              )}\n            </div>\n\n            <div className=\"modal-footer\">\n              <div className=\"selected-count\">\n                Выбрано: {selectedExistingQuestions.length}\n              </div>\n              <div className=\"modal-actions\">\n                <button\n                  className=\"secondary-button\"\n                  onClick={handleCloseExistingQuestions}\n                >\n                  Отмена\n                </button>\n                <button\n                  className=\"primary-button\"\n                  onClick={fillFormWithSelectedQuestion}\n                  disabled={selectedExistingQuestions.length === 0}\n                >\n                  Добавить выбранный вопрос\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default DashboardPage\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}