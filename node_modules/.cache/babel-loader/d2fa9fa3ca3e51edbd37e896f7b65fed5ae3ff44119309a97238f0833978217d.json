{"ast":null,"code":"var _jsxFileName = \"/Users/shirokiy/Desktop/Repositories/\\u0414\\u0438\\u043F\\u043B\\u043E\\u043C\\u044B/ClientExp/client_exp-frontend/src/pages/Questions/QuestionsPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { questionsService } from \"../../api/questions\";\nimport Sidebar from \"../../components/common/Sidebar\";\nimport { authService } from \"../../api/auth\";\nimport \"./QuestionsPage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuestionsPage = () => {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [currentUser, setCurrentUser] = useState(null);\n\n  // Состояние для модального окна добавления/редактирования вопроса\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [currentQuestion, setCurrentQuestion] = useState(null);\n\n  // Состояние для формы вопроса\n  const [formData, setFormData] = useState({\n    text: \"\",\n    type: \"TEXT\",\n    // По умолчанию текстовый тип\n    required: false,\n    category: \"\",\n    orderNumber: 0,\n    options: []\n  });\n  const navigate = useNavigate();\n  useEffect(() => {\n    const user = authService.getCurrentUser();\n    if (!user || user.role !== \"ADMIN\" && user.role !== \"MANAGER\") {\n      navigate(\"/login\");\n      return;\n    }\n    setCurrentUser(user);\n    fetchQuestions();\n  }, [navigate]);\n  const fetchQuestions = async () => {\n    try {\n      setLoading(true);\n      const data = await questionsService.getAllQuestions();\n      setQuestions(data);\n      setError(null);\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(\"Ошибка при загрузке вопросов: \" + (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || err.message));\n      console.error(\"Failed to fetch questions:\", err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const openAddModal = () => {\n    setCurrentQuestion(null);\n    setFormData({\n      text: \"\",\n      type: \"TEXT\",\n      required: false,\n      category: \"\",\n      orderNumber: questions.length + 1,\n      options: []\n    });\n    setIsModalOpen(true);\n  };\n  const openEditModal = question => {\n    setCurrentQuestion(question);\n    setFormData({\n      text: question.text,\n      type: question.type,\n      required: question.required,\n      category: question.category || \"\",\n      orderNumber: question.orderNumber || 0,\n      options: question.options || []\n    });\n    setIsModalOpen(true);\n  };\n  const closeModal = () => {\n    setIsModalOpen(false);\n    setCurrentQuestion(null);\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value,\n      type,\n      checked\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: type === \"checkbox\" ? checked : value\n    });\n  };\n  const handleAddOption = () => {\n    setFormData({\n      ...formData,\n      options: [...formData.options, {\n        text: \"\"\n      }]\n    });\n  };\n  const handleOptionChange = (index, value) => {\n    const updatedOptions = [...formData.options];\n    updatedOptions[index] = {\n      text: value\n    };\n    setFormData({\n      ...formData,\n      options: updatedOptions\n    });\n  };\n  const handleRemoveOption = index => {\n    const updatedOptions = formData.options.filter((_, i) => i !== index);\n    setFormData({\n      ...formData,\n      options: updatedOptions\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      if (currentQuestion) {\n        // Обновление существующего вопроса\n        await questionsService.updateQuestion(currentQuestion.id, formData);\n      } else {\n        // Создание нового вопроса\n        await questionsService.createQuestion(formData);\n      }\n      closeModal();\n      fetchQuestions(); // Обновляем список после изменений\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      setError(\"Ошибка при сохранении вопроса: \" + (((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || err.message));\n      console.error(\"Failed to save question:\", err);\n    }\n  };\n  const handleDeleteQuestion = async id => {\n    if (window.confirm(\"Вы уверены, что хотите удалить этот вопрос?\")) {\n      try {\n        await questionsService.deleteQuestion(id);\n        fetchQuestions(); // Обновляем список после удаления\n      } catch (err) {\n        var _err$response3, _err$response3$data;\n        setError(\"Ошибка при удалении вопроса: \" + (((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : (_err$response3$data = _err$response3.data) === null || _err$response3$data === void 0 ? void 0 : _err$response3$data.message) || err.message));\n        console.error(\"Failed to delete question:\", err);\n      }\n    }\n  };\n\n  // Функция для отображения типа вопроса в читаемом формате\n  const getQuestionTypeLabel = type => {\n    const types = {\n      TEXT: \"Текстовый\",\n      MULTIPLE_CHOICE: \"Множественный выбор\",\n      SINGLE_CHOICE: \"Одиночный выбор\",\n      RATING: \"Рейтинг\",\n      DATE: \"Дата\"\n    };\n    return types[type] || type;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      user: currentUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"questions-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"\\u0411\\u0430\\u0437\\u0430 \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\\u043E\\u0432\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-add-question\",\n          onClick: openAddModal,\n          children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 19\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\",\n        children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"questions-list\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"\\u2116\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"\\u0422\\u0435\\u043A\\u0441\\u0442 \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\\u0430\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"\\u0422\\u0438\\u043F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"\\u041A\\u0430\\u0442\\u0435\\u0433\\u043E\\u0440\\u0438\\u044F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"\\u041E\\u0431\\u044F\\u0437\\u0430\\u0442\\u0435\\u043B\\u044C\\u043D\\u044B\\u0439\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"\\u0414\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u044F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: questions.length === 0 ? /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                colSpan: \"6\",\n                className: \"no-data\",\n                children: \"\\u0412\\u043E\\u043F\\u0440\\u043E\\u0441\\u044B \\u043D\\u0435 \\u043D\\u0430\\u0439\\u0434\\u0435\\u043D\\u044B\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 19\n            }, this) : questions.map((question, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: question.orderNumber || index + 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: question.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: getQuestionTypeLabel(question.type)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: question.category || \"Без категории\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: question.required ? \"Да\" : \"Нет\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"actions\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn-edit\",\n                  onClick: () => openEditModal(question),\n                  children: \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 215,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn-delete\",\n                  onClick: () => handleDeleteQuestion(question.id),\n                  children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 221,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 23\n              }, this)]\n            }, question.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 11\n      }, this), isModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"close\",\n            onClick: closeModal,\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: currentQuestion ? \"Редактирование вопроса\" : \"Добавление вопроса\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"text\",\n                children: \"\\u0422\\u0435\\u043A\\u0441\\u0442 \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\\u0430*:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                id: \"text\",\n                name: \"text\",\n                value: formData.text,\n                onChange: handleInputChange,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"type\",\n                children: \"\\u0422\\u0438\\u043F \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\\u0430*:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                id: \"type\",\n                name: \"type\",\n                value: formData.type,\n                onChange: handleInputChange,\n                required: true,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"TEXT\",\n                  children: \"\\u0422\\u0435\\u043A\\u0441\\u0442\\u043E\\u0432\\u044B\\u0439\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 270,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"SINGLE_CHOICE\",\n                  children: \"\\u041E\\u0434\\u0438\\u043D\\u043E\\u0447\\u043D\\u044B\\u0439 \\u0432\\u044B\\u0431\\u043E\\u0440\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 271,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"MULTIPLE_CHOICE\",\n                  children: \"\\u041C\\u043D\\u043E\\u0436\\u0435\\u0441\\u0442\\u0432\\u0435\\u043D\\u043D\\u044B\\u0439 \\u0432\\u044B\\u0431\\u043E\\u0440\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 272,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"RATING\",\n                  children: \"\\u0420\\u0435\\u0439\\u0442\\u0438\\u043D\\u0433\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 273,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"DATE\",\n                  children: \"\\u0414\\u0430\\u0442\\u0430\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 274,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"category\",\n                children: \"\\u041A\\u0430\\u0442\\u0435\\u0433\\u043E\\u0440\\u0438\\u044F:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"category\",\n                name: \"category\",\n                value: formData.category,\n                onChange: handleInputChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"orderNumber\",\n                children: \"\\u041F\\u043E\\u0440\\u044F\\u0434\\u043A\\u043E\\u0432\\u044B\\u0439 \\u043D\\u043E\\u043C\\u0435\\u0440:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 290,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                id: \"orderNumber\",\n                name: \"orderNumber\",\n                value: formData.orderNumber,\n                onChange: handleInputChange,\n                min: \"0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group checkbox\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  name: \"required\",\n                  checked: formData.required,\n                  onChange: handleInputChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 303,\n                  columnNumber: 21\n                }, this), \"\\u041E\\u0431\\u044F\\u0437\\u0430\\u0442\\u0435\\u043B\\u044C\\u043D\\u044B\\u0439 \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 17\n            }, this), (formData.type === \"SINGLE_CHOICE\" || formData.type === \"MULTIPLE_CHOICE\") && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"options-section\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"\\u0412\\u0430\\u0440\\u0438\\u0430\\u043D\\u0442\\u044B \\u043E\\u0442\\u0432\\u0435\\u0442\\u043E\\u0432:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 317,\n                columnNumber: 21\n              }, this), formData.options.map((option, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"option-row\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: option.text,\n                  onChange: e => handleOptionChange(index, e.target.value),\n                  placeholder: \"\\u0422\\u0435\\u043A\\u0441\\u0442 \\u0432\\u0430\\u0440\\u0438\\u0430\\u043D\\u0442\\u0430 \\u043E\\u0442\\u0432\\u0435\\u0442\\u0430\",\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 320,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: \"btn-remove-option\",\n                  onClick: () => handleRemoveOption(index),\n                  children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 329,\n                  columnNumber: 25\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 23\n              }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"btn-add-option\",\n                onClick: handleAddOption,\n                children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0432\\u0430\\u0440\\u0438\\u0430\\u043D\\u0442\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 338,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-actions\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"btn-save\",\n                children: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 349,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"btn-cancel\",\n                onClick: closeModal,\n                children: \"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0430\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 352,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 172,\n    columnNumber: 5\n  }, this);\n};\n_s(QuestionsPage, \"gRR7Tf5KjjSO0K8aZn9hHm3mvDI=\", false, function () {\n  return [useNavigate];\n});\n_c = QuestionsPage;\nexport default QuestionsPage;\nvar _c;\n$RefreshReg$(_c, \"QuestionsPage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","questionsService","Sidebar","authService","jsxDEV","_jsxDEV","QuestionsPage","_s","questions","setQuestions","loading","setLoading","error","setError","currentUser","setCurrentUser","isModalOpen","setIsModalOpen","currentQuestion","setCurrentQuestion","formData","setFormData","text","type","required","category","orderNumber","options","navigate","user","getCurrentUser","role","fetchQuestions","data","getAllQuestions","err","_err$response","_err$response$data","response","message","console","openAddModal","length","openEditModal","question","closeModal","handleInputChange","e","name","value","checked","target","handleAddOption","handleOptionChange","index","updatedOptions","handleRemoveOption","filter","_","i","handleSubmit","preventDefault","updateQuestion","id","createQuestion","_err$response2","_err$response2$data","handleDeleteQuestion","window","confirm","deleteQuestion","_err$response3","_err$response3$data","getQuestionTypeLabel","types","TEXT","MULTIPLE_CHOICE","SINGLE_CHOICE","RATING","DATE","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","colSpan","map","onSubmit","htmlFor","onChange","min","option","placeholder","_c","$RefreshReg$"],"sources":["/Users/shirokiy/Desktop/Repositories/Дипломы/ClientExp/client_exp-frontend/src/pages/Questions/QuestionsPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport { useNavigate } from \"react-router-dom\"\nimport { questionsService } from \"../../api/questions\"\nimport Sidebar from \"../../components/common/Sidebar\"\nimport { authService } from \"../../api/auth\"\nimport \"./QuestionsPage.css\"\n\nconst QuestionsPage = () => {\n  const [questions, setQuestions] = useState([])\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState(null)\n  const [currentUser, setCurrentUser] = useState(null)\n\n  // Состояние для модального окна добавления/редактирования вопроса\n  const [isModalOpen, setIsModalOpen] = useState(false)\n  const [currentQuestion, setCurrentQuestion] = useState(null)\n\n  // Состояние для формы вопроса\n  const [formData, setFormData] = useState({\n    text: \"\",\n    type: \"TEXT\", // По умолчанию текстовый тип\n    required: false,\n    category: \"\",\n    orderNumber: 0,\n    options: [],\n  })\n\n  const navigate = useNavigate()\n\n  useEffect(() => {\n    const user = authService.getCurrentUser()\n    if (!user || (user.role !== \"ADMIN\" && user.role !== \"MANAGER\")) {\n      navigate(\"/login\")\n      return\n    }\n    setCurrentUser(user)\n\n    fetchQuestions()\n  }, [navigate])\n\n  const fetchQuestions = async () => {\n    try {\n      setLoading(true)\n      const data = await questionsService.getAllQuestions()\n      setQuestions(data)\n      setError(null)\n    } catch (err) {\n      setError(\n        \"Ошибка при загрузке вопросов: \" +\n          (err.response?.data?.message || err.message)\n      )\n      console.error(\"Failed to fetch questions:\", err)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const openAddModal = () => {\n    setCurrentQuestion(null)\n    setFormData({\n      text: \"\",\n      type: \"TEXT\",\n      required: false,\n      category: \"\",\n      orderNumber: questions.length + 1,\n      options: [],\n    })\n    setIsModalOpen(true)\n  }\n\n  const openEditModal = question => {\n    setCurrentQuestion(question)\n    setFormData({\n      text: question.text,\n      type: question.type,\n      required: question.required,\n      category: question.category || \"\",\n      orderNumber: question.orderNumber || 0,\n      options: question.options || [],\n    })\n    setIsModalOpen(true)\n  }\n\n  const closeModal = () => {\n    setIsModalOpen(false)\n    setCurrentQuestion(null)\n  }\n\n  const handleInputChange = e => {\n    const { name, value, type, checked } = e.target\n    setFormData({\n      ...formData,\n      [name]: type === \"checkbox\" ? checked : value,\n    })\n  }\n\n  const handleAddOption = () => {\n    setFormData({\n      ...formData,\n      options: [...formData.options, { text: \"\" }],\n    })\n  }\n\n  const handleOptionChange = (index, value) => {\n    const updatedOptions = [...formData.options]\n    updatedOptions[index] = { text: value }\n    setFormData({\n      ...formData,\n      options: updatedOptions,\n    })\n  }\n\n  const handleRemoveOption = index => {\n    const updatedOptions = formData.options.filter((_, i) => i !== index)\n    setFormData({\n      ...formData,\n      options: updatedOptions,\n    })\n  }\n\n  const handleSubmit = async e => {\n    e.preventDefault()\n\n    try {\n      if (currentQuestion) {\n        // Обновление существующего вопроса\n        await questionsService.updateQuestion(currentQuestion.id, formData)\n      } else {\n        // Создание нового вопроса\n        await questionsService.createQuestion(formData)\n      }\n\n      closeModal()\n      fetchQuestions() // Обновляем список после изменений\n    } catch (err) {\n      setError(\n        \"Ошибка при сохранении вопроса: \" +\n          (err.response?.data?.message || err.message)\n      )\n      console.error(\"Failed to save question:\", err)\n    }\n  }\n\n  const handleDeleteQuestion = async id => {\n    if (window.confirm(\"Вы уверены, что хотите удалить этот вопрос?\")) {\n      try {\n        await questionsService.deleteQuestion(id)\n        fetchQuestions() // Обновляем список после удаления\n      } catch (err) {\n        setError(\n          \"Ошибка при удалении вопроса: \" +\n            (err.response?.data?.message || err.message)\n        )\n        console.error(\"Failed to delete question:\", err)\n      }\n    }\n  }\n\n  // Функция для отображения типа вопроса в читаемом формате\n  const getQuestionTypeLabel = type => {\n    const types = {\n      TEXT: \"Текстовый\",\n      MULTIPLE_CHOICE: \"Множественный выбор\",\n      SINGLE_CHOICE: \"Одиночный выбор\",\n      RATING: \"Рейтинг\",\n      DATE: \"Дата\",\n    }\n    return types[type] || type\n  }\n\n  return (\n    <div className=\"dashboard-container\">\n      <Sidebar user={currentUser} />\n      <div className=\"dashboard-content\">\n        <div className=\"questions-header\">\n          <h1>База вопросов</h1>\n          <button className=\"btn-add-question\" onClick={openAddModal}>\n            Добавить вопрос\n          </button>\n        </div>\n\n        {error && <div className=\"error-message\">{error}</div>}\n\n        {loading ? (\n          <div className=\"loading-spinner\">Загрузка...</div>\n        ) : (\n          <div className=\"questions-list\">\n            <table>\n              <thead>\n                <tr>\n                  <th>№</th>\n                  <th>Текст вопроса</th>\n                  <th>Тип</th>\n                  <th>Категория</th>\n                  <th>Обязательный</th>\n                  <th>Действия</th>\n                </tr>\n              </thead>\n              <tbody>\n                {questions.length === 0 ? (\n                  <tr>\n                    <td colSpan=\"6\" className=\"no-data\">\n                      Вопросы не найдены\n                    </td>\n                  </tr>\n                ) : (\n                  questions.map((question, index) => (\n                    <tr key={question.id}>\n                      <td>{question.orderNumber || index + 1}</td>\n                      <td>{question.text}</td>\n                      <td>{getQuestionTypeLabel(question.type)}</td>\n                      <td>{question.category || \"Без категории\"}</td>\n                      <td>{question.required ? \"Да\" : \"Нет\"}</td>\n                      <td className=\"actions\">\n                        <button\n                          className=\"btn-edit\"\n                          onClick={() => openEditModal(question)}\n                        >\n                          Редактировать\n                        </button>\n                        <button\n                          className=\"btn-delete\"\n                          onClick={() => handleDeleteQuestion(question.id)}\n                        >\n                          Удалить\n                        </button>\n                      </td>\n                    </tr>\n                  ))\n                )}\n              </tbody>\n            </table>\n          </div>\n        )}\n\n        {/* Модальное окно для добавления/редактирования вопроса */}\n        {isModalOpen && (\n          <div className=\"modal\">\n            <div className=\"modal-content\">\n              <span className=\"close\" onClick={closeModal}>\n                &times;\n              </span>\n              <h2>\n                {currentQuestion\n                  ? \"Редактирование вопроса\"\n                  : \"Добавление вопроса\"}\n              </h2>\n\n              <form onSubmit={handleSubmit}>\n                <div className=\"form-group\">\n                  <label htmlFor=\"text\">Текст вопроса*:</label>\n                  <textarea\n                    id=\"text\"\n                    name=\"text\"\n                    value={formData.text}\n                    onChange={handleInputChange}\n                    required\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"type\">Тип вопроса*:</label>\n                  <select\n                    id=\"type\"\n                    name=\"type\"\n                    value={formData.type}\n                    onChange={handleInputChange}\n                    required\n                  >\n                    <option value=\"TEXT\">Текстовый</option>\n                    <option value=\"SINGLE_CHOICE\">Одиночный выбор</option>\n                    <option value=\"MULTIPLE_CHOICE\">Множественный выбор</option>\n                    <option value=\"RATING\">Рейтинг</option>\n                    <option value=\"DATE\">Дата</option>\n                  </select>\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"category\">Категория:</label>\n                  <input\n                    type=\"text\"\n                    id=\"category\"\n                    name=\"category\"\n                    value={formData.category}\n                    onChange={handleInputChange}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"orderNumber\">Порядковый номер:</label>\n                  <input\n                    type=\"number\"\n                    id=\"orderNumber\"\n                    name=\"orderNumber\"\n                    value={formData.orderNumber}\n                    onChange={handleInputChange}\n                    min=\"0\"\n                  />\n                </div>\n\n                <div className=\"form-group checkbox\">\n                  <label>\n                    <input\n                      type=\"checkbox\"\n                      name=\"required\"\n                      checked={formData.required}\n                      onChange={handleInputChange}\n                    />\n                    Обязательный вопрос\n                  </label>\n                </div>\n\n                {/* Варианты ответов для вопросов с выбором */}\n                {(formData.type === \"SINGLE_CHOICE\" ||\n                  formData.type === \"MULTIPLE_CHOICE\") && (\n                  <div className=\"options-section\">\n                    <h3>Варианты ответов:</h3>\n                    {formData.options.map((option, index) => (\n                      <div key={index} className=\"option-row\">\n                        <input\n                          type=\"text\"\n                          value={option.text}\n                          onChange={e =>\n                            handleOptionChange(index, e.target.value)\n                          }\n                          placeholder=\"Текст варианта ответа\"\n                          required\n                        />\n                        <button\n                          type=\"button\"\n                          className=\"btn-remove-option\"\n                          onClick={() => handleRemoveOption(index)}\n                        >\n                          Удалить\n                        </button>\n                      </div>\n                    ))}\n                    <button\n                      type=\"button\"\n                      className=\"btn-add-option\"\n                      onClick={handleAddOption}\n                    >\n                      Добавить вариант\n                    </button>\n                  </div>\n                )}\n\n                <div className=\"form-actions\">\n                  <button type=\"submit\" className=\"btn-save\">\n                    Сохранить\n                  </button>\n                  <button\n                    type=\"button\"\n                    className=\"btn-cancel\"\n                    onClick={closeModal}\n                  >\n                    Отмена\n                  </button>\n                </div>\n              </form>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default QuestionsPage\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}