{"ast":null,"code":"var _jsxFileName = \"/Users/shirokiy/Desktop/Repositories/\\u0414\\u0438\\u043F\\u043B\\u043E\\u043C\\u044B/ClientExp/client_exp-frontend/src/pages/Dashboard/StatisticsPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport { surveyService } from \"../../api/survey\";\nimport { authService } from \"../../api/auth\";\nimport \"./DashboardStyles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StatisticsPage = () => {\n  _s();\n  var _responseDetails$resp, _responseDetails$resp2;\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [surveys, setSurveys] = useState([]);\n  const [selectedSurvey, setSelectedSurvey] = useState(null);\n  const [responses, setResponses] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [responseDetails, setResponseDetails] = useState(null);\n  useEffect(() => {\n    const user = authService.getCurrentUser();\n    if (!user) {\n      navigate(\"/login\");\n      return;\n    }\n    fetchSurveys();\n  }, [navigate]);\n  useEffect(() => {\n    // Проверяем наличие параметра survey в URL\n    const params = new URLSearchParams(location.search);\n    const surveyId = params.get(\"survey\");\n    if (surveyId && surveys.length > 0) {\n      const survey = surveys.find(s => s.id === parseInt(surveyId));\n      if (survey) {\n        handleSurveySelect(survey);\n      }\n    }\n  }, [surveys, location.search]);\n  const fetchSurveys = async () => {\n    try {\n      setLoading(true);\n      const response = await surveyService.getAllSurveys();\n      let surveysData = [];\n      if (response && response.content && Array.isArray(response.content)) {\n        surveysData = response.content;\n      } else if (Array.isArray(response)) {\n        surveysData = response;\n      }\n      setSurveys(surveysData);\n      setLoading(false);\n    } catch (error) {\n      console.error(\"Ошибка при получении опросников:\", error);\n      setError(\"Не удалось загрузить опросники. Пожалуйста, попробуйте позже.\");\n      setLoading(false);\n    }\n  };\n  const fetchResponses = async surveyId => {\n    try {\n      setLoading(true);\n      setError(\"\");\n      // Предполагаем, что в API есть метод для получения ответов по ID опросника\n      const response = await surveyService.getSurveyResponses(surveyId);\n      setResponses(response || []);\n      setLoading(false);\n    } catch (error) {\n      console.error(\"Ошибка при получении ответов:\", error);\n      setError(\"Не удалось загрузить ответы. Пожалуйста, попробуйте позже.\");\n      setResponses([]);\n      setLoading(false);\n    }\n  };\n  const handleSurveySelect = survey => {\n    setSelectedSurvey(survey);\n    setResponseDetails(null);\n    fetchResponses(survey.id);\n  };\n  const handleResponseSelect = response => {\n    setResponseDetails(response);\n  };\n  const formatDate = dateString => {\n    if (!dateString) return \"—\";\n    const date = new Date(dateString);\n    return date.toLocaleDateString(\"ru-RU\", {\n      day: \"2-digit\",\n      month: \"2-digit\",\n      year: \"numeric\",\n      hour: \"2-digit\",\n      minute: \"2-digit\"\n    });\n  };\n\n  // Заглушка для отображения статистики по вопросу\n  const renderQuestionStats = questionId => {\n    if (!selectedSurvey || !responses.length) return null;\n    const question = selectedSurvey.questions.find(q => q.id === questionId);\n    if (!question) return null;\n\n    // Собираем ответы на этот вопрос\n    const answersForQuestion = responses.filter(r => r.answers).flatMap(r => r.answers).filter(a => a.questionId === questionId);\n    if (!answersForQuestion.length) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-data\",\n        children: \"\\u041D\\u0435\\u0442 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445 \\u0434\\u043B\\u044F \\u0430\\u043D\\u0430\\u043B\\u0438\\u0437\\u0430\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 14\n      }, this);\n    }\n\n    // Для вопросов с вариантами ответа показываем статистику\n    if (question.type === \"SINGLE_CHOICE\" || question.type === \"MULTIPLE_CHOICE\") {\n      // Считаем количество каждого варианта ответа\n      const answerCounts = {};\n      answersForQuestion.forEach(answer => {\n        if (Array.isArray(answer.answer)) {\n          // Для multiple choice\n          answer.answer.forEach(option => {\n            answerCounts[option] = (answerCounts[option] || 0) + 1;\n          });\n        } else {\n          // Для single choice\n          answerCounts[answer.answer] = (answerCounts[answer.answer] || 0) + 1;\n        }\n      });\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-stats\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"\\u0421\\u0442\\u0430\\u0442\\u0438\\u0441\\u0442\\u0438\\u043A\\u0430 \\u043E\\u0442\\u0432\\u0435\\u0442\\u043E\\u0432:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stats-bars\",\n          children: Object.entries(answerCounts).map(([option, count]) => {\n            const percentage = Math.round(count / answersForQuestion.length * 100);\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stat-label\",\n                children: option\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stat-bar-container\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"stat-bar\",\n                  style: {\n                    width: `${percentage}%`\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"stat-value\",\n                  children: [percentage, \"% (\", count, \")\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 152,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 19\n              }, this)]\n            }, option, true, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this);\n    }\n\n    // Для текстовых вопросов показываем список ответов\n    if (question.type === \"TEXT\") {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-answers\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"\\u0422\\u0435\\u043A\\u0441\\u0442\\u043E\\u0432\\u044B\\u0435 \\u043E\\u0442\\u0432\\u0435\\u0442\\u044B:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"text-answers-list\",\n          children: answersForQuestion.map((answer, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"text-answer-item\",\n            children: answer.answer || \"Нет ответа\"\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this);\n    }\n\n    // Для рейтинговых вопросов показываем средний рейтинг\n    if (question.type === \"RATING\") {\n      const ratings = answersForQuestion.map(a => parseInt(a.answer) || 0);\n      const averageRating = ratings.reduce((sum, rating) => sum + rating, 0) / ratings.length;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rating-stats\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"\\u0421\\u0440\\u0435\\u0434\\u043D\\u0438\\u0439 \\u0440\\u0435\\u0439\\u0442\\u0438\\u043D\\u0433: \", averageRating.toFixed(1), \" \\u0438\\u0437 10\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rating-distribution\",\n          children: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map(rating => {\n            const count = ratings.filter(r => r === rating).length;\n            const percentage = Math.round(count / ratings.length * 100);\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"rating-bar-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"rating-label\",\n                children: rating\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"rating-bar-wrapper\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"rating-bar\",\n                  style: {\n                    height: `${percentage}%`\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 198,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"rating-count\",\n                children: count\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 19\n              }, this)]\n            }, rating, true, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this);\n    }\n    return null;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"statistics-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"page-title\",\n      children: \"\\u0421\\u0442\\u0430\\u0442\\u0438\\u0441\\u0442\\u0438\\u043A\\u0430 \\u043E\\u043F\\u0440\\u043E\\u0441\\u043E\\u0432\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 17\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-indicator\",\n      children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"statistics-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"surveys-list-sidebar\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\u041E\\u043F\\u0440\\u043E\\u0441\\u043D\\u0438\\u043A\\u0438\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 13\n        }, this), surveys.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"empty-state\",\n          children: \"\\u0423 \\u0432\\u0430\\u0441 \\u043F\\u043E\\u043A\\u0430 \\u043D\\u0435\\u0442 \\u043E\\u043F\\u0440\\u043E\\u0441\\u043D\\u0438\\u043A\\u043E\\u0432\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"surveys-list\",\n          children: surveys.map(survey => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: `survey-item ${(selectedSurvey === null || selectedSurvey === void 0 ? void 0 : selectedSurvey.id) === survey.id ? \"active\" : \"\"}`,\n            onClick: () => handleSurveySelect(survey),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"survey-title\",\n              children: survey.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"survey-meta\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: `survey-status status-${survey.status.toLowerCase()}`,\n                children: survey.status === \"ACTIVE\" ? \"Активный\" : survey.status === \"COMPLETED\" ? \"Завершен\" : \"Черновик\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"survey-responses-count\",\n                children: [\"\\u041E\\u0442\\u0432\\u0435\\u0442\\u043E\\u0432: \", survey.responsesCount || 0]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 21\n            }, this)]\n          }, survey.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"statistics-content\",\n        children: !selectedSurvey ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"select-survey-prompt\",\n          children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u043E\\u043F\\u0440\\u043E\\u0441\\u043D\\u0438\\u043A \\u0438\\u0437 \\u0441\\u043F\\u0438\\u0441\\u043A\\u0430 \\u0441\\u043B\\u0435\\u0432\\u0430 \\u0434\\u043B\\u044F \\u043F\\u0440\\u043E\\u0441\\u043C\\u043E\\u0442\\u0440\\u0430 \\u0441\\u0442\\u0430\\u0442\\u0438\\u0441\\u0442\\u0438\\u043A\\u0438\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"survey-statistics\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: selectedSurvey.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"statistics-tabs\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: `tab-button ${!responseDetails ? \"active\" : \"\"}`,\n              onClick: () => setResponseDetails(null),\n              children: \"\\u041E\\u0431\\u0449\\u0430\\u044F \\u0441\\u0442\\u0430\\u0442\\u0438\\u0441\\u0442\\u0438\\u043A\\u0430\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: `tab-button ${responseDetails ? \"active\" : \"\"}`,\n              disabled: !responses.length,\n              onClick: () => responses.length && setResponseDetails(responses[0]),\n              children: [\"\\u041E\\u0442\\u0432\\u0435\\u0442\\u044B \\u043A\\u043B\\u0438\\u0435\\u043D\\u0442\\u043E\\u0432 (\", responses.length, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 17\n          }, this), !responseDetails ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"general-statistics\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stats-summary\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stat-card\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"stat-value\",\n                  children: responses.length\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 290,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"stat-label\",\n                  children: \"\\u0412\\u0441\\u0435\\u0433\\u043E \\u043E\\u0442\\u0432\\u0435\\u0442\\u043E\\u0432\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 291,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stat-card\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"stat-value\",\n                  children: formatDate(selectedSurvey.startDate) || \"Не указано\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 294,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"stat-label\",\n                  children: \"\\u0414\\u0430\\u0442\\u0430 \\u043D\\u0430\\u0447\\u0430\\u043B\\u0430\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 297,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stat-card\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"stat-value\",\n                  children: formatDate(selectedSurvey.endDate) || \"Не указано\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 300,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"stat-label\",\n                  children: \"\\u0414\\u0430\\u0442\\u0430 \\u043E\\u043A\\u043E\\u043D\\u0447\\u0430\\u043D\\u0438\\u044F\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 303,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"questions-statistics\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"\\u0421\\u0442\\u0430\\u0442\\u0438\\u0441\\u0442\\u0438\\u043A\\u0430 \\u043F\\u043E \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\\u0430\\u043C\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 308,\n                columnNumber: 23\n              }, this), selectedSurvey.questions && selectedSurvey.questions.map(question => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"question-stat-card\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"question-text\",\n                  children: [question.orderNumber, \". \", question.text, question.required && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"required-mark\",\n                    children: \"*\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 315,\n                    columnNumber: 33\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 312,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"question-type\",\n                  children: [question.type === \"SINGLE_CHOICE\" && \"Одиночный выбор\", question.type === \"MULTIPLE_CHOICE\" && \"Множественный выбор\", question.type === \"TEXT\" && \"Текстовый ответ\", question.type === \"RATING\" && \"Оценка\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 318,\n                  columnNumber: 29\n                }, this), responses.length > 0 ? renderQuestionStats(question.id) : /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"no-data\",\n                  children: \"\\u041D\\u0435\\u0442 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445 \\u0434\\u043B\\u044F \\u0430\\u043D\\u0430\\u043B\\u0438\\u0437\\u0430\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 330,\n                  columnNumber: 31\n                }, this)]\n              }, question.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 311,\n                columnNumber: 27\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"response-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"response-nav\",\n              children: [/*#__PURE__*/_jsxDEV(\"select\", {\n                className: \"response-selector\",\n                value: responseDetails.id,\n                onChange: e => {\n                  const selected = responses.find(r => r.id === Number(e.target.value));\n                  if (selected) setResponseDetails(selected);\n                },\n                children: responses.map((response, index) => {\n                  var _response$respondent;\n                  return /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: response.id,\n                    children: [\"\\u041E\\u0442\\u0432\\u0435\\u0442 \", index + 1, \" -\", \" \", ((_response$respondent = response.respondent) === null || _response$respondent === void 0 ? void 0 : _response$respondent.name) || \"Аноним\", \" (\", formatDate(response.createdAt), \")\"]\n                  }, response.id, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 352,\n                    columnNumber: 27\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 341,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"response-navigation\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"nav-button\",\n                  disabled: responses.indexOf(responseDetails) === 0,\n                  onClick: () => {\n                    const currentIndex = responses.indexOf(responseDetails);\n                    if (currentIndex > 0) {\n                      setResponseDetails(responses[currentIndex - 1]);\n                    }\n                  },\n                  children: \"\\u2190 \\u041F\\u0440\\u0435\\u0434\\u044B\\u0434\\u0443\\u0449\\u0438\\u0439\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 361,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"nav-button\",\n                  disabled: responses.indexOf(responseDetails) === responses.length - 1,\n                  onClick: () => {\n                    const currentIndex = responses.indexOf(responseDetails);\n                    if (currentIndex < responses.length - 1) {\n                      setResponseDetails(responses[currentIndex + 1]);\n                    }\n                  },\n                  children: \"\\u0421\\u043B\\u0435\\u0434\\u0443\\u044E\\u0449\\u0438\\u0439 \\u2192\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 374,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 360,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"respondent-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"\\u0418\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u044F \\u043E \\u0440\\u0435\\u0441\\u043F\\u043E\\u043D\\u0434\\u0435\\u043D\\u0442\\u0435\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 394,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"info-row\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"info-label\",\n                  children: \"\\u0418\\u043C\\u044F:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 396,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"info-value\",\n                  children: ((_responseDetails$resp = responseDetails.respondent) === null || _responseDetails$resp === void 0 ? void 0 : _responseDetails$resp.name) || \"Не указано\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 397,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 395,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"info-row\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"info-label\",\n                  children: \"Email:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 402,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"info-value\",\n                  children: ((_responseDetails$resp2 = responseDetails.respondent) === null || _responseDetails$resp2 === void 0 ? void 0 : _responseDetails$resp2.email) || \"Не указано\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 403,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 401,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"info-row\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"info-label\",\n                  children: \"\\u0414\\u0430\\u0442\\u0430 \\u043E\\u0442\\u0432\\u0435\\u0442\\u0430:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 408,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"info-value\",\n                  children: formatDate(responseDetails.createdAt)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 409,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 407,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 393,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"response-answers\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"\\u041E\\u0442\\u0432\\u0435\\u0442\\u044B \\u043D\\u0430 \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\\u044B\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 416,\n                columnNumber: 23\n              }, this), responseDetails.answers && responseDetails.answers.map(answer => {\n                const question = selectedSurvey.questions.find(q => q.id === answer.questionId);\n                if (!question) return null;\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"answer-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"question-text\",\n                    children: [question.orderNumber, \". \", question.text, question.required && /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"required-mark\",\n                      children: \"*\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 432,\n                      columnNumber: 35\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 429,\n                    columnNumber: 31\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"answer-content\",\n                    children: [question.type === \"TEXT\" && /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"text-answer\",\n                      children: answer.answer || \"Нет ответа\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 437,\n                      columnNumber: 35\n                    }, this), question.type === \"SINGLE_CHOICE\" && /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"choice-answer\",\n                      children: answer.answer\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 443,\n                      columnNumber: 35\n                    }, this), question.type === \"MULTIPLE_CHOICE\" && /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"multiple-choice-answer\",\n                      children: Array.isArray(answer.answer) && answer.answer.map((option, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"choice-item\",\n                        children: option\n                      }, i, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 452,\n                        columnNumber: 41\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 449,\n                      columnNumber: 35\n                    }, this), question.type === \"RATING\" && /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"rating-answer\",\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"rating-value\",\n                        children: [answer.answer, \" / 10\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 461,\n                        columnNumber: 37\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"rating-stars\",\n                        children: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map(star => /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: `star ${parseInt(answer.answer) >= star ? \"filled\" : \"\"}`,\n                          children: \"\\u2605\"\n                        }, star, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 467,\n                          columnNumber: 43\n                        }, this))\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 464,\n                        columnNumber: 37\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 460,\n                      columnNumber: 35\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 435,\n                    columnNumber: 31\n                  }, this)]\n                }, answer.questionId, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 425,\n                  columnNumber: 29\n                }, this);\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 415,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 216,\n    columnNumber: 5\n  }, this);\n};\n_s(StatisticsPage, \"GqrWPwuIRlV+/Qt4513l78X7OVI=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = StatisticsPage;\nexport default StatisticsPage;\nvar _c;\n$RefreshReg$(_c, \"StatisticsPage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useLocation","surveyService","authService","jsxDEV","_jsxDEV","StatisticsPage","_s","_responseDetails$resp","_responseDetails$resp2","navigate","location","surveys","setSurveys","selectedSurvey","setSelectedSurvey","responses","setResponses","loading","setLoading","error","setError","responseDetails","setResponseDetails","user","getCurrentUser","fetchSurveys","params","URLSearchParams","search","surveyId","get","length","survey","find","s","id","parseInt","handleSurveySelect","response","getAllSurveys","surveysData","content","Array","isArray","console","fetchResponses","getSurveyResponses","handleResponseSelect","formatDate","dateString","date","Date","toLocaleDateString","day","month","year","hour","minute","renderQuestionStats","questionId","question","questions","q","answersForQuestion","filter","r","answers","flatMap","a","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","answerCounts","forEach","answer","option","Object","entries","map","count","percentage","Math","round","style","width","index","ratings","averageRating","reduce","sum","rating","toFixed","height","onClick","title","status","toLowerCase","responsesCount","disabled","startDate","endDate","orderNumber","text","required","value","onChange","e","selected","Number","target","_response$respondent","respondent","name","createdAt","indexOf","currentIndex","email","i","star","_c","$RefreshReg$"],"sources":["/Users/shirokiy/Desktop/Repositories/Дипломы/ClientExp/client_exp-frontend/src/pages/Dashboard/StatisticsPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport { useNavigate, useLocation } from \"react-router-dom\"\nimport { surveyService } from \"../../api/survey\"\nimport { authService } from \"../../api/auth\"\nimport \"./DashboardStyles.css\"\n\nconst StatisticsPage = () => {\n  const navigate = useNavigate()\n  const location = useLocation()\n  const [surveys, setSurveys] = useState([])\n  const [selectedSurvey, setSelectedSurvey] = useState(null)\n  const [responses, setResponses] = useState([])\n  const [loading, setLoading] = useState(false)\n  const [error, setError] = useState(\"\")\n  const [responseDetails, setResponseDetails] = useState(null)\n\n  useEffect(() => {\n    const user = authService.getCurrentUser()\n    if (!user) {\n      navigate(\"/login\")\n      return\n    }\n\n    fetchSurveys()\n  }, [navigate])\n\n  useEffect(() => {\n    // Проверяем наличие параметра survey в URL\n    const params = new URLSearchParams(location.search)\n    const surveyId = params.get(\"survey\")\n\n    if (surveyId && surveys.length > 0) {\n      const survey = surveys.find(s => s.id === parseInt(surveyId))\n      if (survey) {\n        handleSurveySelect(survey)\n      }\n    }\n  }, [surveys, location.search])\n\n  const fetchSurveys = async () => {\n    try {\n      setLoading(true)\n      const response = await surveyService.getAllSurveys()\n\n      let surveysData = []\n      if (response && response.content && Array.isArray(response.content)) {\n        surveysData = response.content\n      } else if (Array.isArray(response)) {\n        surveysData = response\n      }\n\n      setSurveys(surveysData)\n      setLoading(false)\n    } catch (error) {\n      console.error(\"Ошибка при получении опросников:\", error)\n      setError(\"Не удалось загрузить опросники. Пожалуйста, попробуйте позже.\")\n      setLoading(false)\n    }\n  }\n\n  const fetchResponses = async surveyId => {\n    try {\n      setLoading(true)\n      setError(\"\")\n      // Предполагаем, что в API есть метод для получения ответов по ID опросника\n      const response = await surveyService.getSurveyResponses(surveyId)\n      setResponses(response || [])\n      setLoading(false)\n    } catch (error) {\n      console.error(\"Ошибка при получении ответов:\", error)\n      setError(\"Не удалось загрузить ответы. Пожалуйста, попробуйте позже.\")\n      setResponses([])\n      setLoading(false)\n    }\n  }\n\n  const handleSurveySelect = survey => {\n    setSelectedSurvey(survey)\n    setResponseDetails(null)\n    fetchResponses(survey.id)\n  }\n\n  const handleResponseSelect = response => {\n    setResponseDetails(response)\n  }\n\n  const formatDate = dateString => {\n    if (!dateString) return \"—\"\n    const date = new Date(dateString)\n    return date.toLocaleDateString(\"ru-RU\", {\n      day: \"2-digit\",\n      month: \"2-digit\",\n      year: \"numeric\",\n      hour: \"2-digit\",\n      minute: \"2-digit\",\n    })\n  }\n\n  // Заглушка для отображения статистики по вопросу\n  const renderQuestionStats = questionId => {\n    if (!selectedSurvey || !responses.length) return null\n\n    const question = selectedSurvey.questions.find(q => q.id === questionId)\n    if (!question) return null\n\n    // Собираем ответы на этот вопрос\n    const answersForQuestion = responses\n      .filter(r => r.answers)\n      .flatMap(r => r.answers)\n      .filter(a => a.questionId === questionId)\n\n    if (!answersForQuestion.length) {\n      return <div className=\"no-data\">Нет данных для анализа</div>\n    }\n\n    // Для вопросов с вариантами ответа показываем статистику\n    if (\n      question.type === \"SINGLE_CHOICE\" ||\n      question.type === \"MULTIPLE_CHOICE\"\n    ) {\n      // Считаем количество каждого варианта ответа\n      const answerCounts = {}\n\n      answersForQuestion.forEach(answer => {\n        if (Array.isArray(answer.answer)) {\n          // Для multiple choice\n          answer.answer.forEach(option => {\n            answerCounts[option] = (answerCounts[option] || 0) + 1\n          })\n        } else {\n          // Для single choice\n          answerCounts[answer.answer] = (answerCounts[answer.answer] || 0) + 1\n        }\n      })\n\n      return (\n        <div className=\"question-stats\">\n          <h4>Статистика ответов:</h4>\n          <div className=\"stats-bars\">\n            {Object.entries(answerCounts).map(([option, count]) => {\n              const percentage = Math.round(\n                (count / answersForQuestion.length) * 100\n              )\n              return (\n                <div key={option} className=\"stat-item\">\n                  <div className=\"stat-label\">{option}</div>\n                  <div className=\"stat-bar-container\">\n                    <div\n                      className=\"stat-bar\"\n                      style={{ width: `${percentage}%` }}\n                    ></div>\n                    <span className=\"stat-value\">\n                      {percentage}% ({count})\n                    </span>\n                  </div>\n                </div>\n              )\n            })}\n          </div>\n        </div>\n      )\n    }\n\n    // Для текстовых вопросов показываем список ответов\n    if (question.type === \"TEXT\") {\n      return (\n        <div className=\"text-answers\">\n          <h4>Текстовые ответы:</h4>\n          <ul className=\"text-answers-list\">\n            {answersForQuestion.map((answer, index) => (\n              <li key={index} className=\"text-answer-item\">\n                {answer.answer || \"Нет ответа\"}\n              </li>\n            ))}\n          </ul>\n        </div>\n      )\n    }\n\n    // Для рейтинговых вопросов показываем средний рейтинг\n    if (question.type === \"RATING\") {\n      const ratings = answersForQuestion.map(a => parseInt(a.answer) || 0)\n      const averageRating =\n        ratings.reduce((sum, rating) => sum + rating, 0) / ratings.length\n\n      return (\n        <div className=\"rating-stats\">\n          <h4>Средний рейтинг: {averageRating.toFixed(1)} из 10</h4>\n          <div className=\"rating-distribution\">\n            {[1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map(rating => {\n              const count = ratings.filter(r => r === rating).length\n              const percentage = Math.round((count / ratings.length) * 100)\n\n              return (\n                <div key={rating} className=\"rating-bar-container\">\n                  <div className=\"rating-label\">{rating}</div>\n                  <div className=\"rating-bar-wrapper\">\n                    <div\n                      className=\"rating-bar\"\n                      style={{ height: `${percentage}%` }}\n                    ></div>\n                  </div>\n                  <div className=\"rating-count\">{count}</div>\n                </div>\n              )\n            })}\n          </div>\n        </div>\n      )\n    }\n\n    return null\n  }\n\n  return (\n    <div className=\"statistics-page\">\n      <h2 className=\"page-title\">Статистика опросов</h2>\n\n      {error && <div className=\"error-message\">{error}</div>}\n\n      {loading ? (\n        <div className=\"loading-indicator\">Загрузка данных...</div>\n      ) : (\n        <div className=\"statistics-container\">\n          <div className=\"surveys-list-sidebar\">\n            <h3>Опросники</h3>\n            {surveys.length === 0 ? (\n              <div className=\"empty-state\">У вас пока нет опросников</div>\n            ) : (\n              <ul className=\"surveys-list\">\n                {surveys.map(survey => (\n                  <li\n                    key={survey.id}\n                    className={`survey-item ${\n                      selectedSurvey?.id === survey.id ? \"active\" : \"\"\n                    }`}\n                    onClick={() => handleSurveySelect(survey)}\n                  >\n                    <div className=\"survey-title\">{survey.title}</div>\n                    <div className=\"survey-meta\">\n                      <span\n                        className={`survey-status status-${survey.status.toLowerCase()}`}\n                      >\n                        {survey.status === \"ACTIVE\"\n                          ? \"Активный\"\n                          : survey.status === \"COMPLETED\"\n                          ? \"Завершен\"\n                          : \"Черновик\"}\n                      </span>\n                      <span className=\"survey-responses-count\">\n                        Ответов: {survey.responsesCount || 0}\n                      </span>\n                    </div>\n                  </li>\n                ))}\n              </ul>\n            )}\n          </div>\n\n          <div className=\"statistics-content\">\n            {!selectedSurvey ? (\n              <div className=\"select-survey-prompt\">\n                Выберите опросник из списка слева для просмотра статистики\n              </div>\n            ) : (\n              <div className=\"survey-statistics\">\n                <h3>{selectedSurvey.title}</h3>\n                <div className=\"statistics-tabs\">\n                  <button\n                    className={`tab-button ${!responseDetails ? \"active\" : \"\"}`}\n                    onClick={() => setResponseDetails(null)}\n                  >\n                    Общая статистика\n                  </button>\n                  <button\n                    className={`tab-button ${responseDetails ? \"active\" : \"\"}`}\n                    disabled={!responses.length}\n                    onClick={() =>\n                      responses.length && setResponseDetails(responses[0])\n                    }\n                  >\n                    Ответы клиентов ({responses.length})\n                  </button>\n                </div>\n\n                {!responseDetails ? (\n                  <div className=\"general-statistics\">\n                    <div className=\"stats-summary\">\n                      <div className=\"stat-card\">\n                        <div className=\"stat-value\">{responses.length}</div>\n                        <div className=\"stat-label\">Всего ответов</div>\n                      </div>\n                      <div className=\"stat-card\">\n                        <div className=\"stat-value\">\n                          {formatDate(selectedSurvey.startDate) || \"Не указано\"}\n                        </div>\n                        <div className=\"stat-label\">Дата начала</div>\n                      </div>\n                      <div className=\"stat-card\">\n                        <div className=\"stat-value\">\n                          {formatDate(selectedSurvey.endDate) || \"Не указано\"}\n                        </div>\n                        <div className=\"stat-label\">Дата окончания</div>\n                      </div>\n                    </div>\n\n                    <div className=\"questions-statistics\">\n                      <h4>Статистика по вопросам</h4>\n                      {selectedSurvey.questions &&\n                        selectedSurvey.questions.map(question => (\n                          <div key={question.id} className=\"question-stat-card\">\n                            <div className=\"question-text\">\n                              {question.orderNumber}. {question.text}\n                              {question.required && (\n                                <span className=\"required-mark\">*</span>\n                              )}\n                            </div>\n                            <div className=\"question-type\">\n                              {question.type === \"SINGLE_CHOICE\" &&\n                                \"Одиночный выбор\"}\n                              {question.type === \"MULTIPLE_CHOICE\" &&\n                                \"Множественный выбор\"}\n                              {question.type === \"TEXT\" && \"Текстовый ответ\"}\n                              {question.type === \"RATING\" && \"Оценка\"}\n                            </div>\n\n                            {responses.length > 0 ? (\n                              renderQuestionStats(question.id)\n                            ) : (\n                              <div className=\"no-data\">\n                                Нет данных для анализа\n                              </div>\n                            )}\n                          </div>\n                        ))}\n                    </div>\n                  </div>\n                ) : (\n                  <div className=\"response-details\">\n                    <div className=\"response-nav\">\n                      <select\n                        className=\"response-selector\"\n                        value={responseDetails.id}\n                        onChange={e => {\n                          const selected = responses.find(\n                            r => r.id === Number(e.target.value)\n                          )\n                          if (selected) setResponseDetails(selected)\n                        }}\n                      >\n                        {responses.map((response, index) => (\n                          <option key={response.id} value={response.id}>\n                            Ответ {index + 1} -{\" \"}\n                            {response.respondent?.name || \"Аноним\"} (\n                            {formatDate(response.createdAt)})\n                          </option>\n                        ))}\n                      </select>\n\n                      <div className=\"response-navigation\">\n                        <button\n                          className=\"nav-button\"\n                          disabled={responses.indexOf(responseDetails) === 0}\n                          onClick={() => {\n                            const currentIndex =\n                              responses.indexOf(responseDetails)\n                            if (currentIndex > 0) {\n                              setResponseDetails(responses[currentIndex - 1])\n                            }\n                          }}\n                        >\n                          &larr; Предыдущий\n                        </button>\n                        <button\n                          className=\"nav-button\"\n                          disabled={\n                            responses.indexOf(responseDetails) ===\n                            responses.length - 1\n                          }\n                          onClick={() => {\n                            const currentIndex =\n                              responses.indexOf(responseDetails)\n                            if (currentIndex < responses.length - 1) {\n                              setResponseDetails(responses[currentIndex + 1])\n                            }\n                          }}\n                        >\n                          Следующий &rarr;\n                        </button>\n                      </div>\n                    </div>\n\n                    <div className=\"respondent-info\">\n                      <h4>Информация о респонденте</h4>\n                      <div className=\"info-row\">\n                        <span className=\"info-label\">Имя:</span>\n                        <span className=\"info-value\">\n                          {responseDetails.respondent?.name || \"Не указано\"}\n                        </span>\n                      </div>\n                      <div className=\"info-row\">\n                        <span className=\"info-label\">Email:</span>\n                        <span className=\"info-value\">\n                          {responseDetails.respondent?.email || \"Не указано\"}\n                        </span>\n                      </div>\n                      <div className=\"info-row\">\n                        <span className=\"info-label\">Дата ответа:</span>\n                        <span className=\"info-value\">\n                          {formatDate(responseDetails.createdAt)}\n                        </span>\n                      </div>\n                    </div>\n\n                    <div className=\"response-answers\">\n                      <h4>Ответы на вопросы</h4>\n                      {responseDetails.answers &&\n                        responseDetails.answers.map(answer => {\n                          const question = selectedSurvey.questions.find(\n                            q => q.id === answer.questionId\n                          )\n                          if (!question) return null\n\n                          return (\n                            <div\n                              key={answer.questionId}\n                              className=\"answer-item\"\n                            >\n                              <div className=\"question-text\">\n                                {question.orderNumber}. {question.text}\n                                {question.required && (\n                                  <span className=\"required-mark\">*</span>\n                                )}\n                              </div>\n                              <div className=\"answer-content\">\n                                {question.type === \"TEXT\" && (\n                                  <div className=\"text-answer\">\n                                    {answer.answer || \"Нет ответа\"}\n                                  </div>\n                                )}\n\n                                {question.type === \"SINGLE_CHOICE\" && (\n                                  <div className=\"choice-answer\">\n                                    {answer.answer}\n                                  </div>\n                                )}\n\n                                {question.type === \"MULTIPLE_CHOICE\" && (\n                                  <div className=\"multiple-choice-answer\">\n                                    {Array.isArray(answer.answer) &&\n                                      answer.answer.map((option, i) => (\n                                        <div key={i} className=\"choice-item\">\n                                          {option}\n                                        </div>\n                                      ))}\n                                  </div>\n                                )}\n\n                                {question.type === \"RATING\" && (\n                                  <div className=\"rating-answer\">\n                                    <div className=\"rating-value\">\n                                      {answer.answer} / 10\n                                    </div>\n                                    <div className=\"rating-stars\">\n                                      {[1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map(\n                                        star => (\n                                          <span\n                                            key={star}\n                                            className={`star ${\n                                              parseInt(answer.answer) >= star\n                                                ? \"filled\"\n                                                : \"\"\n                                            }`}\n                                          >\n                                            ★\n                                          </span>\n                                        )\n                                      )}\n                                    </div>\n                                  </div>\n                                )}\n                              </div>\n                            </div>\n                          )\n                        })}\n                    </div>\n                  </div>\n                )}\n              </div>\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default StatisticsPage\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}