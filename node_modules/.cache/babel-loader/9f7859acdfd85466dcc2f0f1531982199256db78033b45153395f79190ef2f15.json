{"ast":null,"code":"var _jsxFileName = \"/Users/shirokiy/Desktop/Repositories/\\u0414\\u0438\\u043F\\u043B\\u043E\\u043C\\u044B/ClientExp/client_exp-frontend/src/pages/Dashboard/StatisticsPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport { surveyService } from \"../../api/survey\";\nimport { authService } from \"../../api/auth\";\nimport Sidebar from \"../../components/common/Sidebar\";\nimport \"./DashboardStyles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StatisticsPage = () => {\n  _s();\n  var _responseDetails$resp, _responseDetails$resp2;\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [surveys, setSurveys] = useState([]);\n  const [selectedSurvey, setSelectedSurvey] = useState(null);\n  const [responses, setResponses] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [responseDetails, setResponseDetails] = useState(null);\n  const [user, setUser] = useState(null);\n  useEffect(() => {\n    const currentUser = authService.getCurrentUser();\n    if (currentUser) {\n      setUser(currentUser);\n      fetchSurveys();\n    } else {\n      navigate(\"/login\");\n      return;\n    }\n  }, [navigate]);\n  useEffect(() => {\n    // Проверяем наличие параметра survey в URL\n    const params = new URLSearchParams(location.search);\n    const surveyId = params.get(\"survey\");\n    if (surveyId && surveys.length > 0) {\n      const survey = surveys.find(s => s.id === parseInt(surveyId));\n      if (survey) {\n        handleSurveySelect(survey);\n      }\n    }\n  }, [surveys, location.search]);\n  const fetchSurveys = async () => {\n    try {\n      setLoading(true);\n      const response = await surveyService.getAllSurveys();\n      let surveysData = [];\n      if (response && response.content && Array.isArray(response.content)) {\n        surveysData = response.content;\n      } else if (Array.isArray(response)) {\n        surveysData = response;\n      }\n      setSurveys(surveysData);\n      setLoading(false);\n    } catch (error) {\n      console.error(\"Ошибка при получении опросников:\", error);\n      setError(\"Не удалось загрузить опросники. Пожалуйста, попробуйте позже.\");\n      setLoading(false);\n    }\n  };\n  const fetchResponses = async surveyId => {\n    try {\n      setLoading(true);\n      setError(\"\");\n      // Предполагаем, что в API есть метод для получения ответов по ID опросника\n      const response = await surveyService.getSurveyResponses(surveyId);\n      // Убедимся, что responses всегда массив\n      setResponses(Array.isArray(response) ? response : []);\n      console.log(\"Ответы:\", response);\n      setLoading(false);\n    } catch (error) {\n      console.error(\"Ошибка при получении ответов:\", error);\n      setError(\"Не удалось загрузить ответы. Пожалуйста, попробуйте позже.\");\n      setResponses([]);\n      setLoading(false);\n    }\n  };\n  const handleSurveySelect = survey => {\n    setSelectedSurvey(survey);\n    setResponseDetails(null);\n    fetchResponses(survey.id);\n  };\n  const handleResponseSelect = response => {\n    setResponseDetails(response);\n  };\n  const formatDate = dateString => {\n    if (!dateString) return \"—\";\n    const date = new Date(dateString);\n    return date.toLocaleDateString(\"ru-RU\", {\n      day: \"2-digit\",\n      month: \"2-digit\",\n      year: \"numeric\",\n      hour: \"2-digit\",\n      minute: \"2-digit\"\n    });\n  };\n\n  // Заглушка для отображения статистики по вопросу\n  const renderQuestionStats = questionId => {\n    if (!selectedSurvey || !responses || !Array.isArray(responses) || !responses.length) return null;\n    const question = selectedSurvey.questions.find(q => q.id === questionId);\n    if (!question) return null;\n\n    // Собираем ответы на этот вопрос\n    const answersForQuestion = Array.isArray(responses) ? responses.filter(r => r && r.answers).flatMap(r => r.answers).filter(a => a && a.questionId === questionId) : [];\n    if (!answersForQuestion.length) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-data\",\n        children: \"\\u041D\\u0435\\u0442 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445 \\u0434\\u043B\\u044F \\u0430\\u043D\\u0430\\u043B\\u0438\\u0437\\u0430\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 14\n      }, this);\n    }\n\n    // Для вопросов с вариантами ответа показываем статистику\n    if (question.type === \"SINGLE_CHOICE\" || question.type === \"MULTIPLE_CHOICE\") {\n      // Считаем количество каждого варианта ответа\n      const answerCounts = {};\n      answersForQuestion.forEach(answer => {\n        if (Array.isArray(answer.answer)) {\n          // Для multiple choice\n          answer.answer.forEach(option => {\n            answerCounts[option] = (answerCounts[option] || 0) + 1;\n          });\n        } else {\n          // Для single choice\n          answerCounts[answer.answer] = (answerCounts[answer.answer] || 0) + 1;\n        }\n      });\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-stats\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"\\u0421\\u0442\\u0430\\u0442\\u0438\\u0441\\u0442\\u0438\\u043A\\u0430 \\u043E\\u0442\\u0432\\u0435\\u0442\\u043E\\u0432:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stats-bars\",\n          children: Object.entries(answerCounts).map(([option, count]) => {\n            const percentage = Math.round(count / answersForQuestion.length * 100);\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stat-label\",\n                children: option\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stat-bar-container\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"stat-bar\",\n                  style: {\n                    width: `${percentage}%`\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"stat-value\",\n                  children: [percentage, \"% (\", count, \")\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 165,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 19\n              }, this)]\n            }, option, true, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this);\n    }\n\n    // Для текстовых вопросов показываем список ответов\n    if (question.type === \"TEXT\") {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-answers\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"\\u0422\\u0435\\u043A\\u0441\\u0442\\u043E\\u0432\\u044B\\u0435 \\u043E\\u0442\\u0432\\u0435\\u0442\\u044B:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"text-answers-list\",\n          children: answersForQuestion.map((answer, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"text-answer-item\",\n            children: answer.answer || \"Нет ответа\"\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this);\n    }\n\n    // Для рейтинговых вопросов показываем средний рейтинг\n    if (question.type === \"RATING\") {\n      const ratings = answersForQuestion.map(a => parseInt(a.answer) || 0);\n      const averageRating = ratings.reduce((sum, rating) => sum + rating, 0) / ratings.length;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rating-stats\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"\\u0421\\u0440\\u0435\\u0434\\u043D\\u0438\\u0439 \\u0440\\u0435\\u0439\\u0442\\u0438\\u043D\\u0433: \", averageRating.toFixed(1), \" \\u0438\\u0437 10\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rating-distribution\",\n          children: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map(rating => {\n            const count = ratings.filter(r => r === rating).length;\n            const percentage = Math.round(count / ratings.length * 100);\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"rating-bar-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"rating-label\",\n                children: rating\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"rating-bar-wrapper\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"rating-bar\",\n                  style: {\n                    height: `${percentage}%`\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 211,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"rating-count\",\n                children: count\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 19\n              }, this)]\n            }, rating, true, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this);\n    }\n    return null;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      user: user\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"statistics-page\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"page-title\",\n        children: \"\\u0421\\u0442\\u0430\\u0442\\u0438\\u0441\\u0442\\u0438\\u043A\\u0430 \\u043E\\u043F\\u0440\\u043E\\u0441\\u043E\\u0432\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 19\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-indicator\",\n        children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"statistics-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"surveys-list-sidebar\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"\\u041E\\u043F\\u0440\\u043E\\u0441\\u043D\\u0438\\u043A\\u0438\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 15\n          }, this), surveys.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"empty-state\",\n            children: \"\\u0423 \\u0432\\u0430\\u0441 \\u043F\\u043E\\u043A\\u0430 \\u043D\\u0435\\u0442 \\u043E\\u043F\\u0440\\u043E\\u0441\\u043D\\u0438\\u043A\\u043E\\u0432\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"surveys-list\",\n            children: surveys.map(survey => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: `survey-item ${(selectedSurvey === null || selectedSurvey === void 0 ? void 0 : selectedSurvey.id) === survey.id ? \"active\" : \"\"}`,\n              onClick: () => handleSurveySelect(survey),\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"survey-title\",\n                children: survey.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"survey-meta\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `survey-status status-${survey.status.toLowerCase()}`,\n                  children: survey.status === \"ACTIVE\" ? \"Активный\" : survey.status === \"COMPLETED\" ? \"Завершен\" : \"Черновик\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 256,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"survey-responses-count\",\n                  children: [\"\\u041E\\u0442\\u0432\\u0435\\u0442\\u043E\\u0432: \", survey.responsesCount || 0]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 265,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 23\n              }, this)]\n            }, survey.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"statistics-content\",\n          children: !selectedSurvey ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"select-survey-prompt\",\n            children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u043E\\u043F\\u0440\\u043E\\u0441\\u043D\\u0438\\u043A \\u0438\\u0437 \\u0441\\u043F\\u0438\\u0441\\u043A\\u0430 \\u0441\\u043B\\u0435\\u0432\\u0430 \\u0434\\u043B\\u044F \\u043F\\u0440\\u043E\\u0441\\u043C\\u043E\\u0442\\u0440\\u0430 \\u0441\\u0442\\u0430\\u0442\\u0438\\u0441\\u0442\\u0438\\u043A\\u0438\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"survey-statistics\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: selectedSurvey.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"statistics-tabs\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: `tab-button ${!responseDetails ? \"active\" : \"\"}`,\n                onClick: () => setResponseDetails(null),\n                children: \"\\u041E\\u0431\\u0449\\u0430\\u044F \\u0441\\u0442\\u0430\\u0442\\u0438\\u0441\\u0442\\u0438\\u043A\\u0430\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: `tab-button ${responseDetails ? \"active\" : \"\"}`,\n                disabled: !responses.length,\n                onClick: () => responses.length && setResponseDetails(responses[0]),\n                children: [\"\\u041E\\u0442\\u0432\\u0435\\u0442\\u044B \\u043A\\u043B\\u0438\\u0435\\u043D\\u0442\\u043E\\u0432 (\", responses.length, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 292,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 19\n            }, this), !responseDetails ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"general-statistics\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stats-summary\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"stat-card\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"stat-value\",\n                    children: responses.length\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 309,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"stat-label\",\n                    children: \"\\u0412\\u0441\\u0435\\u0433\\u043E \\u043E\\u0442\\u0432\\u0435\\u0442\\u043E\\u0432\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 310,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 308,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"stat-card\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"stat-value\",\n                    children: formatDate(selectedSurvey.startDate) || \"Не указано\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 313,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"stat-label\",\n                    children: \"\\u0414\\u0430\\u0442\\u0430 \\u043D\\u0430\\u0447\\u0430\\u043B\\u0430\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 317,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 312,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"stat-card\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"stat-value\",\n                    children: formatDate(selectedSurvey.endDate) || \"Не указано\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 320,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"stat-label\",\n                    children: \"\\u0414\\u0430\\u0442\\u0430 \\u043E\\u043A\\u043E\\u043D\\u0447\\u0430\\u043D\\u0438\\u044F\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 323,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 319,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 307,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"questions-statistics\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: \"\\u0421\\u0442\\u0430\\u0442\\u0438\\u0441\\u0442\\u0438\\u043A\\u0430 \\u043F\\u043E \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\\u0430\\u043C\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 328,\n                  columnNumber: 25\n                }, this), selectedSurvey.questions && selectedSurvey.questions.map(question => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"question-stat-card\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"question-text\",\n                    children: [question.orderNumber, \". \", question.text, question.required && /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"required-mark\",\n                      children: \"*\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 338,\n                      columnNumber: 35\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 335,\n                    columnNumber: 31\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"question-type\",\n                    children: [question.type === \"SINGLE_CHOICE\" && \"Одиночный выбор\", question.type === \"MULTIPLE_CHOICE\" && \"Множественный выбор\", question.type === \"TEXT\" && \"Текстовый ответ\", question.type === \"RATING\" && \"Оценка\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 341,\n                    columnNumber: 31\n                  }, this), Array.isArray(responses) && responses.length > 0 ? renderQuestionStats(question.id) : /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"no-data\",\n                    children: \"\\u041D\\u0435\\u0442 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445 \\u0434\\u043B\\u044F \\u0430\\u043D\\u0430\\u043B\\u0438\\u0437\\u0430\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 354,\n                    columnNumber: 33\n                  }, this)]\n                }, question.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 331,\n                  columnNumber: 29\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 327,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"response-details\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"response-nav\",\n                children: [/*#__PURE__*/_jsxDEV(\"select\", {\n                  className: \"response-selector\",\n                  value: responseDetails.id,\n                  onChange: e => {\n                    const selected = responses.find(r => r.id === Number(e.target.value));\n                    if (selected) setResponseDetails(selected);\n                  },\n                  children: responses.map((response, index) => {\n                    var _response$respondent;\n                    return /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: response.id,\n                      children: [\"\\u041E\\u0442\\u0432\\u0435\\u0442 \", index + 1, \" -\", \" \", ((_response$respondent = response.respondent) === null || _response$respondent === void 0 ? void 0 : _response$respondent.name) || \"Аноним\", \" (\", formatDate(response.createdAt), \")\"]\n                    }, response.id, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 376,\n                      columnNumber: 29\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 365,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"response-navigation\",\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"nav-button\",\n                    disabled: responses.indexOf(responseDetails) === 0,\n                    onClick: () => {\n                      const currentIndex = responses.indexOf(responseDetails);\n                      if (currentIndex > 0) {\n                        setResponseDetails(responses[currentIndex - 1]);\n                      }\n                    },\n                    children: \"\\u2190 \\u041F\\u0440\\u0435\\u0434\\u044B\\u0434\\u0443\\u0449\\u0438\\u0439\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 385,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"nav-button\",\n                    disabled: responses.indexOf(responseDetails) === responses.length - 1,\n                    onClick: () => {\n                      const currentIndex = responses.indexOf(responseDetails);\n                      if (currentIndex < responses.length - 1) {\n                        setResponseDetails(responses[currentIndex + 1]);\n                      }\n                    },\n                    children: \"\\u0421\\u043B\\u0435\\u0434\\u0443\\u044E\\u0449\\u0438\\u0439 \\u2192\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 398,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 384,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 364,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"respondent-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: \"\\u0418\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u044F \\u043E \\u0440\\u0435\\u0441\\u043F\\u043E\\u043D\\u0434\\u0435\\u043D\\u0442\\u0435\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 418,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"info-row\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"info-label\",\n                    children: \"\\u0418\\u043C\\u044F:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 420,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"info-value\",\n                    children: ((_responseDetails$resp = responseDetails.respondent) === null || _responseDetails$resp === void 0 ? void 0 : _responseDetails$resp.name) || \"Не указано\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 421,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 419,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"info-row\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"info-label\",\n                    children: \"Email:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 426,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"info-value\",\n                    children: ((_responseDetails$resp2 = responseDetails.respondent) === null || _responseDetails$resp2 === void 0 ? void 0 : _responseDetails$resp2.email) || \"Не указано\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 427,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 425,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"info-row\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"info-label\",\n                    children: \"\\u0414\\u0430\\u0442\\u0430 \\u043E\\u0442\\u0432\\u0435\\u0442\\u0430:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 432,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"info-value\",\n                    children: formatDate(responseDetails.createdAt)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 433,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 431,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 417,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"response-answers\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: \"\\u041E\\u0442\\u0432\\u0435\\u0442\\u044B \\u043D\\u0430 \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\\u044B\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 440,\n                  columnNumber: 25\n                }, this), responseDetails.answers && responseDetails.answers.map(answer => {\n                  const question = selectedSurvey.questions.find(q => q.id === answer.questionId);\n                  if (!question) return null;\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"answer-item\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"question-text\",\n                      children: [question.orderNumber, \". \", question.text, question.required && /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"required-mark\",\n                        children: \"*\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 456,\n                        columnNumber: 37\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 453,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"answer-content\",\n                      children: [question.type === \"TEXT\" && /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"text-answer\",\n                        children: answer.answer || \"Нет ответа\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 461,\n                        columnNumber: 37\n                      }, this), question.type === \"SINGLE_CHOICE\" && /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"choice-answer\",\n                        children: answer.answer\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 467,\n                        columnNumber: 37\n                      }, this), question.type === \"MULTIPLE_CHOICE\" && /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"multiple-choice-answer\",\n                        children: Array.isArray(answer.answer) && answer.answer.map((option, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"choice-item\",\n                          children: option\n                        }, i, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 476,\n                          columnNumber: 43\n                        }, this))\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 473,\n                        columnNumber: 37\n                      }, this), question.type === \"RATING\" && /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"rating-answer\",\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"rating-value\",\n                          children: [answer.answer, \" / 10\"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 485,\n                          columnNumber: 39\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"rating-stars\",\n                          children: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map(star => /*#__PURE__*/_jsxDEV(\"span\", {\n                            className: `star ${parseInt(answer.answer) >= star ? \"filled\" : \"\"}`,\n                            children: \"\\u2605\"\n                          }, star, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 491,\n                            columnNumber: 45\n                          }, this))\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 488,\n                          columnNumber: 39\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 484,\n                        columnNumber: 37\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 459,\n                      columnNumber: 33\n                    }, this)]\n                  }, answer.questionId, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 449,\n                    columnNumber: 31\n                  }, this);\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 439,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 363,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 229,\n    columnNumber: 5\n  }, this);\n};\n_s(StatisticsPage, \"JhNDwZDR3XEI/AZUcpkjFGUIGVg=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = StatisticsPage;\nexport default StatisticsPage;\nvar _c;\n$RefreshReg$(_c, \"StatisticsPage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useLocation","surveyService","authService","Sidebar","jsxDEV","_jsxDEV","StatisticsPage","_s","_responseDetails$resp","_responseDetails$resp2","navigate","location","surveys","setSurveys","selectedSurvey","setSelectedSurvey","responses","setResponses","loading","setLoading","error","setError","responseDetails","setResponseDetails","user","setUser","currentUser","getCurrentUser","fetchSurveys","params","URLSearchParams","search","surveyId","get","length","survey","find","s","id","parseInt","handleSurveySelect","response","getAllSurveys","surveysData","content","Array","isArray","console","fetchResponses","getSurveyResponses","log","handleResponseSelect","formatDate","dateString","date","Date","toLocaleDateString","day","month","year","hour","minute","renderQuestionStats","questionId","question","questions","q","answersForQuestion","filter","r","answers","flatMap","a","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","answerCounts","forEach","answer","option","Object","entries","map","count","percentage","Math","round","style","width","index","ratings","averageRating","reduce","sum","rating","toFixed","height","onClick","title","status","toLowerCase","responsesCount","disabled","startDate","endDate","orderNumber","text","required","value","onChange","e","selected","Number","target","_response$respondent","respondent","name","createdAt","indexOf","currentIndex","email","i","star","_c","$RefreshReg$"],"sources":["/Users/shirokiy/Desktop/Repositories/Дипломы/ClientExp/client_exp-frontend/src/pages/Dashboard/StatisticsPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport { useNavigate, useLocation } from \"react-router-dom\"\nimport { surveyService } from \"../../api/survey\"\nimport { authService } from \"../../api/auth\"\nimport Sidebar from \"../../components/common/Sidebar\"\nimport \"./DashboardStyles.css\"\n\nconst StatisticsPage = () => {\n  const navigate = useNavigate()\n  const location = useLocation()\n  const [surveys, setSurveys] = useState([])\n  const [selectedSurvey, setSelectedSurvey] = useState(null)\n  const [responses, setResponses] = useState([])\n  const [loading, setLoading] = useState(false)\n  const [error, setError] = useState(\"\")\n  const [responseDetails, setResponseDetails] = useState(null)\n  const [user, setUser] = useState(null)\n\n  useEffect(() => {\n    const currentUser = authService.getCurrentUser()\n    if (currentUser) {\n      setUser(currentUser)\n      fetchSurveys()\n    } else {\n      navigate(\"/login\")\n      return\n    }\n  }, [navigate])\n\n  useEffect(() => {\n    // Проверяем наличие параметра survey в URL\n    const params = new URLSearchParams(location.search)\n    const surveyId = params.get(\"survey\")\n\n    if (surveyId && surveys.length > 0) {\n      const survey = surveys.find(s => s.id === parseInt(surveyId))\n      if (survey) {\n        handleSurveySelect(survey)\n      }\n    }\n  }, [surveys, location.search])\n\n  const fetchSurveys = async () => {\n    try {\n      setLoading(true)\n      const response = await surveyService.getAllSurveys()\n\n      let surveysData = []\n      if (response && response.content && Array.isArray(response.content)) {\n        surveysData = response.content\n      } else if (Array.isArray(response)) {\n        surveysData = response\n      }\n\n      setSurveys(surveysData)\n      setLoading(false)\n    } catch (error) {\n      console.error(\"Ошибка при получении опросников:\", error)\n      setError(\"Не удалось загрузить опросники. Пожалуйста, попробуйте позже.\")\n      setLoading(false)\n    }\n  }\n\n  const fetchResponses = async surveyId => {\n    try {\n      setLoading(true)\n      setError(\"\")\n      // Предполагаем, что в API есть метод для получения ответов по ID опросника\n      const response = await surveyService.getSurveyResponses(surveyId)\n      // Убедимся, что responses всегда массив\n      setResponses(Array.isArray(response) ? response : [])\n      console.log(\"Ответы:\", response)\n      setLoading(false)\n    } catch (error) {\n      console.error(\"Ошибка при получении ответов:\", error)\n      setError(\"Не удалось загрузить ответы. Пожалуйста, попробуйте позже.\")\n      setResponses([])\n      setLoading(false)\n    }\n  }\n\n  const handleSurveySelect = survey => {\n    setSelectedSurvey(survey)\n    setResponseDetails(null)\n    fetchResponses(survey.id)\n  }\n\n  const handleResponseSelect = response => {\n    setResponseDetails(response)\n  }\n\n  const formatDate = dateString => {\n    if (!dateString) return \"—\"\n    const date = new Date(dateString)\n    return date.toLocaleDateString(\"ru-RU\", {\n      day: \"2-digit\",\n      month: \"2-digit\",\n      year: \"numeric\",\n      hour: \"2-digit\",\n      minute: \"2-digit\",\n    })\n  }\n\n  // Заглушка для отображения статистики по вопросу\n  const renderQuestionStats = questionId => {\n    if (\n      !selectedSurvey ||\n      !responses ||\n      !Array.isArray(responses) ||\n      !responses.length\n    )\n      return null\n\n    const question = selectedSurvey.questions.find(q => q.id === questionId)\n    if (!question) return null\n\n    // Собираем ответы на этот вопрос\n    const answersForQuestion = Array.isArray(responses)\n      ? responses\n          .filter(r => r && r.answers)\n          .flatMap(r => r.answers)\n          .filter(a => a && a.questionId === questionId)\n      : []\n\n    if (!answersForQuestion.length) {\n      return <div className=\"no-data\">Нет данных для анализа</div>\n    }\n\n    // Для вопросов с вариантами ответа показываем статистику\n    if (\n      question.type === \"SINGLE_CHOICE\" ||\n      question.type === \"MULTIPLE_CHOICE\"\n    ) {\n      // Считаем количество каждого варианта ответа\n      const answerCounts = {}\n\n      answersForQuestion.forEach(answer => {\n        if (Array.isArray(answer.answer)) {\n          // Для multiple choice\n          answer.answer.forEach(option => {\n            answerCounts[option] = (answerCounts[option] || 0) + 1\n          })\n        } else {\n          // Для single choice\n          answerCounts[answer.answer] = (answerCounts[answer.answer] || 0) + 1\n        }\n      })\n\n      return (\n        <div className=\"question-stats\">\n          <h4>Статистика ответов:</h4>\n          <div className=\"stats-bars\">\n            {Object.entries(answerCounts).map(([option, count]) => {\n              const percentage = Math.round(\n                (count / answersForQuestion.length) * 100\n              )\n              return (\n                <div key={option} className=\"stat-item\">\n                  <div className=\"stat-label\">{option}</div>\n                  <div className=\"stat-bar-container\">\n                    <div\n                      className=\"stat-bar\"\n                      style={{ width: `${percentage}%` }}\n                    ></div>\n                    <span className=\"stat-value\">\n                      {percentage}% ({count})\n                    </span>\n                  </div>\n                </div>\n              )\n            })}\n          </div>\n        </div>\n      )\n    }\n\n    // Для текстовых вопросов показываем список ответов\n    if (question.type === \"TEXT\") {\n      return (\n        <div className=\"text-answers\">\n          <h4>Текстовые ответы:</h4>\n          <ul className=\"text-answers-list\">\n            {answersForQuestion.map((answer, index) => (\n              <li key={index} className=\"text-answer-item\">\n                {answer.answer || \"Нет ответа\"}\n              </li>\n            ))}\n          </ul>\n        </div>\n      )\n    }\n\n    // Для рейтинговых вопросов показываем средний рейтинг\n    if (question.type === \"RATING\") {\n      const ratings = answersForQuestion.map(a => parseInt(a.answer) || 0)\n      const averageRating =\n        ratings.reduce((sum, rating) => sum + rating, 0) / ratings.length\n\n      return (\n        <div className=\"rating-stats\">\n          <h4>Средний рейтинг: {averageRating.toFixed(1)} из 10</h4>\n          <div className=\"rating-distribution\">\n            {[1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map(rating => {\n              const count = ratings.filter(r => r === rating).length\n              const percentage = Math.round((count / ratings.length) * 100)\n\n              return (\n                <div key={rating} className=\"rating-bar-container\">\n                  <div className=\"rating-label\">{rating}</div>\n                  <div className=\"rating-bar-wrapper\">\n                    <div\n                      className=\"rating-bar\"\n                      style={{ height: `${percentage}%` }}\n                    ></div>\n                  </div>\n                  <div className=\"rating-count\">{count}</div>\n                </div>\n              )\n            })}\n          </div>\n        </div>\n      )\n    }\n\n    return null\n  }\n\n  return (\n    <div className=\"dashboard-container\">\n      <Sidebar user={user} />\n      <div className=\"statistics-page\">\n        <h2 className=\"page-title\">Статистика опросов</h2>\n\n        {error && <div className=\"error-message\">{error}</div>}\n\n        {loading ? (\n          <div className=\"loading-indicator\">Загрузка данных...</div>\n        ) : (\n          <div className=\"statistics-container\">\n            <div className=\"surveys-list-sidebar\">\n              <h3>Опросники</h3>\n              {surveys.length === 0 ? (\n                <div className=\"empty-state\">У вас пока нет опросников</div>\n              ) : (\n                <ul className=\"surveys-list\">\n                  {surveys.map(survey => (\n                    <li\n                      key={survey.id}\n                      className={`survey-item ${\n                        selectedSurvey?.id === survey.id ? \"active\" : \"\"\n                      }`}\n                      onClick={() => handleSurveySelect(survey)}\n                    >\n                      <div className=\"survey-title\">{survey.title}</div>\n                      <div className=\"survey-meta\">\n                        <span\n                          className={`survey-status status-${survey.status.toLowerCase()}`}\n                        >\n                          {survey.status === \"ACTIVE\"\n                            ? \"Активный\"\n                            : survey.status === \"COMPLETED\"\n                            ? \"Завершен\"\n                            : \"Черновик\"}\n                        </span>\n                        <span className=\"survey-responses-count\">\n                          Ответов: {survey.responsesCount || 0}\n                        </span>\n                      </div>\n                    </li>\n                  ))}\n                </ul>\n              )}\n            </div>\n\n            <div className=\"statistics-content\">\n              {!selectedSurvey ? (\n                <div className=\"select-survey-prompt\">\n                  Выберите опросник из списка слева для просмотра статистики\n                </div>\n              ) : (\n                <div className=\"survey-statistics\">\n                  <h3>{selectedSurvey.title}</h3>\n                  <div className=\"statistics-tabs\">\n                    <button\n                      className={`tab-button ${\n                        !responseDetails ? \"active\" : \"\"\n                      }`}\n                      onClick={() => setResponseDetails(null)}\n                    >\n                      Общая статистика\n                    </button>\n                    <button\n                      className={`tab-button ${\n                        responseDetails ? \"active\" : \"\"\n                      }`}\n                      disabled={!responses.length}\n                      onClick={() =>\n                        responses.length && setResponseDetails(responses[0])\n                      }\n                    >\n                      Ответы клиентов ({responses.length})\n                    </button>\n                  </div>\n\n                  {!responseDetails ? (\n                    <div className=\"general-statistics\">\n                      <div className=\"stats-summary\">\n                        <div className=\"stat-card\">\n                          <div className=\"stat-value\">{responses.length}</div>\n                          <div className=\"stat-label\">Всего ответов</div>\n                        </div>\n                        <div className=\"stat-card\">\n                          <div className=\"stat-value\">\n                            {formatDate(selectedSurvey.startDate) ||\n                              \"Не указано\"}\n                          </div>\n                          <div className=\"stat-label\">Дата начала</div>\n                        </div>\n                        <div className=\"stat-card\">\n                          <div className=\"stat-value\">\n                            {formatDate(selectedSurvey.endDate) || \"Не указано\"}\n                          </div>\n                          <div className=\"stat-label\">Дата окончания</div>\n                        </div>\n                      </div>\n\n                      <div className=\"questions-statistics\">\n                        <h4>Статистика по вопросам</h4>\n                        {selectedSurvey.questions &&\n                          selectedSurvey.questions.map(question => (\n                            <div\n                              key={question.id}\n                              className=\"question-stat-card\"\n                            >\n                              <div className=\"question-text\">\n                                {question.orderNumber}. {question.text}\n                                {question.required && (\n                                  <span className=\"required-mark\">*</span>\n                                )}\n                              </div>\n                              <div className=\"question-type\">\n                                {question.type === \"SINGLE_CHOICE\" &&\n                                  \"Одиночный выбор\"}\n                                {question.type === \"MULTIPLE_CHOICE\" &&\n                                  \"Множественный выбор\"}\n                                {question.type === \"TEXT\" && \"Текстовый ответ\"}\n                                {question.type === \"RATING\" && \"Оценка\"}\n                              </div>\n\n                              {Array.isArray(responses) &&\n                              responses.length > 0 ? (\n                                renderQuestionStats(question.id)\n                              ) : (\n                                <div className=\"no-data\">\n                                  Нет данных для анализа\n                                </div>\n                              )}\n                            </div>\n                          ))}\n                      </div>\n                    </div>\n                  ) : (\n                    <div className=\"response-details\">\n                      <div className=\"response-nav\">\n                        <select\n                          className=\"response-selector\"\n                          value={responseDetails.id}\n                          onChange={e => {\n                            const selected = responses.find(\n                              r => r.id === Number(e.target.value)\n                            )\n                            if (selected) setResponseDetails(selected)\n                          }}\n                        >\n                          {responses.map((response, index) => (\n                            <option key={response.id} value={response.id}>\n                              Ответ {index + 1} -{\" \"}\n                              {response.respondent?.name || \"Аноним\"} (\n                              {formatDate(response.createdAt)})\n                            </option>\n                          ))}\n                        </select>\n\n                        <div className=\"response-navigation\">\n                          <button\n                            className=\"nav-button\"\n                            disabled={responses.indexOf(responseDetails) === 0}\n                            onClick={() => {\n                              const currentIndex =\n                                responses.indexOf(responseDetails)\n                              if (currentIndex > 0) {\n                                setResponseDetails(responses[currentIndex - 1])\n                              }\n                            }}\n                          >\n                            &larr; Предыдущий\n                          </button>\n                          <button\n                            className=\"nav-button\"\n                            disabled={\n                              responses.indexOf(responseDetails) ===\n                              responses.length - 1\n                            }\n                            onClick={() => {\n                              const currentIndex =\n                                responses.indexOf(responseDetails)\n                              if (currentIndex < responses.length - 1) {\n                                setResponseDetails(responses[currentIndex + 1])\n                              }\n                            }}\n                          >\n                            Следующий &rarr;\n                          </button>\n                        </div>\n                      </div>\n\n                      <div className=\"respondent-info\">\n                        <h4>Информация о респонденте</h4>\n                        <div className=\"info-row\">\n                          <span className=\"info-label\">Имя:</span>\n                          <span className=\"info-value\">\n                            {responseDetails.respondent?.name || \"Не указано\"}\n                          </span>\n                        </div>\n                        <div className=\"info-row\">\n                          <span className=\"info-label\">Email:</span>\n                          <span className=\"info-value\">\n                            {responseDetails.respondent?.email || \"Не указано\"}\n                          </span>\n                        </div>\n                        <div className=\"info-row\">\n                          <span className=\"info-label\">Дата ответа:</span>\n                          <span className=\"info-value\">\n                            {formatDate(responseDetails.createdAt)}\n                          </span>\n                        </div>\n                      </div>\n\n                      <div className=\"response-answers\">\n                        <h4>Ответы на вопросы</h4>\n                        {responseDetails.answers &&\n                          responseDetails.answers.map(answer => {\n                            const question = selectedSurvey.questions.find(\n                              q => q.id === answer.questionId\n                            )\n                            if (!question) return null\n\n                            return (\n                              <div\n                                key={answer.questionId}\n                                className=\"answer-item\"\n                              >\n                                <div className=\"question-text\">\n                                  {question.orderNumber}. {question.text}\n                                  {question.required && (\n                                    <span className=\"required-mark\">*</span>\n                                  )}\n                                </div>\n                                <div className=\"answer-content\">\n                                  {question.type === \"TEXT\" && (\n                                    <div className=\"text-answer\">\n                                      {answer.answer || \"Нет ответа\"}\n                                    </div>\n                                  )}\n\n                                  {question.type === \"SINGLE_CHOICE\" && (\n                                    <div className=\"choice-answer\">\n                                      {answer.answer}\n                                    </div>\n                                  )}\n\n                                  {question.type === \"MULTIPLE_CHOICE\" && (\n                                    <div className=\"multiple-choice-answer\">\n                                      {Array.isArray(answer.answer) &&\n                                        answer.answer.map((option, i) => (\n                                          <div key={i} className=\"choice-item\">\n                                            {option}\n                                          </div>\n                                        ))}\n                                    </div>\n                                  )}\n\n                                  {question.type === \"RATING\" && (\n                                    <div className=\"rating-answer\">\n                                      <div className=\"rating-value\">\n                                        {answer.answer} / 10\n                                      </div>\n                                      <div className=\"rating-stars\">\n                                        {[1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map(\n                                          star => (\n                                            <span\n                                              key={star}\n                                              className={`star ${\n                                                parseInt(answer.answer) >= star\n                                                  ? \"filled\"\n                                                  : \"\"\n                                              }`}\n                                            >\n                                              ★\n                                            </span>\n                                          )\n                                        )}\n                                      </div>\n                                    </div>\n                                  )}\n                                </div>\n                              </div>\n                            )\n                          })}\n                      </div>\n                    </div>\n                  )}\n                </div>\n              )}\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default StatisticsPage\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}