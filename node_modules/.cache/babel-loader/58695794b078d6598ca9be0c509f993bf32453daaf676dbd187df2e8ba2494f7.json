{"ast":null,"code":"var _jsxFileName = \"/Users/shirokiy/Desktop/Repositories/\\u0414\\u0438\\u043F\\u043B\\u043E\\u043C\\u044B/ClientExp/client_exp-frontend/src/pages/Login/LoginPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport \"../../components/common/AuthStyles.css\";\nimport { authService } from \"../../api/auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = () => {\n  _s();\n  const [credentials, setCredentials] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const [error, setError] = useState(\"\");\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const navigate = useNavigate();\n\n  // Используем useEffect для проверки состояния авторизации при загрузке компонента\n  useEffect(() => {\n    // Если пользователь уже авторизован, перенаправляем на dashboard\n    if (authService.isAuthenticated()) {\n      navigate(\"/dashboard\");\n    }\n\n    // Проверяем, есть ли сохраненная ошибка в localStorage\n    const savedError = localStorage.getItem(\"loginError\");\n    if (savedError) {\n      setError(savedError);\n      // Удаляем ошибку из localStorage после отображения\n      localStorage.removeItem(\"loginError\");\n    }\n  }, [navigate]);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setCredentials(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleSubmit = async e => {\n    // Предотвращаем стандартное поведение формы\n    e.preventDefault();\n\n    // Очищаем предыдущие сообщения\n    setError(\"\");\n    setSuccessMessage(\"\");\n\n    // Валидация полей\n    if (!credentials.email || !credentials.password) {\n      setError(\"Пожалуйста, заполните все поля\");\n      return;\n    }\n    try {\n      setIsLoading(true);\n      console.log(\"Отправка данных на сервер:\", {\n        email: credentials.email\n      });\n      const response = await authService.login(credentials);\n      console.log(\"Ответ сервера:\", response);\n      setSuccessMessage(\"Авторизация успешна! Перенаправление...\");\n\n      // Задержка перед перенаправлением\n      setTimeout(() => {\n        navigate(\"/dashboard\");\n      }, 1500);\n    } catch (err) {\n      console.error(\"Ошибка при авторизации:\", err);\n      let errorMessage = \"Произошла ошибка при авторизации\";\n\n      // Обработка различных типов ошибок\n      if (err.response) {\n        var _err$response$data;\n        // Ошибки от сервера\n        if (err.response.status === 401) {\n          errorMessage = \"Неверный email или пароль\";\n        } else if (err.response.status === 403) {\n          errorMessage = \"Доступ запрещён\";\n        } else if ((_err$response$data = err.response.data) !== null && _err$response$data !== void 0 && _err$response$data.message) {\n          errorMessage = err.response.data.message;\n        }\n      } else if (err.request) {\n        // Ошибка сети - запрос был отправлен, но ответ не получен\n        errorMessage = \"Сервер не отвечает. Пожалуйста, проверьте подключение к интернету.\";\n      }\n\n      // Устанавливаем сообщение об ошибке\n      setError(errorMessage);\n\n      // Очищаем пароль для безопасности\n      setCredentials(prev => ({\n        ...prev,\n        password: \"\"\n      }));\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"\\u0412\\u0445\\u043E\\u0434 \\u0432 \\u0441\\u0438\\u0441\\u0442\\u0435\\u043C\\u0443\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0441\\u0432\\u043E\\u0438 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0435 \\u0434\\u043B\\u044F \\u0432\\u0445\\u043E\\u0434\\u0430 \\u0432 \\u0441\\u0438\\u0441\\u0442\\u0435\\u043C\\u0443 \\u0443\\u043F\\u0440\\u0430\\u0432\\u043B\\u0435\\u043D\\u0438\\u044F \\u043A\\u043B\\u0438\\u0435\\u043D\\u0442\\u0441\\u043A\\u0438\\u043C \\u043E\\u043F\\u044B\\u0442\\u043E\\u043C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 19\n      }, this), successMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"success-message\",\n        children: successMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"auth-form\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            id: \"email\",\n            name: \"email\",\n            className: \"form-control\",\n            value: credentials.email,\n            onChange: handleChange,\n            placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0432\\u0430\\u0448 email\",\n            disabled: isLoading,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"password\",\n            name: \"password\",\n            className: \"form-control\",\n            value: credentials.password,\n            onChange: handleChange,\n            placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0432\\u0430\\u0448 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n            disabled: isLoading,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"submit-button\",\n          disabled: isLoading,\n          children: isLoading ? \"Выполняется вход...\" : \"Войти\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-footer\",\n        children: [\"\\u041D\\u0435\\u0442 \\u0430\\u043A\\u043A\\u0430\\u0443\\u043D\\u0442\\u0430?\", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/register\",\n          children: \"\\u0417\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\\u0441\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginPage, \"/KOQaVfuOgCZffzsfyOEd3YZrpI=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","useEffect","Link","useNavigate","authService","jsxDEV","_jsxDEV","LoginPage","_s","credentials","setCredentials","email","password","error","setError","successMessage","setSuccessMessage","isLoading","setIsLoading","navigate","isAuthenticated","savedError","localStorage","getItem","removeItem","handleChange","e","name","value","target","prev","handleSubmit","preventDefault","console","log","response","login","setTimeout","err","errorMessage","_err$response$data","status","data","message","request","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","onChange","placeholder","disabled","required","to","_c","$RefreshReg$"],"sources":["/Users/shirokiy/Desktop/Repositories/Дипломы/ClientExp/client_exp-frontend/src/pages/Login/LoginPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport { Link, useNavigate } from \"react-router-dom\"\nimport \"../../components/common/AuthStyles.css\"\nimport { authService } from \"../../api/auth\"\n\nconst LoginPage = () => {\n  const [credentials, setCredentials] = useState({\n    email: \"\",\n    password: \"\",\n  })\n  const [error, setError] = useState(\"\")\n  const [successMessage, setSuccessMessage] = useState(\"\")\n  const [isLoading, setIsLoading] = useState(false)\n  const navigate = useNavigate()\n\n  // Используем useEffect для проверки состояния авторизации при загрузке компонента\n  useEffect(() => {\n    // Если пользователь уже авторизован, перенаправляем на dashboard\n    if (authService.isAuthenticated()) {\n      navigate(\"/dashboard\")\n    }\n\n    // Проверяем, есть ли сохраненная ошибка в localStorage\n    const savedError = localStorage.getItem(\"loginError\")\n    if (savedError) {\n      setError(savedError)\n      // Удаляем ошибку из localStorage после отображения\n      localStorage.removeItem(\"loginError\")\n    }\n  }, [navigate])\n\n  const handleChange = e => {\n    const { name, value } = e.target\n    setCredentials(prev => ({\n      ...prev,\n      [name]: value,\n    }))\n  }\n\n  const handleSubmit = async e => {\n    // Предотвращаем стандартное поведение формы\n    e.preventDefault()\n\n    // Очищаем предыдущие сообщения\n    setError(\"\")\n    setSuccessMessage(\"\")\n\n    // Валидация полей\n    if (!credentials.email || !credentials.password) {\n      setError(\"Пожалуйста, заполните все поля\")\n      return\n    }\n\n    try {\n      setIsLoading(true)\n      console.log(\"Отправка данных на сервер:\", { email: credentials.email })\n\n      const response = await authService.login(credentials)\n      console.log(\"Ответ сервера:\", response)\n\n      setSuccessMessage(\"Авторизация успешна! Перенаправление...\")\n\n      // Задержка перед перенаправлением\n      setTimeout(() => {\n        navigate(\"/dashboard\")\n      }, 1500)\n    } catch (err) {\n      console.error(\"Ошибка при авторизации:\", err)\n\n      let errorMessage = \"Произошла ошибка при авторизации\"\n\n      // Обработка различных типов ошибок\n      if (err.response) {\n        // Ошибки от сервера\n        if (err.response.status === 401) {\n          errorMessage = \"Неверный email или пароль\"\n        } else if (err.response.status === 403) {\n          errorMessage = \"Доступ запрещён\"\n        } else if (err.response.data?.message) {\n          errorMessage = err.response.data.message\n        }\n      } else if (err.request) {\n        // Ошибка сети - запрос был отправлен, но ответ не получен\n        errorMessage =\n          \"Сервер не отвечает. Пожалуйста, проверьте подключение к интернету.\"\n      }\n\n      // Устанавливаем сообщение об ошибке\n      setError(errorMessage)\n\n      // Очищаем пароль для безопасности\n      setCredentials(prev => ({\n        ...prev,\n        password: \"\",\n      }))\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  return (\n    <div className=\"auth-container\">\n      <div className=\"auth-form-container\">\n        <div className=\"auth-header\">\n          <h1>Вход в систему</h1>\n          <p>\n            Введите свои данные для входа в систему управления клиентским опытом\n          </p>\n        </div>\n\n        {error && <div className=\"error-message\">{error}</div>}\n        {successMessage && (\n          <div className=\"success-message\">{successMessage}</div>\n        )}\n\n        <form className=\"auth-form\" onSubmit={handleSubmit}>\n          <div className=\"form-group\">\n            <label htmlFor=\"email\">Email</label>\n            <input\n              type=\"email\"\n              id=\"email\"\n              name=\"email\"\n              className=\"form-control\"\n              value={credentials.email}\n              onChange={handleChange}\n              placeholder=\"Введите ваш email\"\n              disabled={isLoading}\n              required\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"password\">Пароль</label>\n            <input\n              type=\"password\"\n              id=\"password\"\n              name=\"password\"\n              className=\"form-control\"\n              value={credentials.password}\n              onChange={handleChange}\n              placeholder=\"Введите ваш пароль\"\n              disabled={isLoading}\n              required\n            />\n          </div>\n\n          <button type=\"submit\" className=\"submit-button\" disabled={isLoading}>\n            {isLoading ? \"Выполняется вход...\" : \"Войти\"}\n          </button>\n        </form>\n\n        <div className=\"auth-footer\">\n          Нет аккаунта?\n          <Link to=\"/register\">Зарегистрироваться</Link>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default LoginPage\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}