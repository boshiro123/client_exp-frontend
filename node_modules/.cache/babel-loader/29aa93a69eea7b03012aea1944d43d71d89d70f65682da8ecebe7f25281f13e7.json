{"ast":null,"code":"var _jsxFileName = \"/Users/shirokiy/Desktop/Repositories/\\u0414\\u0438\\u043F\\u043B\\u043E\\u043C\\u044B/ClientExp/client_exp-frontend/src/pages/Dashboard/DashboardPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { authService } from \"../../api/auth\";\nimport { surveyService } from \"../../api/survey\";\nimport Sidebar from \"../../components/common/Sidebar\";\nimport \"../../components/common/AuthStyles.css\";\nimport \"./DashboardStyles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DashboardPage = () => {\n  _s();\n  const navigate = useNavigate();\n  const [user, setUser] = useState(null);\n  const [showSurveyForm, setShowSurveyForm] = useState(false);\n  const [surveyData, setSurveyData] = useState({\n    title: \"\",\n    description: \"\",\n    status: \"DRAFT\",\n    startDate: \"\",\n    endDate: \"\",\n    questions: [{\n      text: \"Укажите ваш возраст\",\n      type: \"single_choice\",\n      required: true,\n      category: \"Демографическая информация\",\n      options: [\"До 18 лет\", \"18–25 лет\", \"26–35 лет\", \"36–45 лет\", \"46–60 лет\", \"60+ лет\"]\n    }, {\n      text: \"Ваш пол\",\n      type: \"single_choice\",\n      required: true,\n      category: \"Демографическая информация\",\n      options: [\"Мужской\", \"Женский\"]\n    }, {\n      text: \"Ваша профессия или сфера деятельности\",\n      type: \"single_choice\",\n      required: false,\n      category: \"Демографическая информация\",\n      options: [\"Студент\", \"Фрилансер\", \"Офисный работник\", \"Руководитель/владелец бизнеса\", \"Другое\"]\n    }]\n  });\n  const [newQuestion, setNewQuestion] = useState({\n    text: \"\",\n    type: \"single_choice\",\n    required: false,\n    category: \"\",\n    options: [\"\"]\n  });\n  const [categories, setCategories] = useState([\"Демографическая информация\", \"Географическая сегментация\", \"Поведенческая сегментация\", \"Сегментация по удовлетворенности\", \"Сегментация по клиентскому пути\", \"Сегментация по мотивации и ценности клиента\"]);\n  const [newCategory, setNewCategory] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const [surveys, setSurveys] = useState([]);\n  const [surveysFetching, setSurveysFetching] = useState(false);\n  const [surveysError, setSurveysError] = useState(\"\");\n  useEffect(() => {\n    const currentUser = authService.getCurrentUser();\n    if (currentUser) {\n      setUser(currentUser);\n      fetchSurveys();\n    } else {\n      navigate(\"/login\");\n    }\n  }, [navigate]);\n  const fetchSurveys = async () => {\n    setSurveysFetching(true);\n    setSurveysError(\"\");\n    try {\n      const response = await surveyService.getAllSurveys();\n      console.log(\"Получены данные:\", response);\n\n      // Проверяем, есть ли поле content в ответе\n      if (response && response.content && Array.isArray(response.content)) {\n        console.log(`Получено ${response.content.length} опросников из поля content`);\n        setSurveys(response.content);\n      } else if (Array.isArray(response)) {\n        // На случай, если API вернет просто массив\n        console.log(`Получено ${response.length} опросников напрямую`);\n        setSurveys(response);\n      } else {\n        console.log(\"Ответ не содержит опросников в ожидаемом формате:\", response);\n        setSurveys([]);\n      }\n    } catch (error) {\n      console.error(\"Ошибка при получении опросников:\", error);\n      setSurveysError(\"Не удалось загрузить опросники. Пожалуйста, попробуйте позже.\");\n      setSurveys([]);\n    } finally {\n      setSurveysFetching(false);\n    }\n  };\n  const handleLogout = () => {\n    authService.logout();\n    navigate(\"/login\");\n  };\n  const handleCreateSurvey = () => {\n    // Сбрасываем форму на значения по умолчанию\n    setSurveyData({\n      title: \"\",\n      description: \"\",\n      status: \"DRAFT\",\n      startDate: \"\",\n      endDate: \"\",\n      questions: [{\n        text: \"Укажите ваш возраст\",\n        type: \"single_choice\",\n        required: true,\n        category: \"Демографическая информация\",\n        options: [\"До 18 лет\", \"18–25 лет\", \"26–35 лет\", \"36–45 лет\", \"46–60 лет\", \"60+ лет\"]\n      }, {\n        text: \"Ваш пол\",\n        type: \"single_choice\",\n        required: true,\n        category: \"Демографическая информация\",\n        options: [\"Мужской\", \"Женский\"]\n      }, {\n        text: \"Ваша профессия или сфера деятельности\",\n        type: \"single_choice\",\n        required: false,\n        category: \"Демографическая информация\",\n        options: [\"Студент\", \"Фрилансер\", \"Офисный работник\", \"Руководитель/владелец бизнеса\", \"Другое\"]\n      }]\n    });\n\n    // Очищаем сообщения об ошибках и успехе\n    setErrorMessage(\"\");\n    setSuccessMessage(\"\");\n\n    // Показываем форму создания\n    setShowSurveyForm(true);\n  };\n  const handleSurveyChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setSurveyData({\n      ...surveyData,\n      [name]: value\n    });\n  };\n  const handleQuestionChange = (e, index) => {\n    const {\n      name,\n      value\n    } = e.target;\n    const updatedQuestions = [...surveyData.questions];\n    updatedQuestions[index] = {\n      ...updatedQuestions[index],\n      [name]: value\n    };\n    setSurveyData({\n      ...surveyData,\n      questions: updatedQuestions\n    });\n  };\n  const handleOptionChange = (questionIndex, optionIndex, value) => {\n    const updatedQuestions = [...surveyData.questions];\n    updatedQuestions[questionIndex].options[optionIndex] = value;\n    setSurveyData({\n      ...surveyData,\n      questions: updatedQuestions\n    });\n  };\n  const addOption = questionIndex => {\n    const updatedQuestions = [...surveyData.questions];\n    updatedQuestions[questionIndex].options.push(\"\");\n    setSurveyData({\n      ...surveyData,\n      questions: updatedQuestions\n    });\n  };\n  const removeOption = (questionIndex, optionIndex) => {\n    const updatedQuestions = [...surveyData.questions];\n    updatedQuestions[questionIndex].options.splice(optionIndex, 1);\n    setSurveyData({\n      ...surveyData,\n      questions: updatedQuestions\n    });\n  };\n  const handleRequiredChange = index => {\n    const updatedQuestions = [...surveyData.questions];\n    updatedQuestions[index].required = !updatedQuestions[index].required;\n    setSurveyData({\n      ...surveyData,\n      questions: updatedQuestions\n    });\n  };\n  const handleNewQuestionChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewQuestion({\n      ...newQuestion,\n      [name]: value\n    });\n  };\n  const handleNewOptionChange = (index, value) => {\n    const updatedOptions = [...newQuestion.options];\n    updatedOptions[index] = value;\n    setNewQuestion({\n      ...newQuestion,\n      options: updatedOptions\n    });\n  };\n  const addNewOption = () => {\n    setNewQuestion({\n      ...newQuestion,\n      options: [...newQuestion.options, \"\"]\n    });\n  };\n  const removeNewOption = index => {\n    const updatedOptions = [...newQuestion.options];\n    updatedOptions.splice(index, 1);\n    setNewQuestion({\n      ...newQuestion,\n      options: updatedOptions\n    });\n  };\n  const addNewQuestion = () => {\n    if (newQuestion.text.trim() === \"\") {\n      alert(\"Вопрос не может быть пустым\");\n      return;\n    }\n    setSurveyData({\n      ...surveyData,\n      questions: [...surveyData.questions, {\n        ...newQuestion\n      }]\n    });\n\n    // Сбросить форму нового вопроса\n    setNewQuestion({\n      text: \"\",\n      type: \"single_choice\",\n      required: false,\n      category: newQuestion.category,\n      options: [\"\"]\n    });\n  };\n  const removeQuestion = index => {\n    if (index < 3) {\n      alert(\"Первые три вопроса обязательны и не могут быть удалены\");\n      return;\n    }\n    const updatedQuestions = [...surveyData.questions];\n    updatedQuestions.splice(index, 1);\n    setSurveyData({\n      ...surveyData,\n      questions: updatedQuestions\n    });\n  };\n  const addCategory = () => {\n    if (newCategory.trim() === \"\") return;\n    setCategories([...categories, newCategory]);\n    setNewCategory(\"\");\n  };\n  const saveSurvey = async () => {\n    // Валидация данных опросника перед отправкой\n    if (!surveyData.title.trim()) {\n      setErrorMessage(\"Необходимо указать название опросника\");\n      return;\n    }\n    if (surveyData.questions.length < 3) {\n      setErrorMessage(\"Опросник должен содержать минимум 3 вопроса\");\n      return;\n    }\n\n    // Сброс сообщений об ошибках/успехе\n    setErrorMessage(\"\");\n    setSuccessMessage(\"\");\n    setIsLoading(true);\n    try {\n      // Преобразуем данные в формат, ожидаемый сервером\n      const serverData = {\n        ...surveyData,\n        // Преобразуем статус к верхнему регистру, если он в верблюжьем регистре\n        status: surveyData.status === \"черновик\" ? \"DRAFT\" : surveyData.status === \"активный\" ? \"ACTIVE\" : surveyData.status === \"завершенный\" ? \"COMPLETED\" : surveyData.status,\n        // Добавляем порядковые номера вопросам\n        questions: surveyData.questions.map((question, index) => ({\n          ...question,\n          orderNumber: index + 1,\n          // Преобразуем тип вопроса к формату сервера\n          type: question.type === \"single_choice\" ? \"SINGLE_CHOICE\" : question.type === \"multiple_choice\" ? \"MULTIPLE_CHOICE\" : question.type === \"text\" ? \"TEXT\" : question.type === \"rating\" ? \"RATING\" : question.type.toUpperCase()\n        }))\n      };\n      console.log(\"Отправка данных на сервер:\", serverData);\n      let response;\n      let successMsg;\n\n      // Если у опросника есть id, то это обновление, иначе - создание\n      if (surveyData.id) {\n        // Обновление существующего опросника\n        response = await surveyService.updateSurvey(surveyData.id, serverData);\n        successMsg = \"Опросник успешно обновлен!\";\n      } else {\n        // Создание нового опросника\n        response = await surveyService.createSurvey(serverData);\n        successMsg = \"Опросник успешно создан!\";\n      }\n      console.log(\"Опросник успешно сохранен:\", response);\n      setSuccessMessage(successMsg);\n\n      // Обновляем список опросников\n      fetchSurveys();\n\n      // Сброс формы и возврат к главному экрану через 2 секунды\n      setTimeout(() => {\n        setShowSurveyForm(false);\n        setSuccessMessage(\"\");\n      }, 2000);\n    } catch (error) {\n      console.error(\"Ошибка при сохранении опросника:\", error);\n      let errorMsg = \"Произошла ошибка при сохранении опросника. Пожалуйста, попробуйте позже.\";\n\n      // Обработка различных типов ошибок\n      if (error.response) {\n        var _error$response$data;\n        // Ошибка от сервера с кодом статуса\n        errorMsg = ((_error$response$data = error.response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || `Ошибка сервера: ${error.response.status} - ${error.response.statusText}`;\n      } else if (error.request) {\n        // Ошибка сети - запрос был отправлен, но ответ не получен\n        errorMsg = \"Сервер не отвечает. Проверьте подключение к Интернету.\";\n      } else {\n        // Ошибка при настройке запроса\n        errorMsg = `Ошибка при создании запроса: ${error.message}`;\n      }\n      setErrorMessage(errorMsg);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const cancelSurveyCreation = () => {\n    if (window.confirm(\"Вы уверены, что хотите отменить создание опросника? Все введенные данные будут потеряны.\")) {\n      setShowSurveyForm(false);\n    }\n  };\n  const handleEditSurvey = async id => {\n    try {\n      setIsLoading(true);\n      // Получаем детальную информацию об опроснике с сервера\n      const surveyDetails = await surveyService.getSurveyById(id);\n      console.log(\"Получены данные опросника для редактирования:\", surveyDetails);\n\n      // Преобразуем вопросы из формата сервера в формат интерфейса\n      const transformedQuestions = surveyDetails.questions.map(question => ({\n        ...question,\n        // Преобразуем тип вопроса из формата сервера в формат интерфейса\n        type: question.type === \"SINGLE_CHOICE\" ? \"single_choice\" : question.type === \"MULTIPLE_CHOICE\" ? \"multiple_choice\" : question.type === \"TEXT\" ? \"text\" : question.type === \"RATING\" ? \"rating\" : question.type.toLowerCase()\n      }));\n\n      // Устанавливаем данные опросника в состояние формы\n      setSurveyData({\n        ...surveyDetails,\n        questions: transformedQuestions\n      });\n\n      // Показываем форму для редактирования\n      setShowSurveyForm(true);\n      setIsLoading(false);\n    } catch (error) {\n      console.error(\"Ошибка при получении данных опросника:\", error);\n      alert(\"Не удалось загрузить опросник для редактирования. Пожалуйста, попробуйте позже.\");\n      setIsLoading(false);\n    }\n  };\n  const handleDeleteSurvey = async id => {\n    if (window.confirm(\"Вы уверены, что хотите удалить этот опросник?\")) {\n      try {\n        setIsLoading(true);\n        await surveyService.deleteSurvey(id);\n\n        // Показываем временное уведомление об успехе\n        setSuccessMessage(\"Опросник успешно удален\");\n        setTimeout(() => setSuccessMessage(\"\"), 3000);\n\n        // Обновить список опросников после удаления\n        fetchSurveys();\n        setIsLoading(false);\n      } catch (error) {\n        console.error(\"Ошибка при удалении опросника:\", error);\n        let errorMsg = \"Не удалось удалить опросник. Пожалуйста, попробуйте позже.\";\n\n        // Обработка различных типов ошибок\n        if (error.response) {\n          var _error$response$data2;\n          errorMsg = ((_error$response$data2 = error.response.data) === null || _error$response$data2 === void 0 ? void 0 : _error$response$data2.message) || `Ошибка сервера: ${error.response.status} - ${error.response.statusText}`;\n        }\n        setErrorMessage(errorMsg);\n        setTimeout(() => setErrorMessage(\"\"), 3000);\n        setIsLoading(false);\n      }\n    }\n  };\n  const handleChangeSurveyStatus = async (id, newStatus) => {\n    try {\n      setIsLoading(true);\n\n      // Преобразуем статус в формат сервера\n      const serverStatus = newStatus === \"активный\" ? \"ACTIVE\" : newStatus === \"завершенный\" ? \"COMPLETED\" : newStatus === \"черновик\" ? \"DRAFT\" : newStatus;\n\n      // Получаем русское название статуса для уведомления\n      const statusDisplayName = serverStatus === \"ACTIVE\" ? \"активный\" : serverStatus === \"COMPLETED\" ? \"завершенный\" : serverStatus === \"DRAFT\" ? \"черновик\" : serverStatus;\n      await surveyService.changeSurveyStatus(id, serverStatus);\n\n      // Показываем временное уведомление об успехе\n      setSuccessMessage(`Статус опросника изменен на \"${statusDisplayName}\"`);\n      setTimeout(() => setSuccessMessage(\"\"), 3000);\n\n      // Обновить список опросников после изменения статуса\n      fetchSurveys();\n      setIsLoading(false);\n    } catch (error) {\n      console.error(\"Ошибка при изменении статуса опросника:\", error);\n      let errorMsg = \"Не удалось изменить статус опросника. Пожалуйста, попробуйте позже.\";\n\n      // Обработка различных типов ошибок\n      if (error.response) {\n        var _error$response$data3;\n        errorMsg = ((_error$response$data3 = error.response.data) === null || _error$response$data3 === void 0 ? void 0 : _error$response$data3.message) || `Ошибка сервера: ${error.response.status} - ${error.response.statusText}`;\n      }\n      setErrorMessage(errorMsg);\n      setTimeout(() => setErrorMessage(\"\"), 3000);\n      setIsLoading(false);\n    }\n  };\n  const getStatusColor = status => {\n    switch (status) {\n      case \"черновик\":\n      case \"DRAFT\":\n        return \"#6c757d\";\n      // серый\n      case \"активный\":\n      case \"ACTIVE\":\n        return \"#28a745\";\n      // зеленый\n      case \"завершенный\":\n      case \"COMPLETED\":\n        return \"#dc3545\";\n      // красный\n      default:\n        return \"#6c757d\";\n    }\n  };\n  const getStatusDisplayText = status => {\n    switch (status) {\n      case \"DRAFT\":\n        return \"Черновик\";\n      case \"ACTIVE\":\n        return \"Активный\";\n      case \"COMPLETED\":\n        return \"Завершенный\";\n      default:\n        return status;\n    }\n  };\n  const formatDate = dateString => {\n    if (!dateString) return \"—\";\n    const date = new Date(dateString);\n    return date.toLocaleDateString(\"ru-RU\");\n  };\n  if (!user) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 592,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      user: user\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 597,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"dashboard-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u041F\\u0430\\u043D\\u0435\\u043B\\u044C \\u0443\\u043F\\u0440\\u0430\\u0432\\u043B\\u0435\\u043D\\u0438\\u044F \\u043A\\u043B\\u0438\\u0435\\u043D\\u0442\\u0441\\u043A\\u0438\\u043C \\u043E\\u043F\\u044B\\u0442\\u043E\\u043C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 599,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-info\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"\\u041F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044C: \", user.username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 601,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 600,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 598,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"dashboard-content\",\n      children: !showSurveyForm ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"\\u0414\\u043E\\u0431\\u0440\\u043E \\u043F\\u043E\\u0436\\u0430\\u043B\\u043E\\u0432\\u0430\\u0442\\u044C, \", user.username, \"!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 608,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u0423\\u043F\\u0440\\u0430\\u0432\\u043B\\u044F\\u0439\\u0442\\u0435 \\u043A\\u043B\\u0438\\u0435\\u043D\\u0442\\u0441\\u043A\\u0438\\u043C \\u043E\\u043F\\u044B\\u0442\\u043E\\u043C \\u0441 \\u043F\\u043E\\u043C\\u043E\\u0449\\u044C\\u044E \\u0441\\u043E\\u0437\\u0434\\u0430\\u043D\\u0438\\u044F \\u0438 \\u0430\\u043D\\u0430\\u043B\\u0438\\u0437\\u0430 \\u043E\\u043F\\u0440\\u043E\\u0441\\u043D\\u0438\\u043A\\u043E\\u0432.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 609,\n          columnNumber: 13\n        }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: errorMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 615,\n          columnNumber: 15\n        }, this), successMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"success-message\",\n          children: successMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 618,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"action-buttons\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"primary-button\",\n            onClick: handleCreateSurvey,\n            children: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C \\u043D\\u043E\\u0432\\u044B\\u0439 \\u043E\\u043F\\u0440\\u043E\\u0441\\u043D\\u0438\\u043A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 622,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 621,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"surveys-list-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"\\u041C\\u043E\\u0438 \\u043E\\u043F\\u0440\\u043E\\u0441\\u043D\\u0438\\u043A\\u0438\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 628,\n            columnNumber: 15\n          }, this), surveysFetching && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"loading-indicator\",\n            children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430 \\u043E\\u043F\\u0440\\u043E\\u0441\\u043D\\u0438\\u043A\\u043E\\u0432...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 631,\n            columnNumber: 17\n          }, this), surveysError && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-message\",\n            children: surveysError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 634,\n            columnNumber: 17\n          }, this), !surveysFetching && !surveysError && surveys.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"empty-state\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"\\u0423 \\u0432\\u0430\\u0441 \\u043F\\u043E\\u043A\\u0430 \\u043D\\u0435\\u0442 \\u0441\\u043E\\u0437\\u0434\\u0430\\u043D\\u043D\\u044B\\u0445 \\u043E\\u043F\\u0440\\u043E\\u0441\\u043D\\u0438\\u043A\\u043E\\u0432.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 639,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 638,\n            columnNumber: 17\n          }, this), !surveysFetching && !surveysError && surveys.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"surveys-table-container\",\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"surveys-table\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 648,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"\\u0421\\u0442\\u0430\\u0442\\u0443\\u0441\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 649,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"\\u0414\\u0430\\u0442\\u0430 \\u043D\\u0430\\u0447\\u0430\\u043B\\u0430\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 650,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"\\u0414\\u0430\\u0442\\u0430 \\u043E\\u043A\\u043E\\u043D\\u0447\\u0430\\u043D\\u0438\\u044F\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 651,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"\\u0414\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u044F\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 652,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 647,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 646,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: surveys.map(survey => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: survey.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 658,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"status-badge\",\n                      style: {\n                        backgroundColor: getStatusColor(survey.status)\n                      },\n                      children: getStatusDisplayText(survey.status)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 660,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 659,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: formatDate(survey.startDate)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 669,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: formatDate(survey.endDate)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 670,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"survey-actions\",\n                      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                        className: \"action-button edit-button\",\n                        onClick: () => handleEditSurvey(survey.id),\n                        title: \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\",\n                        children: \"\\u270F\\uFE0F\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 673,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                        className: \"action-button preview-button\",\n                        onClick: () => navigate(`/survey/${survey.id}`),\n                        title: \"\\u041F\\u0440\\u0435\\u0434\\u043F\\u0440\\u043E\\u0441\\u043C\\u043E\\u0442\\u0440\",\n                        children: \"\\uD83D\\uDC41\\uFE0F\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 681,\n                        columnNumber: 31\n                      }, this), survey.status !== \"активный\" && survey.status !== \"ACTIVE\" && /*#__PURE__*/_jsxDEV(\"button\", {\n                        className: \"action-button activate-button\",\n                        onClick: () => handleChangeSurveyStatus(survey.id, \"активный\"),\n                        title: \"\\u0410\\u043A\\u0442\\u0438\\u0432\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\",\n                        children: \"\\u25B6\\uFE0F\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 691,\n                        columnNumber: 35\n                      }, this), (survey.status === \"активный\" || survey.status === \"ACTIVE\") && /*#__PURE__*/_jsxDEV(\"button\", {\n                        className: \"action-button complete-button\",\n                        onClick: () => handleChangeSurveyStatus(survey.id, \"завершенный\"),\n                        title: \"\\u0417\\u0430\\u0432\\u0435\\u0440\\u0448\\u0438\\u0442\\u044C\",\n                        children: \"\\u23F9\\uFE0F\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 707,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                        className: \"action-button delete-button\",\n                        onClick: () => handleDeleteSurvey(survey.id),\n                        title: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\",\n                        children: \"\\uD83D\\uDDD1\\uFE0F\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 721,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 672,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 671,\n                    columnNumber: 27\n                  }, this)]\n                }, survey.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 657,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 655,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 645,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 644,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 627,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 607,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"survey-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u043D\\u0438\\u0435 \\u043D\\u043E\\u0432\\u043E\\u0433\\u043E \\u043E\\u043F\\u0440\\u043E\\u0441\\u043D\\u0438\\u043A\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 740,\n          columnNumber: 13\n        }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: errorMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 743,\n          columnNumber: 15\n        }, this), successMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"success-message\",\n          children: successMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 746,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"\\u041E\\u0441\\u043D\\u043E\\u0432\\u043D\\u0430\\u044F \\u0438\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u044F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 750,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"title\",\n              children: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u043E\\u043F\\u0440\\u043E\\u0441\\u043D\\u0438\\u043A\\u0430:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 752,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"title\",\n              name: \"title\",\n              className: \"form-control\",\n              value: surveyData.title,\n              onChange: handleSurveyChange,\n              placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u043E\\u043F\\u0440\\u043E\\u0441\\u043D\\u0438\\u043A\\u0430\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 753,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 751,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"description\",\n              children: \"\\u041E\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 766,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              id: \"description\",\n              name: \"description\",\n              className: \"form-control\",\n              value: surveyData.description,\n              onChange: handleSurveyChange,\n              placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043E\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435 \\u043E\\u043F\\u0440\\u043E\\u0441\\u043D\\u0438\\u043A\\u0430\",\n              rows: \"3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 767,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 765,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group half-width\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"startDate\",\n                children: \"\\u0414\\u0430\\u0442\\u0430 \\u043D\\u0430\\u0447\\u0430\\u043B\\u0430:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 780,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"date\",\n                id: \"startDate\",\n                name: \"startDate\",\n                className: \"form-control\",\n                value: surveyData.startDate,\n                onChange: handleSurveyChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 781,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 779,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group half-width\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"endDate\",\n                children: \"\\u0414\\u0430\\u0442\\u0430 \\u043E\\u043A\\u043E\\u043D\\u0447\\u0430\\u043D\\u0438\\u044F:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 792,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"date\",\n                id: \"endDate\",\n                name: \"endDate\",\n                className: \"form-control\",\n                value: surveyData.endDate,\n                onChange: handleSurveyChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 793,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 791,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 778,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"status\",\n              children: \"\\u0421\\u0442\\u0430\\u0442\\u0443\\u0441:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 805,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"status\",\n              name: \"status\",\n              className: \"form-select\",\n              value: surveyData.status,\n              onChange: handleSurveyChange,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"DRAFT\",\n                children: \"\\u0427\\u0435\\u0440\\u043D\\u043E\\u0432\\u0438\\u043A\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 813,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"ACTIVE\",\n                children: \"\\u0410\\u043A\\u0442\\u0438\\u0432\\u043D\\u044B\\u0439\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 814,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"COMPLETED\",\n                children: \"\\u0417\\u0430\\u0432\\u0435\\u0440\\u0448\\u0435\\u043D\\u043D\\u044B\\u0439\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 815,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 806,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 804,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 749,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"\\u0412\\u043E\\u043F\\u0440\\u043E\\u0441\\u044B \\u043E\\u043F\\u0440\\u043E\\u0441\\u043D\\u0438\\u043A\\u0430\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 821,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"info-text\",\n            children: \"\\u041F\\u0435\\u0440\\u0432\\u044B\\u0435 \\u0442\\u0440\\u0438 \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\\u0430 \\u044F\\u0432\\u043B\\u044F\\u044E\\u0442\\u0441\\u044F \\u043E\\u0431\\u044F\\u0437\\u0430\\u0442\\u0435\\u043B\\u044C\\u043D\\u044B\\u043C\\u0438 \\u0438 \\u043F\\u0440\\u0438\\u0441\\u0443\\u0442\\u0441\\u0442\\u0432\\u0443\\u044E\\u0442 \\u0432\\u043E \\u0432\\u0441\\u0435\\u0445 \\u043E\\u043F\\u0440\\u043E\\u0441\\u043D\\u0438\\u043A\\u0430\\u0445.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 822,\n            columnNumber: 15\n          }, this), surveyData.questions.map((question, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"question-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"question-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: [\"\\u0412\\u043E\\u043F\\u0440\\u043E\\u0441 \", index + 1]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 830,\n                columnNumber: 21\n              }, this), index >= 3 && /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"delete-button\",\n                onClick: () => removeQuestion(index),\n                children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 832,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 829,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: `question-${index}`,\n                children: \"\\u0422\\u0435\\u043A\\u0441\\u0442 \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\\u0430:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 843,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: `question-${index}`,\n                name: \"text\",\n                className: \"form-control\",\n                value: question.text,\n                onChange: e => handleQuestionChange(e, index),\n                placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0442\\u0435\\u043A\\u0441\\u0442 \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\\u0430\",\n                disabled: index < 3 // Первые три вопроса нельзя изменять\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 844,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 842,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group half-width\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: `type-${index}`,\n                  children: \"\\u0422\\u0438\\u043F \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\\u0430:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 858,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                  id: `type-${index}`,\n                  name: \"type\",\n                  className: \"form-select\",\n                  value: question.type,\n                  onChange: e => handleQuestionChange(e, index),\n                  disabled: index < 3,\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"single_choice\",\n                    children: \"\\u041E\\u0434\\u0438\\u043D \\u0432\\u0430\\u0440\\u0438\\u0430\\u043D\\u0442 \\u043E\\u0442\\u0432\\u0435\\u0442\\u0430\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 867,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"multiple_choice\",\n                    children: \"\\u041D\\u0435\\u0441\\u043A\\u043E\\u043B\\u044C\\u043A\\u043E \\u0432\\u0430\\u0440\\u0438\\u0430\\u043D\\u0442\\u043E\\u0432 \\u043E\\u0442\\u0432\\u0435\\u0442\\u0430\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 870,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"text\",\n                    children: \"\\u0422\\u0435\\u043A\\u0441\\u0442\\u043E\\u0432\\u044B\\u0439 \\u043E\\u0442\\u0432\\u0435\\u0442\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 873,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"rating\",\n                    children: \"\\u041E\\u0446\\u0435\\u043D\\u043A\\u0430\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 874,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 859,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 857,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group half-width\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: `category-${index}`,\n                  children: \"\\u041A\\u0430\\u0442\\u0435\\u0433\\u043E\\u0440\\u0438\\u044F:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 879,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                  id: `category-${index}`,\n                  name: \"category\",\n                  className: \"form-select\",\n                  value: question.category,\n                  onChange: e => handleQuestionChange(e, index),\n                  disabled: index < 3,\n                  children: categories.map((category, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: category,\n                    children: category\n                  }, i, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 889,\n                    columnNumber: 27\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 880,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 878,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 856,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group checkbox-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                id: `required-${index}`,\n                checked: question.required,\n                onChange: () => handleRequiredChange(index),\n                disabled: index < 3\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 898,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: `required-${index}`,\n                children: \"\\u041E\\u0431\\u044F\\u0437\\u0430\\u0442\\u0435\\u043B\\u044C\\u043D\\u044B\\u0439 \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 905,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 897,\n              columnNumber: 19\n            }, this), (question.type === \"single_choice\" || question.type === \"multiple_choice\") && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"options-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"\\u0412\\u0430\\u0440\\u0438\\u0430\\u043D\\u0442\\u044B \\u043E\\u0442\\u0432\\u0435\\u0442\\u043E\\u0432:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 913,\n                columnNumber: 23\n              }, this), question.options.map((option, optionIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"option-row\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  className: \"form-control\",\n                  value: option,\n                  onChange: e => handleOptionChange(index, optionIndex, e.target.value),\n                  placeholder: `Вариант ${optionIndex + 1}`,\n                  disabled: index < 3\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 916,\n                  columnNumber: 27\n                }, this), question.options.length > 1 && index >= 3 && /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: \"delete-option-button\",\n                  onClick: () => removeOption(index, optionIndex),\n                  children: \"\\u2715\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 931,\n                  columnNumber: 29\n                }, this)]\n              }, optionIndex, true, {\n                fileName: _jsxFileName,\n                lineNumber: 915,\n                columnNumber: 25\n              }, this)), index >= 3 && /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"add-option-button\",\n                onClick: () => addOption(index),\n                children: \"+ \\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0432\\u0430\\u0440\\u0438\\u0430\\u043D\\u0442\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 942,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 912,\n              columnNumber: 21\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 828,\n            columnNumber: 17\n          }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"add-question-form\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u043D\\u043E\\u0432\\u044B\\u0439 \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 956,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"newQuestionText\",\n                children: \"\\u0422\\u0435\\u043A\\u0441\\u0442 \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\\u0430:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 959,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"newQuestionText\",\n                name: \"text\",\n                className: \"form-control\",\n                value: newQuestion.text,\n                onChange: handleNewQuestionChange,\n                placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0442\\u0435\\u043A\\u0441\\u0442 \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\\u0430\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 960,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 958,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group half-width\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"newQuestionType\",\n                  children: \"\\u0422\\u0438\\u043F \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\\u0430:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 973,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                  id: \"newQuestionType\",\n                  name: \"type\",\n                  className: \"form-select\",\n                  value: newQuestion.type,\n                  onChange: handleNewQuestionChange,\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"single_choice\",\n                    children: \"\\u041E\\u0434\\u0438\\u043D \\u0432\\u0430\\u0440\\u0438\\u0430\\u043D\\u0442 \\u043E\\u0442\\u0432\\u0435\\u0442\\u0430\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 981,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"multiple_choice\",\n                    children: \"\\u041D\\u0435\\u0441\\u043A\\u043E\\u043B\\u044C\\u043A\\u043E \\u0432\\u0430\\u0440\\u0438\\u0430\\u043D\\u0442\\u043E\\u0432 \\u043E\\u0442\\u0432\\u0435\\u0442\\u0430\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 982,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"text\",\n                    children: \"\\u0422\\u0435\\u043A\\u0441\\u0442\\u043E\\u0432\\u044B\\u0439 \\u043E\\u0442\\u0432\\u0435\\u0442\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 985,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"rating\",\n                    children: \"\\u041E\\u0446\\u0435\\u043D\\u043A\\u0430\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 986,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 974,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 972,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group half-width\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"newQuestionCategory\",\n                  children: \"\\u041A\\u0430\\u0442\\u0435\\u0433\\u043E\\u0440\\u0438\\u044F:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 991,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                  id: \"newQuestionCategory\",\n                  name: \"category\",\n                  className: \"form-select\",\n                  value: newQuestion.category,\n                  onChange: handleNewQuestionChange,\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u043A\\u0430\\u0442\\u0435\\u0433\\u043E\\u0440\\u0438\\u044E\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 999,\n                    columnNumber: 23\n                  }, this), categories.map((category, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: category,\n                    children: category\n                  }, i, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1001,\n                    columnNumber: 25\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 992,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 990,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 971,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group checkbox-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                id: \"newQuestionRequired\",\n                name: \"required\",\n                checked: newQuestion.required,\n                onChange: () => setNewQuestion({\n                  ...newQuestion,\n                  required: !newQuestion.required\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1010,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"newQuestionRequired\",\n                children: \"\\u041E\\u0431\\u044F\\u0437\\u0430\\u0442\\u0435\\u043B\\u044C\\u043D\\u044B\\u0439 \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1022,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1009,\n              columnNumber: 17\n            }, this), (newQuestion.type === \"single_choice\" || newQuestion.type === \"multiple_choice\") && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"options-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"\\u0412\\u0430\\u0440\\u0438\\u0430\\u043D\\u0442\\u044B \\u043E\\u0442\\u0432\\u0435\\u0442\\u043E\\u0432:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1030,\n                columnNumber: 21\n              }, this), newQuestion.options.map((option, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"option-row\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  className: \"form-control\",\n                  value: option,\n                  onChange: e => handleNewOptionChange(index, e.target.value),\n                  placeholder: `Вариант ${index + 1}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1033,\n                  columnNumber: 25\n                }, this), newQuestion.options.length > 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: \"delete-option-button\",\n                  onClick: () => removeNewOption(index),\n                  children: \"\\u2715\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1043,\n                  columnNumber: 27\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1032,\n                columnNumber: 23\n              }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"add-option-button\",\n                onClick: addNewOption,\n                children: \"+ \\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0432\\u0430\\u0440\\u0438\\u0430\\u043D\\u0442\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1053,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1029,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"add-button\",\n              onClick: addNewQuestion,\n              style: {\n                marginTop: \"10px\"\n              },\n              children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1063,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 955,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"add-category-form\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u043D\\u043E\\u0432\\u0443\\u044E \\u043A\\u0430\\u0442\\u0435\\u0433\\u043E\\u0440\\u0438\\u044E\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1074,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  className: \"form-control\",\n                  value: newCategory,\n                  onChange: e => setNewCategory(e.target.value),\n                  placeholder: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u043D\\u043E\\u0432\\u043E\\u0439 \\u043A\\u0430\\u0442\\u0435\\u0433\\u043E\\u0440\\u0438\\u0438\",\n                  style: {\n                    // marginBottom: \"10px\",\n                    width: \"100%\"\n                    // minWidth: \"300px\",\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1077,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1076,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"add-button\",\n                onClick: addCategory,\n                style: {\n                  marginBottom: \"10px\"\n                },\n                children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u043A\\u0430\\u0442\\u0435\\u0433\\u043E\\u0440\\u0438\\u044E\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1090,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1075,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1073,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 820,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"primary-button\",\n            onClick: saveSurvey,\n            disabled: isLoading,\n            children: isLoading ? \"Сохранение...\" : \"Сохранить опросник\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1103,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"secondary-button\",\n            onClick: cancelSurveyCreation,\n            disabled: isLoading,\n            children: \"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1111,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1102,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 739,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 605,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 596,\n    columnNumber: 5\n  }, this);\n};\n_s(DashboardPage, \"3Q93RowxUVE5iSP02y0nFLIe6R4=\", false, function () {\n  return [useNavigate];\n});\n_c = DashboardPage;\nexport default DashboardPage;\nvar _c;\n$RefreshReg$(_c, \"DashboardPage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","authService","surveyService","Sidebar","jsxDEV","_jsxDEV","DashboardPage","_s","navigate","user","setUser","showSurveyForm","setShowSurveyForm","surveyData","setSurveyData","title","description","status","startDate","endDate","questions","text","type","required","category","options","newQuestion","setNewQuestion","categories","setCategories","newCategory","setNewCategory","isLoading","setIsLoading","errorMessage","setErrorMessage","successMessage","setSuccessMessage","surveys","setSurveys","surveysFetching","setSurveysFetching","surveysError","setSurveysError","currentUser","getCurrentUser","fetchSurveys","response","getAllSurveys","console","log","content","Array","isArray","length","error","handleLogout","logout","handleCreateSurvey","handleSurveyChange","e","name","value","target","handleQuestionChange","index","updatedQuestions","handleOptionChange","questionIndex","optionIndex","addOption","push","removeOption","splice","handleRequiredChange","handleNewQuestionChange","handleNewOptionChange","updatedOptions","addNewOption","removeNewOption","addNewQuestion","trim","alert","removeQuestion","addCategory","saveSurvey","serverData","map","question","orderNumber","toUpperCase","successMsg","id","updateSurvey","createSurvey","setTimeout","errorMsg","_error$response$data","data","message","statusText","request","cancelSurveyCreation","window","confirm","handleEditSurvey","surveyDetails","getSurveyById","transformedQuestions","toLowerCase","handleDeleteSurvey","deleteSurvey","_error$response$data2","handleChangeSurveyStatus","newStatus","serverStatus","statusDisplayName","changeSurveyStatus","_error$response$data3","getStatusColor","getStatusDisplayText","formatDate","dateString","date","Date","toLocaleDateString","children","fileName","_jsxFileName","lineNumber","columnNumber","className","username","onClick","survey","style","backgroundColor","htmlFor","onChange","placeholder","rows","disabled","i","checked","option","marginTop","width","marginBottom","_c","$RefreshReg$"],"sources":["/Users/shirokiy/Desktop/Repositories/Дипломы/ClientExp/client_exp-frontend/src/pages/Dashboard/DashboardPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport { useNavigate } from \"react-router-dom\"\nimport { authService } from \"../../api/auth\"\nimport { surveyService } from \"../../api/survey\"\nimport Sidebar from \"../../components/common/Sidebar\"\nimport \"../../components/common/AuthStyles.css\"\nimport \"./DashboardStyles.css\"\n\nconst DashboardPage = () => {\n  const navigate = useNavigate()\n  const [user, setUser] = useState(null)\n  const [showSurveyForm, setShowSurveyForm] = useState(false)\n  const [surveyData, setSurveyData] = useState({\n    title: \"\",\n    description: \"\",\n    status: \"DRAFT\",\n    startDate: \"\",\n    endDate: \"\",\n    questions: [\n      {\n        text: \"Укажите ваш возраст\",\n        type: \"single_choice\",\n        required: true,\n        category: \"Демографическая информация\",\n        options: [\n          \"До 18 лет\",\n          \"18–25 лет\",\n          \"26–35 лет\",\n          \"36–45 лет\",\n          \"46–60 лет\",\n          \"60+ лет\",\n        ],\n      },\n      {\n        text: \"Ваш пол\",\n        type: \"single_choice\",\n        required: true,\n        category: \"Демографическая информация\",\n        options: [\"Мужской\", \"Женский\"],\n      },\n      {\n        text: \"Ваша профессия или сфера деятельности\",\n        type: \"single_choice\",\n        required: false,\n        category: \"Демографическая информация\",\n        options: [\n          \"Студент\",\n          \"Фрилансер\",\n          \"Офисный работник\",\n          \"Руководитель/владелец бизнеса\",\n          \"Другое\",\n        ],\n      },\n    ],\n  })\n  const [newQuestion, setNewQuestion] = useState({\n    text: \"\",\n    type: \"single_choice\",\n    required: false,\n    category: \"\",\n    options: [\"\"],\n  })\n  const [categories, setCategories] = useState([\n    \"Демографическая информация\",\n    \"Географическая сегментация\",\n    \"Поведенческая сегментация\",\n    \"Сегментация по удовлетворенности\",\n    \"Сегментация по клиентскому пути\",\n    \"Сегментация по мотивации и ценности клиента\",\n  ])\n  const [newCategory, setNewCategory] = useState(\"\")\n  const [isLoading, setIsLoading] = useState(false)\n  const [errorMessage, setErrorMessage] = useState(\"\")\n  const [successMessage, setSuccessMessage] = useState(\"\")\n  const [surveys, setSurveys] = useState([])\n  const [surveysFetching, setSurveysFetching] = useState(false)\n  const [surveysError, setSurveysError] = useState(\"\")\n\n  useEffect(() => {\n    const currentUser = authService.getCurrentUser()\n    if (currentUser) {\n      setUser(currentUser)\n      fetchSurveys()\n    } else {\n      navigate(\"/login\")\n    }\n  }, [navigate])\n\n  const fetchSurveys = async () => {\n    setSurveysFetching(true)\n    setSurveysError(\"\")\n    try {\n      const response = await surveyService.getAllSurveys()\n      console.log(\"Получены данные:\", response)\n\n      // Проверяем, есть ли поле content в ответе\n      if (response && response.content && Array.isArray(response.content)) {\n        console.log(\n          `Получено ${response.content.length} опросников из поля content`\n        )\n        setSurveys(response.content)\n      } else if (Array.isArray(response)) {\n        // На случай, если API вернет просто массив\n        console.log(`Получено ${response.length} опросников напрямую`)\n        setSurveys(response)\n      } else {\n        console.log(\n          \"Ответ не содержит опросников в ожидаемом формате:\",\n          response\n        )\n        setSurveys([])\n      }\n    } catch (error) {\n      console.error(\"Ошибка при получении опросников:\", error)\n      setSurveysError(\n        \"Не удалось загрузить опросники. Пожалуйста, попробуйте позже.\"\n      )\n      setSurveys([])\n    } finally {\n      setSurveysFetching(false)\n    }\n  }\n\n  const handleLogout = () => {\n    authService.logout()\n    navigate(\"/login\")\n  }\n\n  const handleCreateSurvey = () => {\n    // Сбрасываем форму на значения по умолчанию\n    setSurveyData({\n      title: \"\",\n      description: \"\",\n      status: \"DRAFT\",\n      startDate: \"\",\n      endDate: \"\",\n      questions: [\n        {\n          text: \"Укажите ваш возраст\",\n          type: \"single_choice\",\n          required: true,\n          category: \"Демографическая информация\",\n          options: [\n            \"До 18 лет\",\n            \"18–25 лет\",\n            \"26–35 лет\",\n            \"36–45 лет\",\n            \"46–60 лет\",\n            \"60+ лет\",\n          ],\n        },\n        {\n          text: \"Ваш пол\",\n          type: \"single_choice\",\n          required: true,\n          category: \"Демографическая информация\",\n          options: [\"Мужской\", \"Женский\"],\n        },\n        {\n          text: \"Ваша профессия или сфера деятельности\",\n          type: \"single_choice\",\n          required: false,\n          category: \"Демографическая информация\",\n          options: [\n            \"Студент\",\n            \"Фрилансер\",\n            \"Офисный работник\",\n            \"Руководитель/владелец бизнеса\",\n            \"Другое\",\n          ],\n        },\n      ],\n    })\n\n    // Очищаем сообщения об ошибках и успехе\n    setErrorMessage(\"\")\n    setSuccessMessage(\"\")\n\n    // Показываем форму создания\n    setShowSurveyForm(true)\n  }\n\n  const handleSurveyChange = e => {\n    const { name, value } = e.target\n    setSurveyData({\n      ...surveyData,\n      [name]: value,\n    })\n  }\n\n  const handleQuestionChange = (e, index) => {\n    const { name, value } = e.target\n    const updatedQuestions = [...surveyData.questions]\n    updatedQuestions[index] = {\n      ...updatedQuestions[index],\n      [name]: value,\n    }\n    setSurveyData({\n      ...surveyData,\n      questions: updatedQuestions,\n    })\n  }\n\n  const handleOptionChange = (questionIndex, optionIndex, value) => {\n    const updatedQuestions = [...surveyData.questions]\n    updatedQuestions[questionIndex].options[optionIndex] = value\n    setSurveyData({\n      ...surveyData,\n      questions: updatedQuestions,\n    })\n  }\n\n  const addOption = questionIndex => {\n    const updatedQuestions = [...surveyData.questions]\n    updatedQuestions[questionIndex].options.push(\"\")\n    setSurveyData({\n      ...surveyData,\n      questions: updatedQuestions,\n    })\n  }\n\n  const removeOption = (questionIndex, optionIndex) => {\n    const updatedQuestions = [...surveyData.questions]\n    updatedQuestions[questionIndex].options.splice(optionIndex, 1)\n    setSurveyData({\n      ...surveyData,\n      questions: updatedQuestions,\n    })\n  }\n\n  const handleRequiredChange = index => {\n    const updatedQuestions = [...surveyData.questions]\n    updatedQuestions[index].required = !updatedQuestions[index].required\n    setSurveyData({\n      ...surveyData,\n      questions: updatedQuestions,\n    })\n  }\n\n  const handleNewQuestionChange = e => {\n    const { name, value } = e.target\n    setNewQuestion({\n      ...newQuestion,\n      [name]: value,\n    })\n  }\n\n  const handleNewOptionChange = (index, value) => {\n    const updatedOptions = [...newQuestion.options]\n    updatedOptions[index] = value\n    setNewQuestion({\n      ...newQuestion,\n      options: updatedOptions,\n    })\n  }\n\n  const addNewOption = () => {\n    setNewQuestion({\n      ...newQuestion,\n      options: [...newQuestion.options, \"\"],\n    })\n  }\n\n  const removeNewOption = index => {\n    const updatedOptions = [...newQuestion.options]\n    updatedOptions.splice(index, 1)\n    setNewQuestion({\n      ...newQuestion,\n      options: updatedOptions,\n    })\n  }\n\n  const addNewQuestion = () => {\n    if (newQuestion.text.trim() === \"\") {\n      alert(\"Вопрос не может быть пустым\")\n      return\n    }\n\n    setSurveyData({\n      ...surveyData,\n      questions: [...surveyData.questions, { ...newQuestion }],\n    })\n\n    // Сбросить форму нового вопроса\n    setNewQuestion({\n      text: \"\",\n      type: \"single_choice\",\n      required: false,\n      category: newQuestion.category,\n      options: [\"\"],\n    })\n  }\n\n  const removeQuestion = index => {\n    if (index < 3) {\n      alert(\"Первые три вопроса обязательны и не могут быть удалены\")\n      return\n    }\n\n    const updatedQuestions = [...surveyData.questions]\n    updatedQuestions.splice(index, 1)\n    setSurveyData({\n      ...surveyData,\n      questions: updatedQuestions,\n    })\n  }\n\n  const addCategory = () => {\n    if (newCategory.trim() === \"\") return\n\n    setCategories([...categories, newCategory])\n    setNewCategory(\"\")\n  }\n\n  const saveSurvey = async () => {\n    // Валидация данных опросника перед отправкой\n    if (!surveyData.title.trim()) {\n      setErrorMessage(\"Необходимо указать название опросника\")\n      return\n    }\n\n    if (surveyData.questions.length < 3) {\n      setErrorMessage(\"Опросник должен содержать минимум 3 вопроса\")\n      return\n    }\n\n    // Сброс сообщений об ошибках/успехе\n    setErrorMessage(\"\")\n    setSuccessMessage(\"\")\n    setIsLoading(true)\n\n    try {\n      // Преобразуем данные в формат, ожидаемый сервером\n      const serverData = {\n        ...surveyData,\n        // Преобразуем статус к верхнему регистру, если он в верблюжьем регистре\n        status:\n          surveyData.status === \"черновик\"\n            ? \"DRAFT\"\n            : surveyData.status === \"активный\"\n            ? \"ACTIVE\"\n            : surveyData.status === \"завершенный\"\n            ? \"COMPLETED\"\n            : surveyData.status,\n        // Добавляем порядковые номера вопросам\n        questions: surveyData.questions.map((question, index) => ({\n          ...question,\n          orderNumber: index + 1,\n          // Преобразуем тип вопроса к формату сервера\n          type:\n            question.type === \"single_choice\"\n              ? \"SINGLE_CHOICE\"\n              : question.type === \"multiple_choice\"\n              ? \"MULTIPLE_CHOICE\"\n              : question.type === \"text\"\n              ? \"TEXT\"\n              : question.type === \"rating\"\n              ? \"RATING\"\n              : question.type.toUpperCase(),\n        })),\n      }\n\n      console.log(\"Отправка данных на сервер:\", serverData)\n\n      let response\n      let successMsg\n\n      // Если у опросника есть id, то это обновление, иначе - создание\n      if (surveyData.id) {\n        // Обновление существующего опросника\n        response = await surveyService.updateSurvey(surveyData.id, serverData)\n        successMsg = \"Опросник успешно обновлен!\"\n      } else {\n        // Создание нового опросника\n        response = await surveyService.createSurvey(serverData)\n        successMsg = \"Опросник успешно создан!\"\n      }\n\n      console.log(\"Опросник успешно сохранен:\", response)\n      setSuccessMessage(successMsg)\n\n      // Обновляем список опросников\n      fetchSurveys()\n\n      // Сброс формы и возврат к главному экрану через 2 секунды\n      setTimeout(() => {\n        setShowSurveyForm(false)\n        setSuccessMessage(\"\")\n      }, 2000)\n    } catch (error) {\n      console.error(\"Ошибка при сохранении опросника:\", error)\n\n      let errorMsg =\n        \"Произошла ошибка при сохранении опросника. Пожалуйста, попробуйте позже.\"\n\n      // Обработка различных типов ошибок\n      if (error.response) {\n        // Ошибка от сервера с кодом статуса\n        errorMsg =\n          error.response.data?.message ||\n          `Ошибка сервера: ${error.response.status} - ${error.response.statusText}`\n      } else if (error.request) {\n        // Ошибка сети - запрос был отправлен, но ответ не получен\n        errorMsg = \"Сервер не отвечает. Проверьте подключение к Интернету.\"\n      } else {\n        // Ошибка при настройке запроса\n        errorMsg = `Ошибка при создании запроса: ${error.message}`\n      }\n\n      setErrorMessage(errorMsg)\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  const cancelSurveyCreation = () => {\n    if (\n      window.confirm(\n        \"Вы уверены, что хотите отменить создание опросника? Все введенные данные будут потеряны.\"\n      )\n    ) {\n      setShowSurveyForm(false)\n    }\n  }\n\n  const handleEditSurvey = async id => {\n    try {\n      setIsLoading(true)\n      // Получаем детальную информацию об опроснике с сервера\n      const surveyDetails = await surveyService.getSurveyById(id)\n      console.log(\n        \"Получены данные опросника для редактирования:\",\n        surveyDetails\n      )\n\n      // Преобразуем вопросы из формата сервера в формат интерфейса\n      const transformedQuestions = surveyDetails.questions.map(question => ({\n        ...question,\n        // Преобразуем тип вопроса из формата сервера в формат интерфейса\n        type:\n          question.type === \"SINGLE_CHOICE\"\n            ? \"single_choice\"\n            : question.type === \"MULTIPLE_CHOICE\"\n            ? \"multiple_choice\"\n            : question.type === \"TEXT\"\n            ? \"text\"\n            : question.type === \"RATING\"\n            ? \"rating\"\n            : question.type.toLowerCase(),\n      }))\n\n      // Устанавливаем данные опросника в состояние формы\n      setSurveyData({\n        ...surveyDetails,\n        questions: transformedQuestions,\n      })\n\n      // Показываем форму для редактирования\n      setShowSurveyForm(true)\n      setIsLoading(false)\n    } catch (error) {\n      console.error(\"Ошибка при получении данных опросника:\", error)\n      alert(\n        \"Не удалось загрузить опросник для редактирования. Пожалуйста, попробуйте позже.\"\n      )\n      setIsLoading(false)\n    }\n  }\n\n  const handleDeleteSurvey = async id => {\n    if (window.confirm(\"Вы уверены, что хотите удалить этот опросник?\")) {\n      try {\n        setIsLoading(true)\n\n        await surveyService.deleteSurvey(id)\n\n        // Показываем временное уведомление об успехе\n        setSuccessMessage(\"Опросник успешно удален\")\n        setTimeout(() => setSuccessMessage(\"\"), 3000)\n\n        // Обновить список опросников после удаления\n        fetchSurveys()\n        setIsLoading(false)\n      } catch (error) {\n        console.error(\"Ошибка при удалении опросника:\", error)\n\n        let errorMsg =\n          \"Не удалось удалить опросник. Пожалуйста, попробуйте позже.\"\n\n        // Обработка различных типов ошибок\n        if (error.response) {\n          errorMsg =\n            error.response.data?.message ||\n            `Ошибка сервера: ${error.response.status} - ${error.response.statusText}`\n        }\n\n        setErrorMessage(errorMsg)\n        setTimeout(() => setErrorMessage(\"\"), 3000)\n        setIsLoading(false)\n      }\n    }\n  }\n\n  const handleChangeSurveyStatus = async (id, newStatus) => {\n    try {\n      setIsLoading(true)\n\n      // Преобразуем статус в формат сервера\n      const serverStatus =\n        newStatus === \"активный\"\n          ? \"ACTIVE\"\n          : newStatus === \"завершенный\"\n          ? \"COMPLETED\"\n          : newStatus === \"черновик\"\n          ? \"DRAFT\"\n          : newStatus\n\n      // Получаем русское название статуса для уведомления\n      const statusDisplayName =\n        serverStatus === \"ACTIVE\"\n          ? \"активный\"\n          : serverStatus === \"COMPLETED\"\n          ? \"завершенный\"\n          : serverStatus === \"DRAFT\"\n          ? \"черновик\"\n          : serverStatus\n\n      await surveyService.changeSurveyStatus(id, serverStatus)\n\n      // Показываем временное уведомление об успехе\n      setSuccessMessage(`Статус опросника изменен на \"${statusDisplayName}\"`)\n      setTimeout(() => setSuccessMessage(\"\"), 3000)\n\n      // Обновить список опросников после изменения статуса\n      fetchSurveys()\n      setIsLoading(false)\n    } catch (error) {\n      console.error(\"Ошибка при изменении статуса опросника:\", error)\n\n      let errorMsg =\n        \"Не удалось изменить статус опросника. Пожалуйста, попробуйте позже.\"\n\n      // Обработка различных типов ошибок\n      if (error.response) {\n        errorMsg =\n          error.response.data?.message ||\n          `Ошибка сервера: ${error.response.status} - ${error.response.statusText}`\n      }\n\n      setErrorMessage(errorMsg)\n      setTimeout(() => setErrorMessage(\"\"), 3000)\n      setIsLoading(false)\n    }\n  }\n\n  const getStatusColor = status => {\n    switch (status) {\n      case \"черновик\":\n      case \"DRAFT\":\n        return \"#6c757d\" // серый\n      case \"активный\":\n      case \"ACTIVE\":\n        return \"#28a745\" // зеленый\n      case \"завершенный\":\n      case \"COMPLETED\":\n        return \"#dc3545\" // красный\n      default:\n        return \"#6c757d\"\n    }\n  }\n\n  const getStatusDisplayText = status => {\n    switch (status) {\n      case \"DRAFT\":\n        return \"Черновик\"\n      case \"ACTIVE\":\n        return \"Активный\"\n      case \"COMPLETED\":\n        return \"Завершенный\"\n      default:\n        return status\n    }\n  }\n\n  const formatDate = dateString => {\n    if (!dateString) return \"—\"\n    const date = new Date(dateString)\n    return date.toLocaleDateString(\"ru-RU\")\n  }\n\n  if (!user) {\n    return <div>Загрузка...</div>\n  }\n\n  return (\n    <div className=\"dashboard-container\">\n      <Sidebar user={user} />\n      <header className=\"dashboard-header\">\n        <h1>Панель управления клиентским опытом</h1>\n        <div className=\"user-info\">\n          <span>Пользователь: {user.username}</span>\n        </div>\n      </header>\n\n      <main className=\"dashboard-content\">\n        {!showSurveyForm ? (\n          <div className=\"dashboard-actions\">\n            <h2>Добро пожаловать, {user.username}!</h2>\n            <p>\n              Управляйте клиентским опытом с помощью создания и анализа\n              опросников.\n            </p>\n\n            {errorMessage && (\n              <div className=\"error-message\">{errorMessage}</div>\n            )}\n            {successMessage && (\n              <div className=\"success-message\">{successMessage}</div>\n            )}\n\n            <div className=\"action-buttons\">\n              <button className=\"primary-button\" onClick={handleCreateSurvey}>\n                Создать новый опросник\n              </button>\n            </div>\n\n            <div className=\"surveys-list-section\">\n              <h3>Мои опросники</h3>\n\n              {surveysFetching && (\n                <div className=\"loading-indicator\">Загрузка опросников...</div>\n              )}\n              {surveysError && (\n                <div className=\"error-message\">{surveysError}</div>\n              )}\n\n              {!surveysFetching && !surveysError && surveys.length === 0 && (\n                <div className=\"empty-state\">\n                  <p>У вас пока нет созданных опросников.</p>\n                </div>\n              )}\n\n              {!surveysFetching && !surveysError && surveys.length > 0 && (\n                <div className=\"surveys-table-container\">\n                  <table className=\"surveys-table\">\n                    <thead>\n                      <tr>\n                        <th>Название</th>\n                        <th>Статус</th>\n                        <th>Дата начала</th>\n                        <th>Дата окончания</th>\n                        <th>Действия</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {surveys.map(survey => (\n                        <tr key={survey.id}>\n                          <td>{survey.title}</td>\n                          <td>\n                            <span\n                              className=\"status-badge\"\n                              style={{\n                                backgroundColor: getStatusColor(survey.status),\n                              }}\n                            >\n                              {getStatusDisplayText(survey.status)}\n                            </span>\n                          </td>\n                          <td>{formatDate(survey.startDate)}</td>\n                          <td>{formatDate(survey.endDate)}</td>\n                          <td>\n                            <div className=\"survey-actions\">\n                              <button\n                                className=\"action-button edit-button\"\n                                onClick={() => handleEditSurvey(survey.id)}\n                                title=\"Редактировать\"\n                              >\n                                ✏️\n                              </button>\n\n                              <button\n                                className=\"action-button preview-button\"\n                                onClick={() => navigate(`/survey/${survey.id}`)}\n                                title=\"Предпросмотр\"\n                              >\n                                👁️\n                              </button>\n\n                              {survey.status !== \"активный\" &&\n                                survey.status !== \"ACTIVE\" && (\n                                  <button\n                                    className=\"action-button activate-button\"\n                                    onClick={() =>\n                                      handleChangeSurveyStatus(\n                                        survey.id,\n                                        \"активный\"\n                                      )\n                                    }\n                                    title=\"Активировать\"\n                                  >\n                                    ▶️\n                                  </button>\n                                )}\n\n                              {(survey.status === \"активный\" ||\n                                survey.status === \"ACTIVE\") && (\n                                <button\n                                  className=\"action-button complete-button\"\n                                  onClick={() =>\n                                    handleChangeSurveyStatus(\n                                      survey.id,\n                                      \"завершенный\"\n                                    )\n                                  }\n                                  title=\"Завершить\"\n                                >\n                                  ⏹️\n                                </button>\n                              )}\n\n                              <button\n                                className=\"action-button delete-button\"\n                                onClick={() => handleDeleteSurvey(survey.id)}\n                                title=\"Удалить\"\n                              >\n                                🗑️\n                              </button>\n                            </div>\n                          </td>\n                        </tr>\n                      ))}\n                    </tbody>\n                  </table>\n                </div>\n              )}\n            </div>\n          </div>\n        ) : (\n          <div className=\"survey-form\">\n            <h2>Создание нового опросника</h2>\n\n            {errorMessage && (\n              <div className=\"error-message\">{errorMessage}</div>\n            )}\n            {successMessage && (\n              <div className=\"success-message\">{successMessage}</div>\n            )}\n\n            <div className=\"form-section\">\n              <h3>Основная информация</h3>\n              <div className=\"form-group\">\n                <label htmlFor=\"title\">Название опросника:</label>\n                <input\n                  type=\"text\"\n                  id=\"title\"\n                  name=\"title\"\n                  className=\"form-control\"\n                  value={surveyData.title}\n                  onChange={handleSurveyChange}\n                  placeholder=\"Введите название опросника\"\n                  required\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"description\">Описание:</label>\n                <textarea\n                  id=\"description\"\n                  name=\"description\"\n                  className=\"form-control\"\n                  value={surveyData.description}\n                  onChange={handleSurveyChange}\n                  placeholder=\"Введите описание опросника\"\n                  rows=\"3\"\n                />\n              </div>\n\n              <div className=\"form-row\">\n                <div className=\"form-group half-width\">\n                  <label htmlFor=\"startDate\">Дата начала:</label>\n                  <input\n                    type=\"date\"\n                    id=\"startDate\"\n                    name=\"startDate\"\n                    className=\"form-control\"\n                    value={surveyData.startDate}\n                    onChange={handleSurveyChange}\n                  />\n                </div>\n\n                <div className=\"form-group half-width\">\n                  <label htmlFor=\"endDate\">Дата окончания:</label>\n                  <input\n                    type=\"date\"\n                    id=\"endDate\"\n                    name=\"endDate\"\n                    className=\"form-control\"\n                    value={surveyData.endDate}\n                    onChange={handleSurveyChange}\n                  />\n                </div>\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"status\">Статус:</label>\n                <select\n                  id=\"status\"\n                  name=\"status\"\n                  className=\"form-select\"\n                  value={surveyData.status}\n                  onChange={handleSurveyChange}\n                >\n                  <option value=\"DRAFT\">Черновик</option>\n                  <option value=\"ACTIVE\">Активный</option>\n                  <option value=\"COMPLETED\">Завершенный</option>\n                </select>\n              </div>\n            </div>\n\n            <div className=\"form-section\">\n              <h3>Вопросы опросника</h3>\n              <p className=\"info-text\">\n                Первые три вопроса являются обязательными и присутствуют во всех\n                опросниках.\n              </p>\n\n              {surveyData.questions.map((question, index) => (\n                <div key={index} className=\"question-card\">\n                  <div className=\"question-header\">\n                    <h4>Вопрос {index + 1}</h4>\n                    {index >= 3 && (\n                      <button\n                        type=\"button\"\n                        className=\"delete-button\"\n                        onClick={() => removeQuestion(index)}\n                      >\n                        Удалить\n                      </button>\n                    )}\n                  </div>\n\n                  <div className=\"form-group\">\n                    <label htmlFor={`question-${index}`}>Текст вопроса:</label>\n                    <input\n                      type=\"text\"\n                      id={`question-${index}`}\n                      name=\"text\"\n                      className=\"form-control\"\n                      value={question.text}\n                      onChange={e => handleQuestionChange(e, index)}\n                      placeholder=\"Введите текст вопроса\"\n                      disabled={index < 3} // Первые три вопроса нельзя изменять\n                    />\n                  </div>\n\n                  <div className=\"form-row\">\n                    <div className=\"form-group half-width\">\n                      <label htmlFor={`type-${index}`}>Тип вопроса:</label>\n                      <select\n                        id={`type-${index}`}\n                        name=\"type\"\n                        className=\"form-select\"\n                        value={question.type}\n                        onChange={e => handleQuestionChange(e, index)}\n                        disabled={index < 3}\n                      >\n                        <option value=\"single_choice\">\n                          Один вариант ответа\n                        </option>\n                        <option value=\"multiple_choice\">\n                          Несколько вариантов ответа\n                        </option>\n                        <option value=\"text\">Текстовый ответ</option>\n                        <option value=\"rating\">Оценка</option>\n                      </select>\n                    </div>\n\n                    <div className=\"form-group half-width\">\n                      <label htmlFor={`category-${index}`}>Категория:</label>\n                      <select\n                        id={`category-${index}`}\n                        name=\"category\"\n                        className=\"form-select\"\n                        value={question.category}\n                        onChange={e => handleQuestionChange(e, index)}\n                        disabled={index < 3}\n                      >\n                        {categories.map((category, i) => (\n                          <option key={i} value={category}>\n                            {category}\n                          </option>\n                        ))}\n                      </select>\n                    </div>\n                  </div>\n\n                  <div className=\"form-group checkbox-group\">\n                    <input\n                      type=\"checkbox\"\n                      id={`required-${index}`}\n                      checked={question.required}\n                      onChange={() => handleRequiredChange(index)}\n                      disabled={index < 3}\n                    />\n                    <label htmlFor={`required-${index}`}>\n                      Обязательный вопрос\n                    </label>\n                  </div>\n\n                  {(question.type === \"single_choice\" ||\n                    question.type === \"multiple_choice\") && (\n                    <div className=\"options-container\">\n                      <label>Варианты ответов:</label>\n                      {question.options.map((option, optionIndex) => (\n                        <div key={optionIndex} className=\"option-row\">\n                          <input\n                            type=\"text\"\n                            className=\"form-control\"\n                            value={option}\n                            onChange={e =>\n                              handleOptionChange(\n                                index,\n                                optionIndex,\n                                e.target.value\n                              )\n                            }\n                            placeholder={`Вариант ${optionIndex + 1}`}\n                            disabled={index < 3}\n                          />\n                          {question.options.length > 1 && index >= 3 && (\n                            <button\n                              type=\"button\"\n                              className=\"delete-option-button\"\n                              onClick={() => removeOption(index, optionIndex)}\n                            >\n                              ✕\n                            </button>\n                          )}\n                        </div>\n                      ))}\n                      {index >= 3 && (\n                        <button\n                          type=\"button\"\n                          className=\"add-option-button\"\n                          onClick={() => addOption(index)}\n                        >\n                          + Добавить вариант\n                        </button>\n                      )}\n                    </div>\n                  )}\n                </div>\n              ))}\n\n              <div className=\"add-question-form\">\n                <h4>Добавить новый вопрос</h4>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"newQuestionText\">Текст вопроса:</label>\n                  <input\n                    type=\"text\"\n                    id=\"newQuestionText\"\n                    name=\"text\"\n                    className=\"form-control\"\n                    value={newQuestion.text}\n                    onChange={handleNewQuestionChange}\n                    placeholder=\"Введите текст вопроса\"\n                  />\n                </div>\n\n                <div className=\"form-row\">\n                  <div className=\"form-group half-width\">\n                    <label htmlFor=\"newQuestionType\">Тип вопроса:</label>\n                    <select\n                      id=\"newQuestionType\"\n                      name=\"type\"\n                      className=\"form-select\"\n                      value={newQuestion.type}\n                      onChange={handleNewQuestionChange}\n                    >\n                      <option value=\"single_choice\">Один вариант ответа</option>\n                      <option value=\"multiple_choice\">\n                        Несколько вариантов ответа\n                      </option>\n                      <option value=\"text\">Текстовый ответ</option>\n                      <option value=\"rating\">Оценка</option>\n                    </select>\n                  </div>\n\n                  <div className=\"form-group half-width\">\n                    <label htmlFor=\"newQuestionCategory\">Категория:</label>\n                    <select\n                      id=\"newQuestionCategory\"\n                      name=\"category\"\n                      className=\"form-select\"\n                      value={newQuestion.category}\n                      onChange={handleNewQuestionChange}\n                    >\n                      <option value=\"\">Выберите категорию</option>\n                      {categories.map((category, i) => (\n                        <option key={i} value={category}>\n                          {category}\n                        </option>\n                      ))}\n                    </select>\n                  </div>\n                </div>\n\n                <div className=\"form-group checkbox-group\">\n                  <input\n                    type=\"checkbox\"\n                    id=\"newQuestionRequired\"\n                    name=\"required\"\n                    checked={newQuestion.required}\n                    onChange={() =>\n                      setNewQuestion({\n                        ...newQuestion,\n                        required: !newQuestion.required,\n                      })\n                    }\n                  />\n                  <label htmlFor=\"newQuestionRequired\">\n                    Обязательный вопрос\n                  </label>\n                </div>\n\n                {(newQuestion.type === \"single_choice\" ||\n                  newQuestion.type === \"multiple_choice\") && (\n                  <div className=\"options-container\">\n                    <label>Варианты ответов:</label>\n                    {newQuestion.options.map((option, index) => (\n                      <div key={index} className=\"option-row\">\n                        <input\n                          type=\"text\"\n                          className=\"form-control\"\n                          value={option}\n                          onChange={e =>\n                            handleNewOptionChange(index, e.target.value)\n                          }\n                          placeholder={`Вариант ${index + 1}`}\n                        />\n                        {newQuestion.options.length > 1 && (\n                          <button\n                            type=\"button\"\n                            className=\"delete-option-button\"\n                            onClick={() => removeNewOption(index)}\n                          >\n                            ✕\n                          </button>\n                        )}\n                      </div>\n                    ))}\n                    <button\n                      type=\"button\"\n                      className=\"add-option-button\"\n                      onClick={addNewOption}\n                    >\n                      + Добавить вариант\n                    </button>\n                  </div>\n                )}\n\n                <button\n                  type=\"button\"\n                  className=\"add-button\"\n                  onClick={addNewQuestion}\n                  style={{ marginTop: \"10px\" }}\n                >\n                  Добавить вопрос\n                </button>\n              </div>\n\n              <div className=\"add-category-form\">\n                <h4>Добавить новую категорию</h4>\n                <div className=\"form-row\">\n                  <div className=\"form-group\">\n                    <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      value={newCategory}\n                      onChange={e => setNewCategory(e.target.value)}\n                      placeholder=\"Название новой категории\"\n                      style={{\n                        // marginBottom: \"10px\",\n                        width: \"100%\",\n                        // minWidth: \"300px\",\n                      }}\n                    />\n                  </div>\n                  <button\n                    type=\"button\"\n                    className=\"add-button\"\n                    onClick={addCategory}\n                    style={{ marginBottom: \"10px\" }}\n                  >\n                    Добавить категорию\n                  </button>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"form-actions\">\n              <button\n                type=\"button\"\n                className=\"primary-button\"\n                onClick={saveSurvey}\n                disabled={isLoading}\n              >\n                {isLoading ? \"Сохранение...\" : \"Сохранить опросник\"}\n              </button>\n              <button\n                type=\"button\"\n                className=\"secondary-button\"\n                onClick={cancelSurveyCreation}\n                disabled={isLoading}\n              >\n                Отменить\n              </button>\n            </div>\n          </div>\n        )}\n      </main>\n    </div>\n  )\n}\n\nexport default DashboardPage\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}