{"ast":null,"code":"var _jsxFileName = \"/Users/shirokiy/Desktop/Repositories/\\u0414\\u0438\\u043F\\u043B\\u043E\\u043C\\u044B/ClientExp/client_exp-frontend/src/pages/Dashboard/StatisticsPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport { surveyService } from \"../../api/survey\";\nimport { authService } from \"../../api/auth\";\nimport Sidebar from \"../../components/common/Sidebar\";\nimport \"./DashboardStyles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StatisticsPage = () => {\n  _s();\n  var _responseDetails$resp, _responseDetails$resp2;\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [surveys, setSurveys] = useState([]);\n  const [selectedSurvey, setSelectedSurvey] = useState(null);\n  const [responses, setResponses] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [responseDetails, setResponseDetails] = useState(null);\n  const [user, setUser] = useState(null);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  useEffect(() => {\n    const currentUser = authService.getCurrentUser();\n    if (currentUser) {\n      setUser(currentUser);\n      fetchSurveys();\n    } else {\n      navigate(\"/login\");\n      return;\n    }\n  }, [navigate]);\n  useEffect(() => {\n    // Проверяем наличие параметра survey в URL\n    const params = new URLSearchParams(location.search);\n    const surveyId = params.get(\"survey\");\n    if (surveyId && surveys.length > 0) {\n      const survey = surveys.find(s => s.id === parseInt(surveyId));\n      if (survey) {\n        handleSurveySelect(survey);\n      }\n    }\n  }, [surveys, location.search]);\n  const fetchSurveys = async () => {\n    try {\n      setLoading(true);\n      const response = await surveyService.getAllSurveys();\n      let surveysData = [];\n      if (response && response.content && Array.isArray(response.content)) {\n        surveysData = response.content;\n      } else if (Array.isArray(response)) {\n        surveysData = response;\n      }\n      setSurveys(surveysData);\n      setLoading(false);\n      console.log(\"Опросники:\", surveysData);\n    } catch (error) {\n      console.error(\"Ошибка при получении опросников:\", error);\n      setError(\"Не удалось загрузить опросники. Пожалуйста, попробуйте позже.\");\n      setLoading(false);\n    }\n  };\n  const fetchResponses = async surveyId => {\n    try {\n      setLoading(true);\n      setError(\"\");\n      // Предполагаем, что в API есть метод для получения ответов по ID опросника\n      const response = await surveyService.getSurveyResponses(surveyId);\n      // Убедимся, что responses всегда массив\n      setResponses(Array.isArray(response) ? response : []);\n      console.log(\"Ответы:\", response);\n      setLoading(false);\n    } catch (error) {\n      console.error(\"Ошибка при получении ответов:\", error);\n      setError(\"Не удалось загрузить ответы. Пожалуйста, попробуйте позже.\");\n      setResponses([]);\n      setLoading(false);\n    }\n  };\n  const handleSurveySelect = survey => {\n    setSelectedSurvey(survey);\n    setResponseDetails(null);\n    fetchResponses(survey.id);\n  };\n  const handleResponseSelect = response => {\n    setResponseDetails(response);\n  };\n\n  // Функция для фильтрации ответов по имени респондента\n  const getFilteredResponses = () => {\n    if (!searchTerm.trim()) return responses;\n    return responses.filter(response => {\n      var _response$respondent;\n      const name = ((_response$respondent = response.respondent) === null || _response$respondent === void 0 ? void 0 : _response$respondent.name) || \"\";\n      return name.toLowerCase().includes(searchTerm.toLowerCase());\n    });\n  };\n\n  // Функция для очистки поиска\n  const clearSearch = () => {\n    setSearchTerm(\"\");\n  };\n  const formatDate = dateString => {\n    if (!dateString) return \"—\";\n    const date = new Date(dateString);\n    return date.toLocaleDateString(\"ru-RU\", {\n      day: \"2-digit\",\n      month: \"2-digit\",\n      year: \"numeric\",\n      hour: \"2-digit\",\n      minute: \"2-digit\"\n    });\n  };\n\n  // Функция для группировки вопросов по категориям (сегментациям)\n  const getQuestionsByCategory = () => {\n    if (!selectedSurvey || !selectedSurvey.questions) return {};\n    const categories = {};\n    selectedSurvey.questions.forEach(question => {\n      const category = question.category || \"Без категории\";\n      if (!categories[category]) {\n        categories[category] = [];\n      }\n      categories[category].push(question);\n    });\n    return categories;\n  };\n\n  // Заглушка для отображения статистики по вопросу\n  const renderQuestionStats = questionId => {\n    if (!selectedSurvey || !responses || !Array.isArray(responses) || !responses.length) return null;\n    const question = selectedSurvey.questions.find(q => q.id === questionId);\n    if (!question) return null;\n\n    // Собираем ответы на этот вопрос\n    const answersForQuestion = Array.isArray(responses) ? responses.filter(r => r && r.answers).flatMap(r => r.answers).filter(a => a && a.questionId === questionId) : [];\n    if (!answersForQuestion.length) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-data\",\n        children: \"\\u041D\\u0435\\u0442 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445 \\u0434\\u043B\\u044F \\u0430\\u043D\\u0430\\u043B\\u0438\\u0437\\u0430\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 14\n      }, this);\n    }\n\n    // Для вопросов с вариантами ответа показываем статистику\n    if (question.type === \"SINGLE_CHOICE\" || question.type === \"MULTIPLE_CHOICE\") {\n      // Считаем количество каждого варианта ответа\n      const answerCounts = {};\n      answersForQuestion.forEach(answer => {\n        if (Array.isArray(answer.answer)) {\n          // Для multiple choice\n          answer.answer.forEach(option => {\n            answerCounts[option] = (answerCounts[option] || 0) + 1;\n          });\n        } else if (question.type === \"MULTIPLE_CHOICE\" && answer.answer) {\n          // Если ответ не массив, но существует, и вопрос множественного выбора\n          answerCounts[answer.answer] = (answerCounts[answer.answer] || 0) + 1;\n        } else {\n          // Для single choice\n          answerCounts[answer.answer] = (answerCounts[answer.answer] || 0) + 1;\n        }\n      });\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-stats\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"\\u0421\\u0442\\u0430\\u0442\\u0438\\u0441\\u0442\\u0438\\u043A\\u0430 \\u043E\\u0442\\u0432\\u0435\\u0442\\u043E\\u0432:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stats-bars\",\n          children: Object.entries(answerCounts).map(([option, count]) => {\n            const percentage = Math.round(count / answersForQuestion.length * 100);\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stat-label\",\n                children: option\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stat-bar-container\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"stat-bar\",\n                  style: {\n                    width: `${percentage}%`\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 200,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"stat-value\",\n                  children: [percentage, \"% (\", count, \")\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 204,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 19\n              }, this)]\n            }, option, true, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this);\n    }\n\n    // Для текстовых вопросов показываем список ответов\n    if (question.type === \"TEXT\") {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-answers\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"\\u0422\\u0435\\u043A\\u0441\\u0442\\u043E\\u0432\\u044B\\u0435 \\u043E\\u0442\\u0432\\u0435\\u0442\\u044B:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"text-answers-list\",\n          children: answersForQuestion.map((answer, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"text-answer-item\",\n            children: answer.answer || \"Нет ответа\"\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this);\n    }\n\n    // Для рейтинговых вопросов показываем средний рейтинг\n    if (question.type === \"RATING\") {\n      const ratings = answersForQuestion.map(a => parseInt(a.answer) || 0);\n      const averageRating = ratings.reduce((sum, rating) => sum + rating, 0) / ratings.length;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rating-stats\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"\\u0421\\u0440\\u0435\\u0434\\u043D\\u044F\\u044F \\u043E\\u0446\\u0435\\u043D\\u043A\\u0430: \", averageRating.toFixed(1), \" \\u0438\\u0437 10\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rating-distribution\",\n          children: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map(rating => {\n            const count = ratings.filter(r => r === rating).length;\n            const percentage = Math.round(count / ratings.length * 100);\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"rating-bar-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"rating-label\",\n                children: rating\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"rating-bar-wrapper\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"rating-bar\",\n                  style: {\n                    height: `${percentage}%`\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 250,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"rating-count\",\n                children: count\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 19\n              }, this)]\n            }, rating, true, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this);\n    }\n    return null;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      user: user\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"statistics-page\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"page-title\",\n        children: \"\\u0421\\u0442\\u0430\\u0442\\u0438\\u0441\\u0442\\u0438\\u043A\\u0430 \\u043E\\u043F\\u0440\\u043E\\u0441\\u043E\\u0432\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 19\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-indicator\",\n        children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"statistics-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"surveys-list-sidebar\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"\\u041E\\u043F\\u0440\\u043E\\u0441\\u043D\\u0438\\u043A\\u0438\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 15\n          }, this), surveys.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"empty-state\",\n            children: \"\\u0423 \\u0432\\u0430\\u0441 \\u043F\\u043E\\u043A\\u0430 \\u043D\\u0435\\u0442 \\u043E\\u043F\\u0440\\u043E\\u0441\\u043D\\u0438\\u043A\\u043E\\u0432\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"surveys-list\",\n            children: surveys.map(survey => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: `survey-item ${(selectedSurvey === null || selectedSurvey === void 0 ? void 0 : selectedSurvey.id) === survey.id ? \"active\" : \"\"}`,\n              onClick: () => handleSurveySelect(survey),\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"survey-title\",\n                children: survey.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"survey-meta\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `survey-status status-${survey.status.toLowerCase()}`,\n                  children: survey.status === \"ACTIVE\" ? \"Активный\" : survey.status === \"COMPLETED\" ? \"Завершен\" : \"Черновик\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 295,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 294,\n                columnNumber: 23\n              }, this)]\n            }, survey.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"statistics-content\",\n          children: !selectedSurvey ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"select-survey-prompt\",\n            children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u043E\\u043F\\u0440\\u043E\\u0441\\u043D\\u0438\\u043A \\u0438\\u0437 \\u0441\\u043F\\u0438\\u0441\\u043A\\u0430 \\u0441\\u043B\\u0435\\u0432\\u0430 \\u0434\\u043B\\u044F \\u043F\\u0440\\u043E\\u0441\\u043C\\u043E\\u0442\\u0440\\u0430 \\u0441\\u0442\\u0430\\u0442\\u0438\\u0441\\u0442\\u0438\\u043A\\u0438\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"survey-statistics\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: selectedSurvey.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"statistics-tabs\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: `tab-button ${!responseDetails ? \"active\" : \"\"}`,\n                onClick: () => setResponseDetails(null),\n                children: \"\\u041E\\u0431\\u0449\\u0430\\u044F \\u0441\\u0442\\u0430\\u0442\\u0438\\u0441\\u0442\\u0438\\u043A\\u0430\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 320,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: `tab-button ${responseDetails ? \"active\" : \"\"}`,\n                disabled: !responses.length,\n                onClick: () => responses.length && setResponseDetails(responses[0]),\n                children: [\"\\u041E\\u0442\\u0432\\u0435\\u0442\\u044B \\u043A\\u043B\\u0438\\u0435\\u043D\\u0442\\u043E\\u0432 (\", searchTerm ? getFilteredResponses().length : responses.length, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 328,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 19\n            }, this), !responseDetails ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"general-statistics\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stats-summary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 347,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"questions-statistics\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: \"\\u0420\\u0435\\u0437\\u0443\\u043B\\u044C\\u0442\\u0430\\u0442\\u044B \\u043E\\u043F\\u0440\\u043E\\u0441\\u0430\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 368,\n                  columnNumber: 25\n                }, this), Object.entries(getQuestionsByCategory()).map(([category, questions]) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"category-section\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                    className: \"category-title\",\n                    children: category\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 373,\n                    columnNumber: 31\n                  }, this), questions.map(question => /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"question-stat-card\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"question-text\",\n                      children: [question.orderNumber, \". \", question.text, question.required && /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"required-mark\",\n                        children: \"*\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 382,\n                        columnNumber: 39\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 379,\n                      columnNumber: 35\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"question-meta\",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"question-type\",\n                        children: [question.type === \"SINGLE_CHOICE\" && \"Одиночный выбор\", question.type === \"MULTIPLE_CHOICE\" && \"Множественный выбор\", question.type === \"TEXT\" && \"Текстовый ответ\", question.type === \"RATING\" && \"Оценка\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 387,\n                        columnNumber: 37\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 386,\n                      columnNumber: 35\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"answer-content\",\n                      children: Array.isArray(responses) && responses.length > 0 ? renderQuestionStats(question.id) : /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"no-data\",\n                        children: \"\\u041D\\u0435\\u0442 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445 \\u0434\\u043B\\u044F \\u0430\\u043D\\u0430\\u043B\\u0438\\u0437\\u0430\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 403,\n                        columnNumber: 39\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 398,\n                      columnNumber: 35\n                    }, this)]\n                  }, question.id, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 375,\n                    columnNumber: 33\n                  }, this))]\n                }, category, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 372,\n                  columnNumber: 29\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 367,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 346,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"response-details\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"search-section\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  className: \"form-control\",\n                  placeholder: \"\\u041F\\u043E\\u0438\\u0441\\u043A \\u043F\\u043E \\u0438\\u043C\\u0435\\u043D\\u0438 \\u0440\\u0435\\u0441\\u043F\\u043E\\u043D\\u0434\\u0435\\u043D\\u0442\\u0430...\",\n                  value: searchTerm,\n                  onChange: e => setSearchTerm(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 419,\n                  columnNumber: 25\n                }, this), searchTerm && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"search-results-info\",\n                  children: [\"\\u041D\\u0430\\u0439\\u0434\\u0435\\u043D\\u043E: \", getFilteredResponses().length, \" \\u0438\\u0437\", \" \", responses.length, \" \\u043E\\u0442\\u0432\\u0435\\u0442\\u043E\\u0432\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 427,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 418,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"response-nav\",\n                children: [/*#__PURE__*/_jsxDEV(\"select\", {\n                  className: \"response-selector\",\n                  value: responseDetails.id,\n                  onChange: e => {\n                    const selected = responses.find(r => r.id === Number(e.target.value));\n                    if (selected) setResponseDetails(selected);\n                  },\n                  children: getFilteredResponses().map((response, index) => {\n                    var _response$respondent2;\n                    return /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: response.id,\n                      children: [\"\\u041E\\u0442\\u0432\\u0435\\u0442 \", index + 1, \" -\", \" \", ((_response$respondent2 = response.respondent) === null || _response$respondent2 === void 0 ? void 0 : _response$respondent2.name) || \"Аноним\", \" (\", formatDate(response.createdAt), \")\"]\n                    }, response.id, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 446,\n                      columnNumber: 29\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 435,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"response-navigation\",\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"nav-button\",\n                    disabled: getFilteredResponses().indexOf(responseDetails) === 0,\n                    onClick: () => {\n                      const filteredResponses = getFilteredResponses();\n                      const currentIndex = filteredResponses.indexOf(responseDetails);\n                      if (currentIndex > 0) {\n                        setResponseDetails(filteredResponses[currentIndex - 1]);\n                      }\n                    },\n                    children: \"\\u2190 \\u041F\\u0440\\u0435\\u0434\\u044B\\u0434\\u0443\\u0449\\u0438\\u0439\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 455,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"nav-button\",\n                    disabled: getFilteredResponses().indexOf(responseDetails) === getFilteredResponses().length - 1,\n                    onClick: () => {\n                      const filteredResponses = getFilteredResponses();\n                      const currentIndex = filteredResponses.indexOf(responseDetails);\n                      if (currentIndex < filteredResponses.length - 1) {\n                        setResponseDetails(filteredResponses[currentIndex + 1]);\n                      }\n                    },\n                    children: \"\\u0421\\u043B\\u0435\\u0434\\u0443\\u044E\\u0449\\u0438\\u0439 \\u2192\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 475,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 454,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 434,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"respondent-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: \"\\u0418\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u044F \\u043E \\u0440\\u0435\\u0441\\u043F\\u043E\\u043D\\u0434\\u0435\\u043D\\u0442\\u0435\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 500,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"info-row\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"info-label\",\n                    children: \"\\u0418\\u043C\\u044F:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 502,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"info-value\",\n                    children: ((_responseDetails$resp = responseDetails.respondent) === null || _responseDetails$resp === void 0 ? void 0 : _responseDetails$resp.name) || \"Не указано\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 503,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 501,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"info-row\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"info-label\",\n                    children: \"Email:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 508,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"info-value\",\n                    children: ((_responseDetails$resp2 = responseDetails.respondent) === null || _responseDetails$resp2 === void 0 ? void 0 : _responseDetails$resp2.email) || \"Не указано\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 509,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 507,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"info-row\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"info-label\",\n                    children: \"\\u0414\\u0430\\u0442\\u0430 \\u043E\\u0442\\u0432\\u0435\\u0442\\u0430:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 514,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"info-value\",\n                    children: formatDate(responseDetails.createdAt)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 515,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 513,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 499,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"response-answers\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: \"\\u041E\\u0442\\u0432\\u0435\\u0442\\u044B \\u043D\\u0430 \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\\u044B\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 522,\n                  columnNumber: 25\n                }, this), Object.entries(getQuestionsByCategory()).map(([category, questions]) => {\n                  // Проверяем, есть ли ответы на вопросы этой категории\n                  const hasAnswers = questions.some(question => responseDetails.answers && responseDetails.answers.some(a => a.questionId === question.id));\n                  if (!hasAnswers) return null;\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"answer-category\",\n                    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                      className: \"category-title\",\n                      children: category\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 539,\n                      columnNumber: 33\n                    }, this), questions.map(question => {\n                      const answer = responseDetails.answers && responseDetails.answers.find(a => a.questionId === question.id);\n                      if (!answer) return null;\n                      return /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"answer-item\",\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"question-text\",\n                          children: [question.orderNumber, \". \", question.text, question.required && /*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"required-mark\",\n                            children: \"*\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 557,\n                            columnNumber: 43\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 554,\n                          columnNumber: 39\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"question-meta\",\n                          children: /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"question-type\",\n                            children: [question.type === \"SINGLE_CHOICE\" && \"Одиночный выбор\", question.type === \"MULTIPLE_CHOICE\" && \"Множественный выбор\", question.type === \"TEXT\" && \"Текстовый ответ\", question.type === \"RATING\" && \"Оценка\"]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 564,\n                            columnNumber: 41\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 563,\n                          columnNumber: 39\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"answer-content\",\n                          children: [question.type === \"TEXT\" && /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"text-answer\",\n                            children: answer.answer || \"Нет ответа\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 579,\n                            columnNumber: 43\n                          }, this), question.type === \"SINGLE_CHOICE\" && /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"choice-answer\",\n                            children: answer.answer\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 585,\n                            columnNumber: 43\n                          }, this), question.type === \"MULTIPLE_CHOICE\" && /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"multiple-choice-answer\",\n                            children: (Array.isArray(answer.answer) ? answer.answer : answer.answer ? [answer.answer] // Если ответ не массив, но существует - преобразуем в массив\n                            : []).map((option, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n                              className: \"choice-item\",\n                              children: option\n                            }, i, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 599,\n                              columnNumber: 47\n                            }, this))\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 592,\n                            columnNumber: 43\n                          }, this), question.type === \"RATING\" && /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"rating-answer\",\n                            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                              className: \"rating-value\",\n                              children: [answer.answer, \" / 10\"]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 611,\n                              columnNumber: 45\n                            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                              className: \"rating-stars\",\n                              children: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map(star => /*#__PURE__*/_jsxDEV(\"span\", {\n                                className: `star ${parseInt(answer.answer) >= star ? \"filled\" : \"\"}`,\n                                children: \"\\u2605\"\n                              }, star, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 618,\n                                columnNumber: 49\n                              }, this))\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 614,\n                              columnNumber: 45\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 610,\n                            columnNumber: 43\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 577,\n                          columnNumber: 39\n                        }, this)]\n                      }, question.id, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 550,\n                        columnNumber: 37\n                      }, this);\n                    })]\n                  }, category, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 538,\n                    columnNumber: 31\n                  }, this);\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 521,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 416,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 268,\n    columnNumber: 5\n  }, this);\n};\n_s(StatisticsPage, \"qC6CogDGUbkFfCLHtvF1Ml+Bnmw=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = StatisticsPage;\nexport default StatisticsPage;\nvar _c;\n$RefreshReg$(_c, \"StatisticsPage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useLocation","surveyService","authService","Sidebar","jsxDEV","_jsxDEV","StatisticsPage","_s","_responseDetails$resp","_responseDetails$resp2","navigate","location","surveys","setSurveys","selectedSurvey","setSelectedSurvey","responses","setResponses","loading","setLoading","error","setError","responseDetails","setResponseDetails","user","setUser","searchTerm","setSearchTerm","currentUser","getCurrentUser","fetchSurveys","params","URLSearchParams","search","surveyId","get","length","survey","find","s","id","parseInt","handleSurveySelect","response","getAllSurveys","surveysData","content","Array","isArray","console","log","fetchResponses","getSurveyResponses","handleResponseSelect","getFilteredResponses","trim","filter","_response$respondent","name","respondent","toLowerCase","includes","clearSearch","formatDate","dateString","date","Date","toLocaleDateString","day","month","year","hour","minute","getQuestionsByCategory","questions","categories","forEach","question","category","push","renderQuestionStats","questionId","q","answersForQuestion","r","answers","flatMap","a","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","answerCounts","answer","option","Object","entries","map","count","percentage","Math","round","style","width","index","ratings","averageRating","reduce","sum","rating","toFixed","height","onClick","title","status","disabled","orderNumber","text","required","placeholder","value","onChange","e","target","selected","Number","_response$respondent2","createdAt","indexOf","filteredResponses","currentIndex","email","hasAnswers","some","i","star","_c","$RefreshReg$"],"sources":["/Users/shirokiy/Desktop/Repositories/Дипломы/ClientExp/client_exp-frontend/src/pages/Dashboard/StatisticsPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport { useNavigate, useLocation } from \"react-router-dom\"\nimport { surveyService } from \"../../api/survey\"\nimport { authService } from \"../../api/auth\"\nimport Sidebar from \"../../components/common/Sidebar\"\nimport \"./DashboardStyles.css\"\n\nconst StatisticsPage = () => {\n  const navigate = useNavigate()\n  const location = useLocation()\n  const [surveys, setSurveys] = useState([])\n  const [selectedSurvey, setSelectedSurvey] = useState(null)\n  const [responses, setResponses] = useState([])\n  const [loading, setLoading] = useState(false)\n  const [error, setError] = useState(\"\")\n  const [responseDetails, setResponseDetails] = useState(null)\n  const [user, setUser] = useState(null)\n  const [searchTerm, setSearchTerm] = useState(\"\")\n\n  useEffect(() => {\n    const currentUser = authService.getCurrentUser()\n    if (currentUser) {\n      setUser(currentUser)\n      fetchSurveys()\n    } else {\n      navigate(\"/login\")\n      return\n    }\n  }, [navigate])\n\n  useEffect(() => {\n    // Проверяем наличие параметра survey в URL\n    const params = new URLSearchParams(location.search)\n    const surveyId = params.get(\"survey\")\n\n    if (surveyId && surveys.length > 0) {\n      const survey = surveys.find(s => s.id === parseInt(surveyId))\n      if (survey) {\n        handleSurveySelect(survey)\n      }\n    }\n  }, [surveys, location.search])\n\n  const fetchSurveys = async () => {\n    try {\n      setLoading(true)\n      const response = await surveyService.getAllSurveys()\n\n      let surveysData = []\n      if (response && response.content && Array.isArray(response.content)) {\n        surveysData = response.content\n      } else if (Array.isArray(response)) {\n        surveysData = response\n      }\n\n      setSurveys(surveysData)\n      setLoading(false)\n      console.log(\"Опросники:\", surveysData)\n    } catch (error) {\n      console.error(\"Ошибка при получении опросников:\", error)\n      setError(\"Не удалось загрузить опросники. Пожалуйста, попробуйте позже.\")\n      setLoading(false)\n    }\n  }\n\n  const fetchResponses = async surveyId => {\n    try {\n      setLoading(true)\n      setError(\"\")\n      // Предполагаем, что в API есть метод для получения ответов по ID опросника\n      const response = await surveyService.getSurveyResponses(surveyId)\n      // Убедимся, что responses всегда массив\n      setResponses(Array.isArray(response) ? response : [])\n      console.log(\"Ответы:\", response)\n      setLoading(false)\n    } catch (error) {\n      console.error(\"Ошибка при получении ответов:\", error)\n      setError(\"Не удалось загрузить ответы. Пожалуйста, попробуйте позже.\")\n      setResponses([])\n      setLoading(false)\n    }\n  }\n\n  const handleSurveySelect = survey => {\n    setSelectedSurvey(survey)\n    setResponseDetails(null)\n    fetchResponses(survey.id)\n  }\n\n  const handleResponseSelect = response => {\n    setResponseDetails(response)\n  }\n\n  // Функция для фильтрации ответов по имени респондента\n  const getFilteredResponses = () => {\n    if (!searchTerm.trim()) return responses\n\n    return responses.filter(response => {\n      const name = response.respondent?.name || \"\"\n      return name.toLowerCase().includes(searchTerm.toLowerCase())\n    })\n  }\n\n  // Функция для очистки поиска\n  const clearSearch = () => {\n    setSearchTerm(\"\")\n  }\n\n  const formatDate = dateString => {\n    if (!dateString) return \"—\"\n    const date = new Date(dateString)\n    return date.toLocaleDateString(\"ru-RU\", {\n      day: \"2-digit\",\n      month: \"2-digit\",\n      year: \"numeric\",\n      hour: \"2-digit\",\n      minute: \"2-digit\",\n    })\n  }\n\n  // Функция для группировки вопросов по категориям (сегментациям)\n  const getQuestionsByCategory = () => {\n    if (!selectedSurvey || !selectedSurvey.questions) return {}\n\n    const categories = {}\n\n    selectedSurvey.questions.forEach(question => {\n      const category = question.category || \"Без категории\"\n\n      if (!categories[category]) {\n        categories[category] = []\n      }\n\n      categories[category].push(question)\n    })\n\n    return categories\n  }\n\n  // Заглушка для отображения статистики по вопросу\n  const renderQuestionStats = questionId => {\n    if (\n      !selectedSurvey ||\n      !responses ||\n      !Array.isArray(responses) ||\n      !responses.length\n    )\n      return null\n\n    const question = selectedSurvey.questions.find(q => q.id === questionId)\n    if (!question) return null\n\n    // Собираем ответы на этот вопрос\n    const answersForQuestion = Array.isArray(responses)\n      ? responses\n          .filter(r => r && r.answers)\n          .flatMap(r => r.answers)\n          .filter(a => a && a.questionId === questionId)\n      : []\n\n    if (!answersForQuestion.length) {\n      return <div className=\"no-data\">Нет данных для анализа</div>\n    }\n\n    // Для вопросов с вариантами ответа показываем статистику\n    if (\n      question.type === \"SINGLE_CHOICE\" ||\n      question.type === \"MULTIPLE_CHOICE\"\n    ) {\n      // Считаем количество каждого варианта ответа\n      const answerCounts = {}\n\n      answersForQuestion.forEach(answer => {\n        if (Array.isArray(answer.answer)) {\n          // Для multiple choice\n          answer.answer.forEach(option => {\n            answerCounts[option] = (answerCounts[option] || 0) + 1\n          })\n        } else if (question.type === \"MULTIPLE_CHOICE\" && answer.answer) {\n          // Если ответ не массив, но существует, и вопрос множественного выбора\n          answerCounts[answer.answer] = (answerCounts[answer.answer] || 0) + 1\n        } else {\n          // Для single choice\n          answerCounts[answer.answer] = (answerCounts[answer.answer] || 0) + 1\n        }\n      })\n\n      return (\n        <div className=\"question-stats\">\n          <h4>Статистика ответов:</h4>\n          <div className=\"stats-bars\">\n            {Object.entries(answerCounts).map(([option, count]) => {\n              const percentage = Math.round(\n                (count / answersForQuestion.length) * 100\n              )\n              return (\n                <div key={option} className=\"stat-item\">\n                  <div className=\"stat-label\">{option}</div>\n                  <div className=\"stat-bar-container\">\n                    <div\n                      className=\"stat-bar\"\n                      style={{ width: `${percentage}%` }}\n                    ></div>\n                    <span className=\"stat-value\">\n                      {percentage}% ({count})\n                    </span>\n                  </div>\n                </div>\n              )\n            })}\n          </div>\n        </div>\n      )\n    }\n\n    // Для текстовых вопросов показываем список ответов\n    if (question.type === \"TEXT\") {\n      return (\n        <div className=\"text-answers\">\n          <h4>Текстовые ответы:</h4>\n          <ul className=\"text-answers-list\">\n            {answersForQuestion.map((answer, index) => (\n              <li key={index} className=\"text-answer-item\">\n                {answer.answer || \"Нет ответа\"}\n              </li>\n            ))}\n          </ul>\n        </div>\n      )\n    }\n\n    // Для рейтинговых вопросов показываем средний рейтинг\n    if (question.type === \"RATING\") {\n      const ratings = answersForQuestion.map(a => parseInt(a.answer) || 0)\n      const averageRating =\n        ratings.reduce((sum, rating) => sum + rating, 0) / ratings.length\n\n      return (\n        <div className=\"rating-stats\">\n          <h4>Средняя оценка: {averageRating.toFixed(1)} из 10</h4>\n          <div className=\"rating-distribution\">\n            {[1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map(rating => {\n              const count = ratings.filter(r => r === rating).length\n              const percentage = Math.round((count / ratings.length) * 100)\n\n              return (\n                <div key={rating} className=\"rating-bar-container\">\n                  <div className=\"rating-label\">{rating}</div>\n                  <div className=\"rating-bar-wrapper\">\n                    <div\n                      className=\"rating-bar\"\n                      style={{ height: `${percentage}%` }}\n                    ></div>\n                  </div>\n                  <div className=\"rating-count\">{count}</div>\n                </div>\n              )\n            })}\n          </div>\n        </div>\n      )\n    }\n\n    return null\n  }\n\n  return (\n    <div className=\"dashboard-container\">\n      <Sidebar user={user} />\n      <div className=\"statistics-page\">\n        <h2 className=\"page-title\">Статистика опросов</h2>\n\n        {error && <div className=\"error-message\">{error}</div>}\n\n        {loading ? (\n          <div className=\"loading-indicator\">Загрузка данных...</div>\n        ) : (\n          <div className=\"statistics-container\">\n            <div className=\"surveys-list-sidebar\">\n              <h3>Опросники</h3>\n              {surveys.length === 0 ? (\n                <div className=\"empty-state\">У вас пока нет опросников</div>\n              ) : (\n                <ul className=\"surveys-list\">\n                  {surveys.map(survey => (\n                    <li\n                      key={survey.id}\n                      className={`survey-item ${\n                        selectedSurvey?.id === survey.id ? \"active\" : \"\"\n                      }`}\n                      onClick={() => handleSurveySelect(survey)}\n                    >\n                      <div className=\"survey-title\">{survey.title}</div>\n                      <div className=\"survey-meta\">\n                        <span\n                          className={`survey-status status-${survey.status.toLowerCase()}`}\n                        >\n                          {survey.status === \"ACTIVE\"\n                            ? \"Активный\"\n                            : survey.status === \"COMPLETED\"\n                            ? \"Завершен\"\n                            : \"Черновик\"}\n                        </span>\n                      </div>\n                    </li>\n                  ))}\n                </ul>\n              )}\n            </div>\n\n            <div className=\"statistics-content\">\n              {!selectedSurvey ? (\n                <div className=\"select-survey-prompt\">\n                  Выберите опросник из списка слева для просмотра статистики\n                </div>\n              ) : (\n                <div className=\"survey-statistics\">\n                  <h3>{selectedSurvey.title}</h3>\n                  <div className=\"statistics-tabs\">\n                    <button\n                      className={`tab-button ${\n                        !responseDetails ? \"active\" : \"\"\n                      }`}\n                      onClick={() => setResponseDetails(null)}\n                    >\n                      Общая статистика\n                    </button>\n                    <button\n                      className={`tab-button ${\n                        responseDetails ? \"active\" : \"\"\n                      }`}\n                      disabled={!responses.length}\n                      onClick={() =>\n                        responses.length && setResponseDetails(responses[0])\n                      }\n                    >\n                      Ответы клиентов (\n                      {searchTerm\n                        ? getFilteredResponses().length\n                        : responses.length}\n                      )\n                    </button>\n                  </div>\n\n                  {!responseDetails ? (\n                    <div className=\"general-statistics\">\n                      <div className=\"stats-summary\">\n                        {/* <div className=\"stat-card\">\n                          <div className=\"stat-value\">{responses.length}</div>\n                          <div className=\"stat-label\">Всего ответов</div>\n                        </div> */}\n                        {/* <div className=\"stat-card\">\n                          <div className=\"stat-value\">\n                            {formatDate(selectedSurvey.startDate) ||\n                              \"Не указано\"}\n                          </div>\n                          <div className=\"stat-label\">Дата начала</div>\n                        </div>\n                        <div className=\"stat-card\">\n                          <div className=\"stat-value\">\n                            {formatDate(selectedSurvey.endDate) || \"Не указано\"}\n                          </div>\n                          <div className=\"stat-label\">Дата окончания</div>\n                        </div> */}\n                      </div>\n\n                      <div className=\"questions-statistics\">\n                        <h4>Результаты опроса</h4>\n\n                        {Object.entries(getQuestionsByCategory()).map(\n                          ([category, questions]) => (\n                            <div key={category} className=\"category-section\">\n                              <h5 className=\"category-title\">{category}</h5>\n                              {questions.map(question => (\n                                <div\n                                  key={question.id}\n                                  className=\"question-stat-card\"\n                                >\n                                  <div className=\"question-text\">\n                                    {question.orderNumber}. {question.text}\n                                    {question.required && (\n                                      <span className=\"required-mark\">*</span>\n                                    )}\n                                  </div>\n\n                                  <div className=\"question-meta\">\n                                    <div className=\"question-type\">\n                                      {question.type === \"SINGLE_CHOICE\" &&\n                                        \"Одиночный выбор\"}\n                                      {question.type === \"MULTIPLE_CHOICE\" &&\n                                        \"Множественный выбор\"}\n                                      {question.type === \"TEXT\" &&\n                                        \"Текстовый ответ\"}\n                                      {question.type === \"RATING\" && \"Оценка\"}\n                                    </div>\n                                  </div>\n\n                                  <div className=\"answer-content\">\n                                    {Array.isArray(responses) &&\n                                    responses.length > 0 ? (\n                                      renderQuestionStats(question.id)\n                                    ) : (\n                                      <div className=\"no-data\">\n                                        Нет данных для анализа\n                                      </div>\n                                    )}\n                                  </div>\n                                </div>\n                              ))}\n                            </div>\n                          )\n                        )}\n                      </div>\n                    </div>\n                  ) : (\n                    <div className=\"response-details\">\n                      {/* Поле поиска по имени */}\n                      <div className=\"search-section\">\n                        <input\n                          type=\"text\"\n                          className=\"form-control\"\n                          placeholder=\"Поиск по имени респондента...\"\n                          value={searchTerm}\n                          onChange={e => setSearchTerm(e.target.value)}\n                        />\n                        {searchTerm && (\n                          <div className=\"search-results-info\">\n                            Найдено: {getFilteredResponses().length} из{\" \"}\n                            {responses.length} ответов\n                          </div>\n                        )}\n                      </div>\n\n                      <div className=\"response-nav\">\n                        <select\n                          className=\"response-selector\"\n                          value={responseDetails.id}\n                          onChange={e => {\n                            const selected = responses.find(\n                              r => r.id === Number(e.target.value)\n                            )\n                            if (selected) setResponseDetails(selected)\n                          }}\n                        >\n                          {getFilteredResponses().map((response, index) => (\n                            <option key={response.id} value={response.id}>\n                              Ответ {index + 1} -{\" \"}\n                              {response.respondent?.name || \"Аноним\"} (\n                              {formatDate(response.createdAt)})\n                            </option>\n                          ))}\n                        </select>\n\n                        <div className=\"response-navigation\">\n                          <button\n                            className=\"nav-button\"\n                            disabled={\n                              getFilteredResponses().indexOf(\n                                responseDetails\n                              ) === 0\n                            }\n                            onClick={() => {\n                              const filteredResponses = getFilteredResponses()\n                              const currentIndex =\n                                filteredResponses.indexOf(responseDetails)\n                              if (currentIndex > 0) {\n                                setResponseDetails(\n                                  filteredResponses[currentIndex - 1]\n                                )\n                              }\n                            }}\n                          >\n                            &larr; Предыдущий\n                          </button>\n                          <button\n                            className=\"nav-button\"\n                            disabled={\n                              getFilteredResponses().indexOf(\n                                responseDetails\n                              ) ===\n                              getFilteredResponses().length - 1\n                            }\n                            onClick={() => {\n                              const filteredResponses = getFilteredResponses()\n                              const currentIndex =\n                                filteredResponses.indexOf(responseDetails)\n                              if (currentIndex < filteredResponses.length - 1) {\n                                setResponseDetails(\n                                  filteredResponses[currentIndex + 1]\n                                )\n                              }\n                            }}\n                          >\n                            Следующий &rarr;\n                          </button>\n                        </div>\n                      </div>\n\n                      <div className=\"respondent-info\">\n                        <h4>Информация о респонденте</h4>\n                        <div className=\"info-row\">\n                          <span className=\"info-label\">Имя:</span>\n                          <span className=\"info-value\">\n                            {responseDetails.respondent?.name || \"Не указано\"}\n                          </span>\n                        </div>\n                        <div className=\"info-row\">\n                          <span className=\"info-label\">Email:</span>\n                          <span className=\"info-value\">\n                            {responseDetails.respondent?.email || \"Не указано\"}\n                          </span>\n                        </div>\n                        <div className=\"info-row\">\n                          <span className=\"info-label\">Дата ответа:</span>\n                          <span className=\"info-value\">\n                            {formatDate(responseDetails.createdAt)}\n                          </span>\n                        </div>\n                      </div>\n\n                      <div className=\"response-answers\">\n                        <h4>Ответы на вопросы</h4>\n\n                        {Object.entries(getQuestionsByCategory()).map(\n                          ([category, questions]) => {\n                            // Проверяем, есть ли ответы на вопросы этой категории\n                            const hasAnswers = questions.some(\n                              question =>\n                                responseDetails.answers &&\n                                responseDetails.answers.some(\n                                  a => a.questionId === question.id\n                                )\n                            )\n\n                            if (!hasAnswers) return null\n\n                            return (\n                              <div key={category} className=\"answer-category\">\n                                <h5 className=\"category-title\">{category}</h5>\n                                {questions.map(question => {\n                                  const answer =\n                                    responseDetails.answers &&\n                                    responseDetails.answers.find(\n                                      a => a.questionId === question.id\n                                    )\n\n                                  if (!answer) return null\n\n                                  return (\n                                    <div\n                                      key={question.id}\n                                      className=\"answer-item\"\n                                    >\n                                      <div className=\"question-text\">\n                                        {question.orderNumber}. {question.text}\n                                        {question.required && (\n                                          <span className=\"required-mark\">\n                                            *\n                                          </span>\n                                        )}\n                                      </div>\n\n                                      <div className=\"question-meta\">\n                                        <div className=\"question-type\">\n                                          {question.type === \"SINGLE_CHOICE\" &&\n                                            \"Одиночный выбор\"}\n                                          {question.type ===\n                                            \"MULTIPLE_CHOICE\" &&\n                                            \"Множественный выбор\"}\n                                          {question.type === \"TEXT\" &&\n                                            \"Текстовый ответ\"}\n                                          {question.type === \"RATING\" &&\n                                            \"Оценка\"}\n                                        </div>\n                                      </div>\n\n                                      <div className=\"answer-content\">\n                                        {question.type === \"TEXT\" && (\n                                          <div className=\"text-answer\">\n                                            {answer.answer || \"Нет ответа\"}\n                                          </div>\n                                        )}\n\n                                        {question.type === \"SINGLE_CHOICE\" && (\n                                          <div className=\"choice-answer\">\n                                            {answer.answer}\n                                          </div>\n                                        )}\n\n                                        {question.type ===\n                                          \"MULTIPLE_CHOICE\" && (\n                                          <div className=\"multiple-choice-answer\">\n                                            {(Array.isArray(answer.answer)\n                                              ? answer.answer\n                                              : answer.answer\n                                              ? [answer.answer] // Если ответ не массив, но существует - преобразуем в массив\n                                              : []\n                                            ).map((option, i) => (\n                                              <div\n                                                key={i}\n                                                className=\"choice-item\"\n                                              >\n                                                {option}\n                                              </div>\n                                            ))}\n                                          </div>\n                                        )}\n\n                                        {question.type === \"RATING\" && (\n                                          <div className=\"rating-answer\">\n                                            <div className=\"rating-value\">\n                                              {answer.answer} / 10\n                                            </div>\n                                            <div className=\"rating-stars\">\n                                              {[\n                                                1, 2, 3, 4, 5, 6, 7, 8, 9, 10,\n                                              ].map(star => (\n                                                <span\n                                                  key={star}\n                                                  className={`star ${\n                                                    parseInt(answer.answer) >=\n                                                    star\n                                                      ? \"filled\"\n                                                      : \"\"\n                                                  }`}\n                                                >\n                                                  ★\n                                                </span>\n                                              ))}\n                                            </div>\n                                          </div>\n                                        )}\n                                      </div>\n                                    </div>\n                                  )\n                                })}\n                              </div>\n                            )\n                          }\n                        )}\n                      </div>\n                    </div>\n                  )}\n                </div>\n              )}\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default StatisticsPage\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}