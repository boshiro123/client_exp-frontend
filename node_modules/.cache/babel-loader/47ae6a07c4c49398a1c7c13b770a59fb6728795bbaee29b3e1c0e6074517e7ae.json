{"ast":null,"code":"import axios from \"axios\";\nconst API_URL = \"http://localhost:8080/api\";\nexport const questionsService = {\n  // Получение всех вопросов\n  async getAllQuestions() {\n    try {\n      const response = await axios.get(`${API_URL}/questions`);\n      return response.data;\n    } catch (error) {\n      console.error(\"Error fetching questions:\", error);\n      throw error;\n    }\n  },\n  // Получение вопроса по ID\n  async getQuestionById(id) {\n    try {\n      const response = await axios.get(`${API_URL}/questions/${id}`);\n      return response.data;\n    } catch (error) {\n      console.error(`Error fetching question with id ${id}:`, error);\n      throw error;\n    }\n  },\n  // Создание нового вопроса\n  async createQuestion(questionData) {\n    try {\n      const response = await axios.post(`${API_URL}/questions`, questionData);\n      return response.data;\n    } catch (error) {\n      console.error(\"Error creating question:\", error);\n      throw error;\n    }\n  },\n  // Обновление существующего вопроса\n  async updateQuestion(id, questionData) {\n    try {\n      const response = await axios.put(`${API_URL}/questions/${id}`, questionData);\n      return response.data;\n    } catch (error) {\n      console.error(`Error updating question with id ${id}:`, error);\n      throw error;\n    }\n  },\n  // Удаление вопроса\n  async deleteQuestion(id) {\n    try {\n      const response = await axios.delete(`${API_URL}/questions/${id}`);\n      return response.data;\n    } catch (error) {\n      console.error(`Error deleting question with id ${id}:`, error);\n      throw error;\n    }\n  }\n};","map":{"version":3,"names":["axios","API_URL","questionsService","getAllQuestions","response","get","data","error","console","getQuestionById","id","createQuestion","questionData","post","updateQuestion","put","deleteQuestion","delete"],"sources":["/Users/shirokiy/Desktop/Repositories/Дипломы/ClientExp/client_exp-frontend/src/api/questions.js"],"sourcesContent":["import axios from \"axios\"\n\nconst API_URL = \"http://localhost:8080/api\"\n\nexport const questionsService = {\n  // Получение всех вопросов\n  async getAllQuestions() {\n    try {\n      const response = await axios.get(`${API_URL}/questions`)\n      return response.data\n    } catch (error) {\n      console.error(\"Error fetching questions:\", error)\n      throw error\n    }\n  },\n\n  // Получение вопроса по ID\n  async getQuestionById(id) {\n    try {\n      const response = await axios.get(`${API_URL}/questions/${id}`)\n      return response.data\n    } catch (error) {\n      console.error(`Error fetching question with id ${id}:`, error)\n      throw error\n    }\n  },\n\n  // Создание нового вопроса\n  async createQuestion(questionData) {\n    try {\n      const response = await axios.post(`${API_URL}/questions`, questionData)\n      return response.data\n    } catch (error) {\n      console.error(\"Error creating question:\", error)\n      throw error\n    }\n  },\n\n  // Обновление существующего вопроса\n  async updateQuestion(id, questionData) {\n    try {\n      const response = await axios.put(\n        `${API_URL}/questions/${id}`,\n        questionData\n      )\n      return response.data\n    } catch (error) {\n      console.error(`Error updating question with id ${id}:`, error)\n      throw error\n    }\n  },\n\n  // Удаление вопроса\n  async deleteQuestion(id) {\n    try {\n      const response = await axios.delete(`${API_URL}/questions/${id}`)\n      return response.data\n    } catch (error) {\n      console.error(`Error deleting question with id ${id}:`, error)\n      throw error\n    }\n  },\n}\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,2BAA2B;AAE3C,OAAO,MAAMC,gBAAgB,GAAG;EAC9B;EACA,MAAMC,eAAeA,CAAA,EAAG;IACtB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAAC,GAAGJ,OAAO,YAAY,CAAC;MACxD,OAAOG,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACjD,MAAMA,KAAK;IACb;EACF,CAAC;EAED;EACA,MAAME,eAAeA,CAACC,EAAE,EAAE;IACxB,IAAI;MACF,MAAMN,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAAC,GAAGJ,OAAO,cAAcS,EAAE,EAAE,CAAC;MAC9D,OAAON,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,mCAAmCG,EAAE,GAAG,EAAEH,KAAK,CAAC;MAC9D,MAAMA,KAAK;IACb;EACF,CAAC;EAED;EACA,MAAMI,cAAcA,CAACC,YAAY,EAAE;IACjC,IAAI;MACF,MAAMR,QAAQ,GAAG,MAAMJ,KAAK,CAACa,IAAI,CAAC,GAAGZ,OAAO,YAAY,EAAEW,YAAY,CAAC;MACvE,OAAOR,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAChD,MAAMA,KAAK;IACb;EACF,CAAC;EAED;EACA,MAAMO,cAAcA,CAACJ,EAAE,EAAEE,YAAY,EAAE;IACrC,IAAI;MACF,MAAMR,QAAQ,GAAG,MAAMJ,KAAK,CAACe,GAAG,CAC9B,GAAGd,OAAO,cAAcS,EAAE,EAAE,EAC5BE,YACF,CAAC;MACD,OAAOR,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,mCAAmCG,EAAE,GAAG,EAAEH,KAAK,CAAC;MAC9D,MAAMA,KAAK;IACb;EACF,CAAC;EAED;EACA,MAAMS,cAAcA,CAACN,EAAE,EAAE;IACvB,IAAI;MACF,MAAMN,QAAQ,GAAG,MAAMJ,KAAK,CAACiB,MAAM,CAAC,GAAGhB,OAAO,cAAcS,EAAE,EAAE,CAAC;MACjE,OAAON,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,mCAAmCG,EAAE,GAAG,EAAEH,KAAK,CAAC;MAC9D,MAAMA,KAAK;IACb;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}