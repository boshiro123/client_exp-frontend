{"ast":null,"code":"var _jsxFileName = \"/Users/shirokiy/Desktop/Repositories/\\u0414\\u0438\\u043F\\u043B\\u043E\\u043C\\u044B/ClientExp/client_exp-frontend/src/pages/Survey/SurveyPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate, useLocation } from \"react-router-dom\";\nimport { surveyService } from \"../../api/survey\";\nimport { authService } from \"../../api/auth\";\nimport \"./SurveyStyles.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SurveyPage = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [isPreview, setIsPreview] = useState(false);\n  const [survey, setSurvey] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [answers, setAnswers] = useState({});\n  const [submitting, setSubmitting] = useState(false);\n  const [submitted, setSubmitted] = useState(false);\n  const [respondentData, setRespondentData] = useState({\n    name: \"\",\n    email: \"\",\n    consent: false\n  });\n  const [userInfoSubmitted, setUserInfoSubmitted] = useState(false);\n  useEffect(() => {\n    // Проверяем, является ли это предпросмотром от администратора\n    const checkIfPreview = async () => {\n      const user = authService.getCurrentUser();\n      const isAdmin = user && (user.role === \"ADMIN\" || user.role === \"MANAGER\");\n      setIsPreview(isAdmin);\n      fetchSurvey(isAdmin);\n    };\n    checkIfPreview();\n  }, [id]);\n  const fetchSurvey = async isAdmin => {\n    try {\n      setLoading(true);\n\n      // Выбор метода API в зависимости от того, предпросмотр это или нет\n      let surveyData;\n\n      // Если это предпросмотр администратора, используем метод с авторизацией\n      if (isAdmin) {\n        surveyData = await surveyService.getSurveyById(id);\n        setUserInfoSubmitted(true); // Для админа пропускаем первый этап\n      } else {\n        surveyData = await surveyService.getPublicSurveyById(id);\n      }\n      console.log(\"Получены данные опросника:\", surveyData);\n      if (!surveyData) {\n        setError(\"Опросник не найден или недоступен\");\n        setLoading(false);\n        return;\n      }\n\n      // Проверка статуса нужна только если это не предпросмотр\n      if (!isAdmin && surveyData.status !== \"ACTIVE\" && surveyData.status !== \"активный\") {\n        setError(`Опросник в данный момент недоступен (статус: ${surveyData.status})`);\n        setLoading(false);\n        return;\n      }\n      setSurvey(surveyData);\n\n      // Инициализируем ответы для обязательных вопросов\n      const initialAnswers = {};\n      surveyData.questions.forEach(question => {\n        if (question.required) {\n          initialAnswers[question.id] = question.type === \"MULTIPLE_CHOICE\" ? [] : question.type === \"TEXT\" ? \"\" : null;\n        }\n      });\n      setAnswers(initialAnswers);\n      setLoading(false);\n    } catch (err) {\n      console.error(\"Ошибка при загрузке опросника:\", err);\n      setError(\"Не удалось загрузить опросник. Возможно, он был удален или недоступен.\");\n      setLoading(false);\n    }\n  };\n  const handleAnswerChange = (questionId, value) => {\n    const question = survey.questions.find(q => q.id === questionId);\n    if (question.type === \"MULTIPLE_CHOICE\") {\n      const currentAnswers = answers[questionId] || [];\n      if (currentAnswers.includes(value)) {\n        // Если значение уже выбрано, удаляем его\n        setAnswers({\n          ...answers,\n          [questionId]: currentAnswers.filter(item => item !== value)\n        });\n      } else {\n        // Иначе добавляем новое значение\n        setAnswers({\n          ...answers,\n          [questionId]: [...currentAnswers, value]\n        });\n      }\n    } else {\n      // Для одиночного выбора, текста и оценки\n      setAnswers({\n        ...answers,\n        [questionId]: value\n      });\n    }\n  };\n  const handleRespondentDataChange = e => {\n    const {\n      name,\n      value,\n      type,\n      checked\n    } = e.target;\n    setRespondentData({\n      ...respondentData,\n      [name]: type === \"checkbox\" ? checked : value\n    });\n  };\n  const handleUserInfoSubmit = e => {\n    e.preventDefault();\n\n    // Простая валидация данных\n    if (!respondentData.name.trim()) {\n      alert(\"Пожалуйста, укажите ваше имя\");\n      return;\n    }\n    if (!respondentData.email.trim()) {\n      alert(\"Пожалуйста, укажите ваш email\");\n      return;\n    }\n    if (!respondentData.consent) {\n      alert(\"Для прохождения опроса необходимо согласие на обработку данных\");\n      return;\n    }\n\n    // Если все данные заполнены, начинаем опрос\n    setUserInfoSubmitted(true);\n  };\n  const nextQuestion = () => {\n    const currentQuestion = survey.questions[currentQuestionIndex];\n\n    // Проверяем, дан ли ответ на обязательный вопрос\n    if (currentQuestion.required) {\n      const answer = answers[currentQuestion.id];\n      if (answer === null || answer === undefined || Array.isArray(answer) && answer.length === 0 || typeof answer === \"string\" && answer.trim() === \"\") {\n        alert(`Пожалуйста, ответьте на вопрос: \"${currentQuestion.text}\"`);\n        return;\n      }\n    }\n    if (currentQuestionIndex < survey.questions.length - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n      window.scrollTo(0, 0);\n    }\n  };\n  const prevQuestion = () => {\n    if (currentQuestionIndex > 0) {\n      setCurrentQuestionIndex(currentQuestionIndex - 1);\n      window.scrollTo(0, 0);\n    }\n  };\n  const validateForm = () => {\n    // Проверяем, есть ли ответы на все обязательные вопросы\n    const unansweredRequired = survey.questions.filter(q => q.required).some(q => {\n      const answer = answers[q.id];\n      return answer === null || answer === undefined || Array.isArray(answer) && answer.length === 0 || typeof answer === \"string\" && answer.trim() === \"\";\n    });\n    if (unansweredRequired) {\n      alert(\"Пожалуйста, ответьте на все обязательные вопросы.\");\n      return false;\n    }\n    return true;\n  };\n  const submitSurvey = async () => {\n    if (!validateForm()) return;\n    try {\n      setSubmitting(true);\n      const surveyResponse = {\n        surveyId: survey.id,\n        respondent: {\n          name: respondentData.name,\n          email: respondentData.email,\n          consent: respondentData.consent\n        },\n        answers: Object.entries(answers).map(([questionId, value]) => ({\n          questionId: parseInt(questionId),\n          answer: value\n        }))\n      };\n      console.log(\"Отправка ответов:\", surveyResponse);\n      await surveyService.submitSurveyResponse(surveyResponse);\n      setSubmitted(true);\n      window.scrollTo(0, 0);\n    } catch (err) {\n      console.error(\"Ошибка при отправке ответов:\", err);\n      alert(\"Произошла ошибка при отправке ответов. Пожалуйста, попробуйте еще раз.\");\n    } finally {\n      setSubmitting(false);\n    }\n  };\n  const renderQuestionContent = question => {\n    switch (question.type) {\n      case \"SINGLE_CHOICE\":\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-options\",\n          children: question.options.map((option, index) => /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"option-label\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: `question_${question.id}`,\n              value: option,\n              checked: answers[question.id] === option,\n              onChange: () => handleAnswerChange(question.id, option)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: option\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this);\n      case \"MULTIPLE_CHOICE\":\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-options\",\n          children: question.options.map((option, index) => /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"option-label\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              name: `question_${question.id}_${index}`,\n              value: option,\n              checked: (answers[question.id] || []).includes(option),\n              onChange: () => handleAnswerChange(question.id, option)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: option\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 11\n        }, this);\n      case \"TEXT\":\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-text\",\n          children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"text-answer\",\n            value: answers[question.id] || \"\",\n            onChange: e => handleAnswerChange(question.id, e.target.value),\n            placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0432\\u0430\\u0448 \\u043E\\u0442\\u0432\\u0435\\u0442 \\u0437\\u0434\\u0435\\u0441\\u044C...\",\n            rows: 5\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 11\n        }, this);\n      case \"RATING\":\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rating-container\",\n          children: [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map(rating => /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `rating-button ${answers[question.id] === rating ? \"selected\" : \"\"}`,\n            onClick: () => handleAnswerChange(question.id, rating),\n            children: rating\n          }, rating, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rating-labels\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\u041E\\u0447\\u0435\\u043D\\u044C \\u043F\\u043B\\u043E\\u0445\\u043E\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\u041E\\u0442\\u043B\\u0438\\u0447\\u043D\\u043E\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 11\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u041D\\u0435\\u043F\\u043E\\u0434\\u0434\\u0435\\u0440\\u0436\\u0438\\u0432\\u0430\\u0435\\u043C\\u044B\\u0439 \\u0442\\u0438\\u043F \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\\u0430.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 16\n        }, this);\n    }\n  };\n  const renderUserInfoForm = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-info-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u041F\\u0440\\u0435\\u0436\\u0434\\u0435 \\u0447\\u0435\\u043C \\u043D\\u0430\\u0447\\u0430\\u0442\\u044C \\u043E\\u043F\\u0440\\u043E\\u0441\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"form-note\",\n        children: \"\\u041F\\u043E\\u0436\\u0430\\u043B\\u0443\\u0439\\u0441\\u0442\\u0430, \\u043F\\u0440\\u0435\\u0434\\u0441\\u0442\\u0430\\u0432\\u044C\\u0442\\u0435\\u0441\\u044C, \\u0447\\u0442\\u043E\\u0431\\u044B \\u043C\\u044B \\u043C\\u043E\\u0433\\u043B\\u0438 \\u0443\\u0447\\u0435\\u0441\\u0442\\u044C \\u0432\\u0430\\u0448\\u0435 \\u043C\\u043D\\u0435\\u043D\\u0438\\u0435\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleUserInfoSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: [\"\\u0412\\u0430\\u0448\\u0435 \\u0438\\u043C\\u044F: \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"required-mark\",\n              children: \"*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"name\",\n            name: \"name\",\n            value: respondentData.name,\n            onChange: handleRespondentDataChange,\n            placeholder: \"\\u0418\\u0432\\u0430\\u043D\\u043E\\u0432 \\u0418\\u0432\\u0430\\u043D\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: [\"Email: \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"required-mark\",\n              children: \"*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 349,\n              columnNumber: 22\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            id: \"email\",\n            name: \"email\",\n            value: respondentData.email,\n            onChange: handleRespondentDataChange,\n            placeholder: \"example@mail.ru\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group checkbox-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            id: \"consent\",\n            name: \"consent\",\n            checked: respondentData.consent,\n            onChange: handleRespondentDataChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"consent\",\n            children: [\"\\u042F \\u0434\\u0430\\u044E \\u0441\\u043E\\u0433\\u043B\\u0430\\u0441\\u0438\\u0435 \\u043D\\u0430 \\u043E\\u0431\\u0440\\u0430\\u0431\\u043E\\u0442\\u043A\\u0443 \\u043C\\u043E\\u0438\\u0445 \\u043F\\u0435\\u0440\\u0441\\u043E\\u043D\\u0430\\u043B\\u044C\\u043D\\u044B\\u0445 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"required-mark\",\n              children: \"*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-actions\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"primary-button\",\n            children: \"\\u041D\\u0430\\u0447\\u0430\\u0442\\u044C \\u043E\\u043F\\u0440\\u043E\\u0441\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 7\n    }, this);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"survey-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-indicator\",\n        children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430 \\u043E\\u043F\\u0440\\u043E\\u0441\\u043D\\u0438\\u043A\\u0430...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"survey-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"back-button\",\n          onClick: () => navigate(\"/\"),\n          children: \"\\u0412\\u0435\\u0440\\u043D\\u0443\\u0442\\u044C\\u0441\\u044F \\u043D\\u0430 \\u0433\\u043B\\u0430\\u0432\\u043D\\u0443\\u044E\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 7\n    }, this);\n  }\n  if (!survey) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"survey-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\u041E\\u043F\\u0440\\u043E\\u0441\\u043D\\u0438\\u043A \\u043D\\u0435 \\u043D\\u0430\\u0439\\u0434\\u0435\\u043D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"back-button\",\n          onClick: () => navigate(\"/\"),\n          children: \"\\u0412\\u0435\\u0440\\u043D\\u0443\\u0442\\u044C\\u0441\\u044F \\u043D\\u0430 \\u0433\\u043B\\u0430\\u0432\\u043D\\u0443\\u044E\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 7\n    }, this);\n  }\n  if (submitted) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"survey-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"success-message\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"success-icon\",\n          children: \"\\u2713\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\u0421\\u043F\\u0430\\u0441\\u0438\\u0431\\u043E \\u0437\\u0430 \\u0443\\u0447\\u0430\\u0441\\u0442\\u0438\\u0435 \\u0432 \\u043E\\u043F\\u0440\\u043E\\u0441\\u0435!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u0412\\u0430\\u0448\\u0438 \\u043E\\u0442\\u0432\\u0435\\u0442\\u044B \\u043F\\u043E\\u043C\\u043E\\u0433\\u0443\\u0442 \\u043D\\u0430\\u043C \\u0443\\u043B\\u0443\\u0447\\u0448\\u0438\\u0442\\u044C \\u043D\\u0430\\u0448 \\u0441\\u0435\\u0440\\u0432\\u0438\\u0441.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"primary-button\",\n          onClick: () => navigate(\"/\"),\n          children: \"\\u041D\\u0430 \\u0433\\u043B\\u0430\\u0432\\u043D\\u0443\\u044E\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Если пользователь еще не ввел информацию о себе и это не предпросмотр, показываем форму\n  if (!userInfoSubmitted && !isPreview) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"survey-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"survey-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: survey.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 11\n        }, this), survey.description && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"survey-description\",\n          children: survey.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"survey-content\",\n        children: renderUserInfoForm()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 7\n    }, this);\n  }\n  const currentQuestion = survey.questions[currentQuestionIndex];\n  const isLastQuestion = currentQuestionIndex === survey.questions.length - 1;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"survey-container\",\n    children: [isPreview && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"preview-notification\",\n      children: [\"\\u0412\\u044B \\u043F\\u0440\\u043E\\u0441\\u043C\\u0430\\u0442\\u0440\\u0438\\u0432\\u0430\\u0435\\u0442\\u0435 \\u043E\\u043F\\u0440\\u043E\\u0441 \\u0432 \\u0440\\u0435\\u0436\\u0438\\u043C\\u0435 \\u043F\\u0440\\u0435\\u0434\\u043F\\u0440\\u043E\\u0441\\u043C\\u043E\\u0442\\u0440\\u0430\", /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"back-to-dashboard\",\n        onClick: () => navigate(\"/dashboard\"),\n        children: \"\\u0412\\u0435\\u0440\\u043D\\u0443\\u0442\\u044C\\u0441\\u044F \\u0432 \\u043F\\u0430\\u043D\\u0435\\u043B\\u044C \\u0443\\u043F\\u0440\\u0430\\u0432\\u043B\\u0435\\u043D\\u0438\\u044F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 459,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"survey-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: survey.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 9\n      }, this), survey.description && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"survey-description\",\n        children: survey.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 470,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"survey-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-bar\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-fill\",\n          style: {\n            width: `${(currentQuestionIndex + 1) / survey.questions.length * 100}%`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 479,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 478,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-text\",\n        children: [\"\\u0412\\u043E\\u043F\\u0440\\u043E\\u0441 \", currentQuestionIndex + 1, \" \\u0438\\u0437 \", survey.questions.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 488,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"question-text\",\n          children: [currentQuestion.text, currentQuestion.required && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"required-mark\",\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 496,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 493,\n          columnNumber: 11\n        }, this), renderQuestionContent(currentQuestion)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 492,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navigation-buttons\",\n        children: [currentQuestionIndex > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"secondary-button\",\n          onClick: prevQuestion,\n          children: \"\\u041D\\u0430\\u0437\\u0430\\u0434\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 505,\n          columnNumber: 13\n        }, this), !isLastQuestion ? /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"primary-button\",\n          onClick: nextQuestion,\n          children: \"\\u0414\\u0430\\u043B\\u0435\\u0435\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 511,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: isPreview ? /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"primary-button\",\n            onClick: () => navigate(\"/dashboard\"),\n            children: \"\\u0417\\u0430\\u0432\\u0435\\u0440\\u0448\\u0438\\u0442\\u044C \\u043F\\u0440\\u0435\\u0434\\u043F\\u0440\\u043E\\u0441\\u043C\\u043E\\u0442\\u0440\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 517,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"primary-button\",\n            onClick: submitSurvey,\n            disabled: submitting,\n            children: submitting ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"loading-spinner\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 531,\n                columnNumber: 23\n              }, this), \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u043A\\u0430...\"]\n            }, void 0, true) : \"Завершить опрос\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 524,\n            columnNumber: 17\n          }, this)\n        }, void 0, false)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 503,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 457,\n    columnNumber: 5\n  }, this);\n};\n_s(SurveyPage, \"2qCCFN2JH7QiCCBR1gQZ0SVXawI=\", false, function () {\n  return [useParams, useNavigate, useLocation];\n});\n_c = SurveyPage;\nexport default SurveyPage;\nvar _c;\n$RefreshReg$(_c, \"SurveyPage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","useLocation","surveyService","authService","jsxDEV","_jsxDEV","Fragment","_Fragment","SurveyPage","_s","id","navigate","location","isPreview","setIsPreview","survey","setSurvey","loading","setLoading","error","setError","currentQuestionIndex","setCurrentQuestionIndex","answers","setAnswers","submitting","setSubmitting","submitted","setSubmitted","respondentData","setRespondentData","name","email","consent","userInfoSubmitted","setUserInfoSubmitted","checkIfPreview","user","getCurrentUser","isAdmin","role","fetchSurvey","surveyData","getSurveyById","getPublicSurveyById","console","log","status","initialAnswers","questions","forEach","question","required","type","err","handleAnswerChange","questionId","value","find","q","currentAnswers","includes","filter","item","handleRespondentDataChange","e","checked","target","handleUserInfoSubmit","preventDefault","trim","alert","nextQuestion","currentQuestion","answer","undefined","Array","isArray","length","text","window","scrollTo","prevQuestion","validateForm","unansweredRequired","some","submitSurvey","surveyResponse","surveyId","respondent","Object","entries","map","parseInt","submitSurveyResponse","renderQuestionContent","className","children","options","option","index","onChange","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","rows","rating","onClick","renderUserInfoForm","onSubmit","htmlFor","title","description","isLastQuestion","style","width","disabled","_c","$RefreshReg$"],"sources":["/Users/shirokiy/Desktop/Repositories/Дипломы/ClientExp/client_exp-frontend/src/pages/Survey/SurveyPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport { useParams, useNavigate, useLocation } from \"react-router-dom\"\nimport { surveyService } from \"../../api/survey\"\nimport { authService } from \"../../api/auth\"\nimport \"./SurveyStyles.css\"\n\nconst SurveyPage = () => {\n  const { id } = useParams()\n  const navigate = useNavigate()\n  const location = useLocation()\n  const [isPreview, setIsPreview] = useState(false)\n\n  const [survey, setSurvey] = useState(null)\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState(null)\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0)\n  const [answers, setAnswers] = useState({})\n  const [submitting, setSubmitting] = useState(false)\n  const [submitted, setSubmitted] = useState(false)\n  const [respondentData, setRespondentData] = useState({\n    name: \"\",\n    email: \"\",\n    consent: false,\n  })\n  const [userInfoSubmitted, setUserInfoSubmitted] = useState(false)\n\n  useEffect(() => {\n    // Проверяем, является ли это предпросмотром от администратора\n    const checkIfPreview = async () => {\n      const user = authService.getCurrentUser()\n      const isAdmin = user && (user.role === \"ADMIN\" || user.role === \"MANAGER\")\n      setIsPreview(isAdmin)\n      fetchSurvey(isAdmin)\n    }\n\n    checkIfPreview()\n  }, [id])\n\n  const fetchSurvey = async isAdmin => {\n    try {\n      setLoading(true)\n\n      // Выбор метода API в зависимости от того, предпросмотр это или нет\n      let surveyData\n\n      // Если это предпросмотр администратора, используем метод с авторизацией\n      if (isAdmin) {\n        surveyData = await surveyService.getSurveyById(id)\n        setUserInfoSubmitted(true) // Для админа пропускаем первый этап\n      } else {\n        surveyData = await surveyService.getPublicSurveyById(id)\n      }\n\n      console.log(\"Получены данные опросника:\", surveyData)\n\n      if (!surveyData) {\n        setError(\"Опросник не найден или недоступен\")\n        setLoading(false)\n        return\n      }\n\n      // Проверка статуса нужна только если это не предпросмотр\n      if (\n        !isAdmin &&\n        surveyData.status !== \"ACTIVE\" &&\n        surveyData.status !== \"активный\"\n      ) {\n        setError(\n          `Опросник в данный момент недоступен (статус: ${surveyData.status})`\n        )\n        setLoading(false)\n        return\n      }\n\n      setSurvey(surveyData)\n\n      // Инициализируем ответы для обязательных вопросов\n      const initialAnswers = {}\n      surveyData.questions.forEach(question => {\n        if (question.required) {\n          initialAnswers[question.id] =\n            question.type === \"MULTIPLE_CHOICE\"\n              ? []\n              : question.type === \"TEXT\"\n              ? \"\"\n              : null\n        }\n      })\n      setAnswers(initialAnswers)\n\n      setLoading(false)\n    } catch (err) {\n      console.error(\"Ошибка при загрузке опросника:\", err)\n      setError(\n        \"Не удалось загрузить опросник. Возможно, он был удален или недоступен.\"\n      )\n      setLoading(false)\n    }\n  }\n\n  const handleAnswerChange = (questionId, value) => {\n    const question = survey.questions.find(q => q.id === questionId)\n\n    if (question.type === \"MULTIPLE_CHOICE\") {\n      const currentAnswers = answers[questionId] || []\n\n      if (currentAnswers.includes(value)) {\n        // Если значение уже выбрано, удаляем его\n        setAnswers({\n          ...answers,\n          [questionId]: currentAnswers.filter(item => item !== value),\n        })\n      } else {\n        // Иначе добавляем новое значение\n        setAnswers({\n          ...answers,\n          [questionId]: [...currentAnswers, value],\n        })\n      }\n    } else {\n      // Для одиночного выбора, текста и оценки\n      setAnswers({\n        ...answers,\n        [questionId]: value,\n      })\n    }\n  }\n\n  const handleRespondentDataChange = e => {\n    const { name, value, type, checked } = e.target\n    setRespondentData({\n      ...respondentData,\n      [name]: type === \"checkbox\" ? checked : value,\n    })\n  }\n\n  const handleUserInfoSubmit = e => {\n    e.preventDefault()\n\n    // Простая валидация данных\n    if (!respondentData.name.trim()) {\n      alert(\"Пожалуйста, укажите ваше имя\")\n      return\n    }\n\n    if (!respondentData.email.trim()) {\n      alert(\"Пожалуйста, укажите ваш email\")\n      return\n    }\n\n    if (!respondentData.consent) {\n      alert(\"Для прохождения опроса необходимо согласие на обработку данных\")\n      return\n    }\n\n    // Если все данные заполнены, начинаем опрос\n    setUserInfoSubmitted(true)\n  }\n\n  const nextQuestion = () => {\n    const currentQuestion = survey.questions[currentQuestionIndex]\n\n    // Проверяем, дан ли ответ на обязательный вопрос\n    if (currentQuestion.required) {\n      const answer = answers[currentQuestion.id]\n      if (\n        answer === null ||\n        answer === undefined ||\n        (Array.isArray(answer) && answer.length === 0) ||\n        (typeof answer === \"string\" && answer.trim() === \"\")\n      ) {\n        alert(`Пожалуйста, ответьте на вопрос: \"${currentQuestion.text}\"`)\n        return\n      }\n    }\n\n    if (currentQuestionIndex < survey.questions.length - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1)\n      window.scrollTo(0, 0)\n    }\n  }\n\n  const prevQuestion = () => {\n    if (currentQuestionIndex > 0) {\n      setCurrentQuestionIndex(currentQuestionIndex - 1)\n      window.scrollTo(0, 0)\n    }\n  }\n\n  const validateForm = () => {\n    // Проверяем, есть ли ответы на все обязательные вопросы\n    const unansweredRequired = survey.questions\n      .filter(q => q.required)\n      .some(q => {\n        const answer = answers[q.id]\n        return (\n          answer === null ||\n          answer === undefined ||\n          (Array.isArray(answer) && answer.length === 0) ||\n          (typeof answer === \"string\" && answer.trim() === \"\")\n        )\n      })\n\n    if (unansweredRequired) {\n      alert(\"Пожалуйста, ответьте на все обязательные вопросы.\")\n      return false\n    }\n\n    return true\n  }\n\n  const submitSurvey = async () => {\n    if (!validateForm()) return\n\n    try {\n      setSubmitting(true)\n\n      const surveyResponse = {\n        surveyId: survey.id,\n        respondent: {\n          name: respondentData.name,\n          email: respondentData.email,\n          consent: respondentData.consent,\n        },\n        answers: Object.entries(answers).map(([questionId, value]) => ({\n          questionId: parseInt(questionId),\n          answer: value,\n        })),\n      }\n\n      console.log(\"Отправка ответов:\", surveyResponse)\n      await surveyService.submitSurveyResponse(surveyResponse)\n\n      setSubmitted(true)\n      window.scrollTo(0, 0)\n    } catch (err) {\n      console.error(\"Ошибка при отправке ответов:\", err)\n      alert(\n        \"Произошла ошибка при отправке ответов. Пожалуйста, попробуйте еще раз.\"\n      )\n    } finally {\n      setSubmitting(false)\n    }\n  }\n\n  const renderQuestionContent = question => {\n    switch (question.type) {\n      case \"SINGLE_CHOICE\":\n        return (\n          <div className=\"question-options\">\n            {question.options.map((option, index) => (\n              <label key={index} className=\"option-label\">\n                <input\n                  type=\"radio\"\n                  name={`question_${question.id}`}\n                  value={option}\n                  checked={answers[question.id] === option}\n                  onChange={() => handleAnswerChange(question.id, option)}\n                />\n                <span>{option}</span>\n              </label>\n            ))}\n          </div>\n        )\n\n      case \"MULTIPLE_CHOICE\":\n        return (\n          <div className=\"question-options\">\n            {question.options.map((option, index) => (\n              <label key={index} className=\"option-label\">\n                <input\n                  type=\"checkbox\"\n                  name={`question_${question.id}_${index}`}\n                  value={option}\n                  checked={(answers[question.id] || []).includes(option)}\n                  onChange={() => handleAnswerChange(question.id, option)}\n                />\n                <span>{option}</span>\n              </label>\n            ))}\n          </div>\n        )\n\n      case \"TEXT\":\n        return (\n          <div className=\"question-text\">\n            <textarea\n              className=\"text-answer\"\n              value={answers[question.id] || \"\"}\n              onChange={e => handleAnswerChange(question.id, e.target.value)}\n              placeholder=\"Введите ваш ответ здесь...\"\n              rows={5}\n            />\n          </div>\n        )\n\n      case \"RATING\":\n        return (\n          <div className=\"rating-container\">\n            {[1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map(rating => (\n              <button\n                key={rating}\n                className={`rating-button ${\n                  answers[question.id] === rating ? \"selected\" : \"\"\n                }`}\n                onClick={() => handleAnswerChange(question.id, rating)}\n              >\n                {rating}\n              </button>\n            ))}\n            <div className=\"rating-labels\">\n              <span>Очень плохо</span>\n              <span>Отлично</span>\n            </div>\n          </div>\n        )\n\n      default:\n        return <p>Неподдерживаемый тип вопроса.</p>\n    }\n  }\n\n  const renderUserInfoForm = () => {\n    return (\n      <div className=\"user-info-form\">\n        <h2>Прежде чем начать опрос</h2>\n        <p className=\"form-note\">\n          Пожалуйста, представьтесь, чтобы мы могли учесть ваше мнение\n        </p>\n\n        <form onSubmit={handleUserInfoSubmit}>\n          <div className=\"form-group\">\n            <label htmlFor=\"name\">\n              Ваше имя: <span className=\"required-mark\">*</span>\n            </label>\n            <input\n              type=\"text\"\n              id=\"name\"\n              name=\"name\"\n              value={respondentData.name}\n              onChange={handleRespondentDataChange}\n              placeholder=\"Иванов Иван\"\n              required\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"email\">\n              Email: <span className=\"required-mark\">*</span>\n            </label>\n            <input\n              type=\"email\"\n              id=\"email\"\n              name=\"email\"\n              value={respondentData.email}\n              onChange={handleRespondentDataChange}\n              placeholder=\"example@mail.ru\"\n              required\n            />\n          </div>\n\n          <div className=\"form-group checkbox-group\">\n            <input\n              type=\"checkbox\"\n              id=\"consent\"\n              name=\"consent\"\n              checked={respondentData.consent}\n              onChange={handleRespondentDataChange}\n              required\n            />\n            <label htmlFor=\"consent\">\n              Я даю согласие на обработку моих персональных данных{\" \"}\n              <span className=\"required-mark\">*</span>\n            </label>\n          </div>\n\n          <div className=\"form-actions\">\n            <button type=\"submit\" className=\"primary-button\">\n              Начать опрос\n            </button>\n          </div>\n        </form>\n      </div>\n    )\n  }\n\n  if (loading) {\n    return (\n      <div className=\"survey-container\">\n        <div className=\"loading-indicator\">Загрузка опросника...</div>\n      </div>\n    )\n  }\n\n  if (error) {\n    return (\n      <div className=\"survey-container\">\n        <div className=\"error-message\">\n          <h2>Ошибка</h2>\n          <p>{error}</p>\n          <button className=\"back-button\" onClick={() => navigate(\"/\")}>\n            Вернуться на главную\n          </button>\n        </div>\n      </div>\n    )\n  }\n\n  if (!survey) {\n    return (\n      <div className=\"survey-container\">\n        <div className=\"error-message\">\n          <h2>Опросник не найден</h2>\n          <button className=\"back-button\" onClick={() => navigate(\"/\")}>\n            Вернуться на главную\n          </button>\n        </div>\n      </div>\n    )\n  }\n\n  if (submitted) {\n    return (\n      <div className=\"survey-container\">\n        <div className=\"success-message\">\n          <div className=\"success-icon\">✓</div>\n          <h2>Спасибо за участие в опросе!</h2>\n          <p>Ваши ответы помогут нам улучшить наш сервис.</p>\n          <button className=\"primary-button\" onClick={() => navigate(\"/\")}>\n            На главную\n          </button>\n        </div>\n      </div>\n    )\n  }\n\n  // Если пользователь еще не ввел информацию о себе и это не предпросмотр, показываем форму\n  if (!userInfoSubmitted && !isPreview) {\n    return (\n      <div className=\"survey-container\">\n        <header className=\"survey-header\">\n          <h1>{survey.title}</h1>\n          {survey.description && (\n            <p className=\"survey-description\">{survey.description}</p>\n          )}\n        </header>\n\n        <main className=\"survey-content\">{renderUserInfoForm()}</main>\n      </div>\n    )\n  }\n\n  const currentQuestion = survey.questions[currentQuestionIndex]\n  const isLastQuestion = currentQuestionIndex === survey.questions.length - 1\n\n  return (\n    <div className=\"survey-container\">\n      {isPreview && (\n        <div className=\"preview-notification\">\n          Вы просматриваете опрос в режиме предпросмотра\n          <button\n            className=\"back-to-dashboard\"\n            onClick={() => navigate(\"/dashboard\")}\n          >\n            Вернуться в панель управления\n          </button>\n        </div>\n      )}\n\n      <header className=\"survey-header\">\n        <h1>{survey.title}</h1>\n        {survey.description && (\n          <p className=\"survey-description\">{survey.description}</p>\n        )}\n      </header>\n\n      <main className=\"survey-content\">\n        <div className=\"progress-bar\">\n          <div\n            className=\"progress-fill\"\n            style={{\n              width: `${\n                ((currentQuestionIndex + 1) / survey.questions.length) * 100\n              }%`,\n            }}\n          ></div>\n        </div>\n        <div className=\"progress-text\">\n          Вопрос {currentQuestionIndex + 1} из {survey.questions.length}\n        </div>\n\n        <div className=\"question-card\">\n          <h2 className=\"question-text\">\n            {currentQuestion.text}\n            {currentQuestion.required && (\n              <span className=\"required-mark\">*</span>\n            )}\n          </h2>\n\n          {renderQuestionContent(currentQuestion)}\n        </div>\n\n        <div className=\"navigation-buttons\">\n          {currentQuestionIndex > 0 && (\n            <button className=\"secondary-button\" onClick={prevQuestion}>\n              Назад\n            </button>\n          )}\n\n          {!isLastQuestion ? (\n            <button className=\"primary-button\" onClick={nextQuestion}>\n              Далее\n            </button>\n          ) : (\n            <>\n              {isPreview ? (\n                <button\n                  className=\"primary-button\"\n                  onClick={() => navigate(\"/dashboard\")}\n                >\n                  Завершить предпросмотр\n                </button>\n              ) : (\n                <button\n                  className=\"primary-button\"\n                  onClick={submitSurvey}\n                  disabled={submitting}\n                >\n                  {submitting ? (\n                    <>\n                      <span className=\"loading-spinner\"></span>\n                      Отправка...\n                    </>\n                  ) : (\n                    \"Завершить опрос\"\n                  )}\n                </button>\n              )}\n            </>\n          )}\n        </div>\n      </main>\n    </div>\n  )\n}\n\nexport default SurveyPage\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}