{"ast":null,"code":"var _jsxFileName = \"/Users/shirokiy/Desktop/Repositories/\\u0414\\u0438\\u043F\\u043B\\u043E\\u043C\\u044B/ClientExp/client_exp-frontend/src/pages/Dashboard/ClientSegmentsPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useMemo } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Sidebar from \"../../components/common/Sidebar\";\nimport { authService } from \"../../api/auth\";\nimport { clientSegmentsService } from \"../../api/client-segments\";\nimport \"./DashboardStyles.css\";\n\n// Вспомогательные функции форматирования данных\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getAgeGroupLabel = ageGroup => {\n  const groups = {\n    AGE_18_24: \"18-24 года\",\n    AGE_25_34: \"25-34 года\",\n    AGE_35_44: \"35-44 года\",\n    AGE_45_54: \"45-54 года\",\n    AGE_55_PLUS: \"55+ лет\"\n  };\n  return groups[ageGroup] || ageGroup || \"—\";\n};\nconst getGenderLabel = gender => {\n  const genders = {\n    MALE: \"Мужской\",\n    FEMALE: \"Женский\",\n    OTHER: \"Другой\"\n  };\n  return genders[gender] || gender || \"—\";\n};\nconst formatDate = dateString => {\n  if (!dateString) return \"—\";\n  try {\n    const date = new Date(dateString);\n    return date.toLocaleDateString(\"ru-RU\");\n  } catch (e) {\n    return dateString;\n  }\n};\n\n// Функция для преобразования текстового ответа о возрасте в группу\nconst mapAgeAnswerToGroup = answer => {\n  if (!answer) return null;\n\n  // Предполагаем различные форматы ответов и преобразуем их в стандартные группы\n  answer = answer.toLowerCase().trim();\n\n  // Прямое соответствие для стандартных форматов возрастных групп\n  const directMatches = {\n    \"18-24 года\": \"AGE_18_24\",\n    \"18-24\": \"AGE_18_24\",\n    \"25-34 года\": \"AGE_25_34\",\n    \"25-34\": \"AGE_25_34\",\n    \"35-44 года\": \"AGE_35_44\",\n    \"35-44\": \"AGE_35_44\",\n    \"45-54 года\": \"AGE_45_54\",\n    \"45-54\": \"AGE_45_54\",\n    \"55 лет и старше\": \"AGE_55_PLUS\",\n    \"55+\": \"AGE_55_PLUS\",\n    \"старше 55\": \"AGE_55_PLUS\"\n  };\n\n  // Проверяем на точное соответствие\n  if (directMatches[answer]) {\n    return directMatches[answer];\n  }\n\n  // Если точного соответствия нет, используем логику с includes\n  if (answer.includes(\"18-24\") || answer.includes(\"лет\") && (answer.includes(\"18\") || answer.includes(\"19\") || answer.includes(\"20\") || answer.includes(\"21\") || answer.includes(\"22\") || answer.includes(\"23\") || answer.includes(\"24\"))) {\n    return \"AGE_18_24\";\n  } else if (answer.includes(\"25-34\") || answer.includes(\"лет\") && (answer.includes(\"25\") || answer.includes(\"26\") || answer.includes(\"27\") || answer.includes(\"28\") || answer.includes(\"29\") || answer.includes(\"30\") || answer.includes(\"31\") || answer.includes(\"32\") || answer.includes(\"33\") || answer.includes(\"34\"))) {\n    return \"AGE_25_34\";\n  } else if (answer.includes(\"35-44\") || answer.includes(\"лет\") && (answer.includes(\"35\") || answer.includes(\"36\") || answer.includes(\"37\") || answer.includes(\"38\") || answer.includes(\"39\") || answer.includes(\"40\") || answer.includes(\"41\") || answer.includes(\"42\") || answer.includes(\"43\") || answer.includes(\"44\"))) {\n    return \"AGE_35_44\";\n  } else if (answer.includes(\"45-54\") || answer.includes(\"лет\") && (answer.includes(\"45\") || answer.includes(\"46\") || answer.includes(\"47\") || answer.includes(\"48\") || answer.includes(\"49\") || answer.includes(\"50\") || answer.includes(\"51\") || answer.includes(\"52\") || answer.includes(\"53\") || answer.includes(\"54\"))) {\n    return \"AGE_45_54\";\n  } else if (answer.includes(\"55+\") || answer.includes(\"старше 55\") || answer.includes(\"лет\") && parseInt(answer) >= 55) {\n    return \"AGE_55_PLUS\";\n  }\n\n  // Пытаемся извлечь числовое значение из ответа\n  const numMatch = answer.match(/\\d+/);\n  if (numMatch) {\n    const age = parseInt(numMatch[0]);\n    if (age >= 18 && age <= 24) return \"AGE_18_24\";\n    if (age >= 25 && age <= 34) return \"AGE_25_34\";\n    if (age >= 35 && age <= 44) return \"AGE_35_44\";\n    if (age >= 45 && age <= 54) return \"AGE_45_54\";\n    if (age >= 55) return \"AGE_55_PLUS\";\n  }\n  return null;\n};\n\n// Функция для преобразования текстового ответа о поле в стандартный формат\nconst mapGenderAnswer = answer => {\n  if (!answer) return null;\n  answer = answer.toLowerCase();\n  if (answer.includes(\"муж\") || answer === \"м\" || answer === \"m\" || answer.includes(\"male\") || answer.includes(\"мужской\")) {\n    return \"MALE\";\n  } else if (answer.includes(\"жен\") || answer === \"ж\" || answer === \"f\" || answer.includes(\"female\") || answer.includes(\"женский\")) {\n    return \"FEMALE\";\n  } else {\n    return \"OTHER\";\n  }\n};\nconst ClientSegmentsPage = () => {\n  _s();\n  const [clients, setClients] = useState([]);\n  const [filteredClients, setFilteredClients] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [currentUser, setCurrentUser] = useState(null);\n\n  // Состояние для фильтров\n  const [filters, setFilters] = useState({\n    ageGroup: \"ALL\",\n    gender: \"ALL\",\n    profession: \"\"\n  });\n\n  // Идентификаторы вопросов для возраста, пола и профессии\n  // Может потребоваться настройка в зависимости от вашей базы данных\n  const AGE_QUESTION_ID = 1; // ID вопроса о возрасте\n  const GENDER_QUESTION_ID = 2; // ID вопроса о поле\n  const PROFESSION_QUESTION_ID = 3; // ID вопроса о профессии\n\n  // Загружаем опции для фильтров\n  const ageGroups = [{\n    value: \"ALL\",\n    label: \"Все возрасты\"\n  }, ...clientSegmentsService.getAgeGroups()];\n  const genders = [{\n    value: \"ALL\",\n    label: \"Любой пол\"\n  }, ...clientSegmentsService.getGenders()];\n  const navigate = useNavigate();\n  useEffect(() => {\n    const user = authService.getCurrentUser();\n    if (!user || user.role !== \"ADMIN\" && user.role !== \"MANAGER\") {\n      navigate(\"/login\");\n      return;\n    }\n    setCurrentUser(user);\n    fetchClients();\n  }, [navigate]);\n\n  // Обрабатываем клиентов, извлекая информацию из их ответов\n  const processedClients = useMemo(() => {\n    return clients.map(client => {\n      const answers = client.answers || [];\n\n      // Извлекаем ответы на вопросы о возрасте, поле и профессии\n      let ageAnswer = null;\n      let genderAnswer = null;\n      let professionAnswer = null;\n      answers.forEach(answer => {\n        if (answer.questionId === AGE_QUESTION_ID) {\n          ageAnswer = answer.answer;\n        } else if (answer.questionId === GENDER_QUESTION_ID) {\n          genderAnswer = answer.answer;\n        } else if (answer.questionId === PROFESSION_QUESTION_ID) {\n          professionAnswer = answer.answer;\n        }\n      });\n\n      // Преобразуем текстовые ответы в значения для фильтров\n      const mappedAgeGroup = mapAgeAnswerToGroup(ageAnswer);\n      const mappedGender = mapGenderAnswer(genderAnswer);\n      return {\n        ...client,\n        // Переопределяем значения для фильтрации на основе ответов\n        ageFromAnswer: mappedAgeGroup,\n        genderFromAnswer: mappedGender,\n        professionFromAnswer: professionAnswer\n      };\n    });\n  }, [clients, AGE_QUESTION_ID, GENDER_QUESTION_ID, PROFESSION_QUESTION_ID]);\n\n  // При изменении фильтров обновляем отфильтрованный список\n  useEffect(() => {\n    if (processedClients.length > 0) {\n      // Фильтруем клиентов на основе ответов на вопросы\n      setFilteredClients(processedClients.filter(client => {\n        // Фильтр по возрастной группе на основе ответа на вопрос\n        if (filters.ageGroup && filters.ageGroup !== \"ALL\" && client.ageFromAnswer !== filters.ageGroup) {\n          return false;\n        }\n\n        // Фильтр по полу на основе ответа на вопрос\n        if (filters.gender && filters.gender !== \"ALL\" && client.genderFromAnswer !== filters.gender) {\n          return false;\n        }\n\n        // Фильтр по профессии на основе ответа на вопрос\n        if (filters.profession && client.professionFromAnswer) {\n          const clientProfession = client.professionFromAnswer.toLowerCase();\n          const searchProfession = filters.profession.toLowerCase();\n          if (!clientProfession.includes(searchProfession)) {\n            return false;\n          }\n        }\n        return true;\n      }));\n    }\n  }, [processedClients, filters]);\n  const fetchClients = async () => {\n    try {\n      setLoading(true);\n      const clientsData = await clientSegmentsService.getClientsWithAnswers();\n      setClients(clientsData);\n      setError(null);\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(\"Ошибка при загрузке клиентов: \" + (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || err.message));\n      console.error(\"Failed to fetch clients:\", err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleFilterChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFilters({\n      ...filters,\n      [name]: value\n    });\n  };\n  const clearFilters = () => {\n    setFilters({\n      ageGroup: \"ALL\",\n      gender: \"ALL\",\n      profession: \"\"\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      user: currentUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"segments-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"\\u0421\\u0435\\u0433\\u043C\\u0435\\u043D\\u0442\\u044B \\u043A\\u043B\\u0438\\u0435\\u043D\\u0442\\u043E\\u0432\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filters-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\u0424\\u0438\\u043B\\u044C\\u0442\\u0440\\u044B\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filters-grid\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"filter-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"ageGroup\",\n              children: \"\\u0412\\u043E\\u0437\\u0440\\u0430\\u0441\\u0442\\u043D\\u0430\\u044F \\u0433\\u0440\\u0443\\u043F\\u043F\\u0430:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"ageGroup\",\n              name: \"ageGroup\",\n              value: filters.ageGroup,\n              onChange: handleFilterChange,\n              children: ageGroups.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: option.value,\n                children: option.label\n              }, option.value, false, {\n                fileName: _jsxFileName,\n                lineNumber: 345,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"filter-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"gender\",\n              children: \"\\u041F\\u043E\\u043B:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 353,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"gender\",\n              name: \"gender\",\n              value: filters.gender,\n              onChange: handleFilterChange,\n              children: genders.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: option.value,\n                children: option.label\n              }, option.value, false, {\n                fileName: _jsxFileName,\n                lineNumber: 361,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"filter-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"profession\",\n              children: \"\\u041F\\u0440\\u043E\\u0444\\u0435\\u0441\\u0441\\u0438\\u044F:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 369,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"profession\",\n              name: \"profession\",\n              value: filters.profession,\n              onChange: handleFilterChange,\n              placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043F\\u0440\\u043E\\u0444\\u0435\\u0441\\u0441\\u0438\\u044E\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"clear-filters-btn\",\n            onClick: clearFilters,\n            children: \"\\u0421\\u0431\\u0440\\u043E\\u0441\\u0438\\u0442\\u044C \\u0444\\u0438\\u043B\\u044C\\u0442\\u0440\\u044B\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\",\n        children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430 \\u043A\\u043B\\u0438\\u0435\\u043D\\u0442\\u043E\\u0432...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"clients-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"results-summary\",\n          children: [\"\\u041D\\u0430\\u0439\\u0434\\u0435\\u043D\\u043E \\u043A\\u043B\\u0438\\u0435\\u043D\\u0442\\u043E\\u0432: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: filteredClients.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 33\n          }, this), \" \\u0438\\u0437\", \" \", processedClients.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 398,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"\\u0418\\u043C\\u044F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 399,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 400,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"\\u0422\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 401,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"\\u0412\\u043E\\u0437\\u0440\\u0430\\u0441\\u0442\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 402,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"\\u041F\\u043E\\u043B\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 403,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"\\u0420\\u0435\\u0433\\u0438\\u043E\\u043D\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 404,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"\\u0414\\u0430\\u0442\\u0430 \\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0430\\u0446\\u0438\\u0438\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 405,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 397,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: filteredClients.length === 0 ? /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                colSpan: \"9\",\n                className: \"no-data\",\n                children: \"\\u041A\\u043B\\u0438\\u0435\\u043D\\u0442\\u044B \\u043D\\u0435 \\u043D\\u0430\\u0439\\u0434\\u0435\\u043D\\u044B\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 411,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 410,\n              columnNumber: 19\n            }, this) : filteredClients.map(client => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: client.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 418,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: client.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 419,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: client.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 420,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: client.phone || \"—\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 421,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: getAgeGroupLabel(client.ageFromAnswer || client.ageGroup)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 422,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: getGenderLabel(client.genderFromAnswer || client.gender)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 427,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: client.region || \"—\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 433,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: formatDate(client.clientSince)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 434,\n                columnNumber: 23\n              }, this)]\n            }, client.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 417,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 324,\n    columnNumber: 5\n  }, this);\n};\n_s(ClientSegmentsPage, \"A9K3+cKMvtSA6pV1WtEMC2ieFG4=\", false, function () {\n  return [useNavigate];\n});\n_c = ClientSegmentsPage;\nexport default ClientSegmentsPage;\nvar _c;\n$RefreshReg$(_c, \"ClientSegmentsPage\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","useNavigate","Sidebar","authService","clientSegmentsService","jsxDEV","_jsxDEV","getAgeGroupLabel","ageGroup","groups","AGE_18_24","AGE_25_34","AGE_35_44","AGE_45_54","AGE_55_PLUS","getGenderLabel","gender","genders","MALE","FEMALE","OTHER","formatDate","dateString","date","Date","toLocaleDateString","e","mapAgeAnswerToGroup","answer","toLowerCase","trim","directMatches","includes","parseInt","numMatch","match","age","mapGenderAnswer","ClientSegmentsPage","_s","clients","setClients","filteredClients","setFilteredClients","loading","setLoading","error","setError","currentUser","setCurrentUser","filters","setFilters","profession","AGE_QUESTION_ID","GENDER_QUESTION_ID","PROFESSION_QUESTION_ID","ageGroups","value","label","getAgeGroups","getGenders","navigate","user","getCurrentUser","role","fetchClients","processedClients","map","client","answers","ageAnswer","genderAnswer","professionAnswer","forEach","questionId","mappedAgeGroup","mappedGender","ageFromAnswer","genderFromAnswer","professionFromAnswer","length","filter","clientProfession","searchProfession","clientsData","getClientsWithAnswers","err","_err$response","_err$response$data","response","data","message","console","handleFilterChange","name","target","clearFilters","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","onChange","option","type","placeholder","onClick","colSpan","email","phone","region","clientSince","_c","$RefreshReg$"],"sources":["/Users/shirokiy/Desktop/Repositories/Дипломы/ClientExp/client_exp-frontend/src/pages/Dashboard/ClientSegmentsPage.jsx"],"sourcesContent":["import React, { useState, useEffect, useMemo } from \"react\"\nimport { useNavigate } from \"react-router-dom\"\nimport Sidebar from \"../../components/common/Sidebar\"\nimport { authService } from \"../../api/auth\"\nimport { clientSegmentsService } from \"../../api/client-segments\"\nimport \"./DashboardStyles.css\"\n\n// Вспомогательные функции форматирования данных\nconst getAgeGroupLabel = ageGroup => {\n  const groups = {\n    AGE_18_24: \"18-24 года\",\n    AGE_25_34: \"25-34 года\",\n    AGE_35_44: \"35-44 года\",\n    AGE_45_54: \"45-54 года\",\n    AGE_55_PLUS: \"55+ лет\",\n  }\n  return groups[ageGroup] || ageGroup || \"—\"\n}\n\nconst getGenderLabel = gender => {\n  const genders = {\n    MALE: \"Мужской\",\n    FEMALE: \"Женский\",\n    OTHER: \"Другой\",\n  }\n  return genders[gender] || gender || \"—\"\n}\n\nconst formatDate = dateString => {\n  if (!dateString) return \"—\"\n\n  try {\n    const date = new Date(dateString)\n    return date.toLocaleDateString(\"ru-RU\")\n  } catch (e) {\n    return dateString\n  }\n}\n\n// Функция для преобразования текстового ответа о возрасте в группу\nconst mapAgeAnswerToGroup = answer => {\n  if (!answer) return null\n\n  // Предполагаем различные форматы ответов и преобразуем их в стандартные группы\n  answer = answer.toLowerCase().trim()\n\n  // Прямое соответствие для стандартных форматов возрастных групп\n  const directMatches = {\n    \"18-24 года\": \"AGE_18_24\",\n    \"18-24\": \"AGE_18_24\",\n    \"25-34 года\": \"AGE_25_34\",\n    \"25-34\": \"AGE_25_34\",\n    \"35-44 года\": \"AGE_35_44\",\n    \"35-44\": \"AGE_35_44\",\n    \"45-54 года\": \"AGE_45_54\",\n    \"45-54\": \"AGE_45_54\",\n    \"55 лет и старше\": \"AGE_55_PLUS\",\n    \"55+\": \"AGE_55_PLUS\",\n    \"старше 55\": \"AGE_55_PLUS\",\n  }\n\n  // Проверяем на точное соответствие\n  if (directMatches[answer]) {\n    return directMatches[answer]\n  }\n\n  // Если точного соответствия нет, используем логику с includes\n  if (\n    answer.includes(\"18-24\") ||\n    (answer.includes(\"лет\") &&\n      (answer.includes(\"18\") ||\n        answer.includes(\"19\") ||\n        answer.includes(\"20\") ||\n        answer.includes(\"21\") ||\n        answer.includes(\"22\") ||\n        answer.includes(\"23\") ||\n        answer.includes(\"24\")))\n  ) {\n    return \"AGE_18_24\"\n  } else if (\n    answer.includes(\"25-34\") ||\n    (answer.includes(\"лет\") &&\n      (answer.includes(\"25\") ||\n        answer.includes(\"26\") ||\n        answer.includes(\"27\") ||\n        answer.includes(\"28\") ||\n        answer.includes(\"29\") ||\n        answer.includes(\"30\") ||\n        answer.includes(\"31\") ||\n        answer.includes(\"32\") ||\n        answer.includes(\"33\") ||\n        answer.includes(\"34\")))\n  ) {\n    return \"AGE_25_34\"\n  } else if (\n    answer.includes(\"35-44\") ||\n    (answer.includes(\"лет\") &&\n      (answer.includes(\"35\") ||\n        answer.includes(\"36\") ||\n        answer.includes(\"37\") ||\n        answer.includes(\"38\") ||\n        answer.includes(\"39\") ||\n        answer.includes(\"40\") ||\n        answer.includes(\"41\") ||\n        answer.includes(\"42\") ||\n        answer.includes(\"43\") ||\n        answer.includes(\"44\")))\n  ) {\n    return \"AGE_35_44\"\n  } else if (\n    answer.includes(\"45-54\") ||\n    (answer.includes(\"лет\") &&\n      (answer.includes(\"45\") ||\n        answer.includes(\"46\") ||\n        answer.includes(\"47\") ||\n        answer.includes(\"48\") ||\n        answer.includes(\"49\") ||\n        answer.includes(\"50\") ||\n        answer.includes(\"51\") ||\n        answer.includes(\"52\") ||\n        answer.includes(\"53\") ||\n        answer.includes(\"54\")))\n  ) {\n    return \"AGE_45_54\"\n  } else if (\n    answer.includes(\"55+\") ||\n    answer.includes(\"старше 55\") ||\n    (answer.includes(\"лет\") && parseInt(answer) >= 55)\n  ) {\n    return \"AGE_55_PLUS\"\n  }\n\n  // Пытаемся извлечь числовое значение из ответа\n  const numMatch = answer.match(/\\d+/)\n  if (numMatch) {\n    const age = parseInt(numMatch[0])\n    if (age >= 18 && age <= 24) return \"AGE_18_24\"\n    if (age >= 25 && age <= 34) return \"AGE_25_34\"\n    if (age >= 35 && age <= 44) return \"AGE_35_44\"\n    if (age >= 45 && age <= 54) return \"AGE_45_54\"\n    if (age >= 55) return \"AGE_55_PLUS\"\n  }\n\n  return null\n}\n\n// Функция для преобразования текстового ответа о поле в стандартный формат\nconst mapGenderAnswer = answer => {\n  if (!answer) return null\n\n  answer = answer.toLowerCase()\n\n  if (\n    answer.includes(\"муж\") ||\n    answer === \"м\" ||\n    answer === \"m\" ||\n    answer.includes(\"male\") ||\n    answer.includes(\"мужской\")\n  ) {\n    return \"MALE\"\n  } else if (\n    answer.includes(\"жен\") ||\n    answer === \"ж\" ||\n    answer === \"f\" ||\n    answer.includes(\"female\") ||\n    answer.includes(\"женский\")\n  ) {\n    return \"FEMALE\"\n  } else {\n    return \"OTHER\"\n  }\n}\n\nconst ClientSegmentsPage = () => {\n  const [clients, setClients] = useState([])\n  const [filteredClients, setFilteredClients] = useState([])\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState(null)\n  const [currentUser, setCurrentUser] = useState(null)\n\n  // Состояние для фильтров\n  const [filters, setFilters] = useState({\n    ageGroup: \"ALL\",\n    gender: \"ALL\",\n    profession: \"\",\n  })\n\n  // Идентификаторы вопросов для возраста, пола и профессии\n  // Может потребоваться настройка в зависимости от вашей базы данных\n  const AGE_QUESTION_ID = 1 // ID вопроса о возрасте\n  const GENDER_QUESTION_ID = 2 // ID вопроса о поле\n  const PROFESSION_QUESTION_ID = 3 // ID вопроса о профессии\n\n  // Загружаем опции для фильтров\n  const ageGroups = [\n    { value: \"ALL\", label: \"Все возрасты\" },\n    ...clientSegmentsService.getAgeGroups(),\n  ]\n  const genders = [\n    { value: \"ALL\", label: \"Любой пол\" },\n    ...clientSegmentsService.getGenders(),\n  ]\n\n  const navigate = useNavigate()\n\n  useEffect(() => {\n    const user = authService.getCurrentUser()\n    if (!user || (user.role !== \"ADMIN\" && user.role !== \"MANAGER\")) {\n      navigate(\"/login\")\n      return\n    }\n    setCurrentUser(user)\n\n    fetchClients()\n  }, [navigate])\n\n  // Обрабатываем клиентов, извлекая информацию из их ответов\n  const processedClients = useMemo(() => {\n    return clients.map(client => {\n      const answers = client.answers || []\n\n      // Извлекаем ответы на вопросы о возрасте, поле и профессии\n      let ageAnswer = null\n      let genderAnswer = null\n      let professionAnswer = null\n\n      answers.forEach(answer => {\n        if (answer.questionId === AGE_QUESTION_ID) {\n          ageAnswer = answer.answer\n        } else if (answer.questionId === GENDER_QUESTION_ID) {\n          genderAnswer = answer.answer\n        } else if (answer.questionId === PROFESSION_QUESTION_ID) {\n          professionAnswer = answer.answer\n        }\n      })\n\n      // Преобразуем текстовые ответы в значения для фильтров\n      const mappedAgeGroup = mapAgeAnswerToGroup(ageAnswer)\n      const mappedGender = mapGenderAnswer(genderAnswer)\n\n      return {\n        ...client,\n        // Переопределяем значения для фильтрации на основе ответов\n        ageFromAnswer: mappedAgeGroup,\n        genderFromAnswer: mappedGender,\n        professionFromAnswer: professionAnswer,\n      }\n    })\n  }, [clients, AGE_QUESTION_ID, GENDER_QUESTION_ID, PROFESSION_QUESTION_ID])\n\n  // При изменении фильтров обновляем отфильтрованный список\n  useEffect(() => {\n    if (processedClients.length > 0) {\n      // Фильтруем клиентов на основе ответов на вопросы\n      setFilteredClients(\n        processedClients.filter(client => {\n          // Фильтр по возрастной группе на основе ответа на вопрос\n          if (\n            filters.ageGroup &&\n            filters.ageGroup !== \"ALL\" &&\n            client.ageFromAnswer !== filters.ageGroup\n          ) {\n            return false\n          }\n\n          // Фильтр по полу на основе ответа на вопрос\n          if (\n            filters.gender &&\n            filters.gender !== \"ALL\" &&\n            client.genderFromAnswer !== filters.gender\n          ) {\n            return false\n          }\n\n          // Фильтр по профессии на основе ответа на вопрос\n          if (filters.profession && client.professionFromAnswer) {\n            const clientProfession = client.professionFromAnswer.toLowerCase()\n            const searchProfession = filters.profession.toLowerCase()\n            if (!clientProfession.includes(searchProfession)) {\n              return false\n            }\n          }\n\n          return true\n        })\n      )\n    }\n  }, [processedClients, filters])\n\n  const fetchClients = async () => {\n    try {\n      setLoading(true)\n      const clientsData = await clientSegmentsService.getClientsWithAnswers()\n      setClients(clientsData)\n      setError(null)\n    } catch (err) {\n      setError(\n        \"Ошибка при загрузке клиентов: \" +\n          (err.response?.data?.message || err.message)\n      )\n      console.error(\"Failed to fetch clients:\", err)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const handleFilterChange = e => {\n    const { name, value } = e.target\n    setFilters({\n      ...filters,\n      [name]: value,\n    })\n  }\n\n  const clearFilters = () => {\n    setFilters({\n      ageGroup: \"ALL\",\n      gender: \"ALL\",\n      profession: \"\",\n    })\n  }\n\n  return (\n    <div className=\"dashboard-container\">\n      <Sidebar user={currentUser} />\n      <div className=\"dashboard-content\">\n        <div className=\"segments-header\">\n          <h1>Сегменты клиентов</h1>\n        </div>\n\n        {error && <div className=\"error-message\">{error}</div>}\n\n        <div className=\"filters-container\">\n          <h2>Фильтры</h2>\n          <div className=\"filters-grid\">\n            <div className=\"filter-group\">\n              <label htmlFor=\"ageGroup\">Возрастная группа:</label>\n              <select\n                id=\"ageGroup\"\n                name=\"ageGroup\"\n                value={filters.ageGroup}\n                onChange={handleFilterChange}\n              >\n                {ageGroups.map(option => (\n                  <option key={option.value} value={option.value}>\n                    {option.label}\n                  </option>\n                ))}\n              </select>\n            </div>\n\n            <div className=\"filter-group\">\n              <label htmlFor=\"gender\">Пол:</label>\n              <select\n                id=\"gender\"\n                name=\"gender\"\n                value={filters.gender}\n                onChange={handleFilterChange}\n              >\n                {genders.map(option => (\n                  <option key={option.value} value={option.value}>\n                    {option.label}\n                  </option>\n                ))}\n              </select>\n            </div>\n\n            <div className=\"filter-group\">\n              <label htmlFor=\"profession\">Профессия:</label>\n              <input\n                type=\"text\"\n                id=\"profession\"\n                name=\"profession\"\n                value={filters.profession}\n                onChange={handleFilterChange}\n                placeholder=\"Введите профессию\"\n              />\n            </div>\n\n            <button className=\"clear-filters-btn\" onClick={clearFilters}>\n              Сбросить фильтры\n            </button>\n          </div>\n        </div>\n\n        {loading ? (\n          <div className=\"loading-spinner\">Загрузка клиентов...</div>\n        ) : (\n          <div className=\"clients-list\">\n            <div className=\"results-summary\">\n              Найдено клиентов: <strong>{filteredClients.length}</strong> из{\" \"}\n              {processedClients.length}\n            </div>\n\n            <table>\n              <thead>\n                <tr>\n                  <th>ID</th>\n                  <th>Имя</th>\n                  <th>Email</th>\n                  <th>Телефон</th>\n                  <th>Возраст</th>\n                  <th>Пол</th>\n                  <th>Регион</th>\n                  <th>Дата регистрации</th>\n                </tr>\n              </thead>\n              <tbody>\n                {filteredClients.length === 0 ? (\n                  <tr>\n                    <td colSpan=\"9\" className=\"no-data\">\n                      Клиенты не найдены\n                    </td>\n                  </tr>\n                ) : (\n                  filteredClients.map(client => (\n                    <tr key={client.id}>\n                      <td>{client.id}</td>\n                      <td>{client.name}</td>\n                      <td>{client.email}</td>\n                      <td>{client.phone || \"—\"}</td>\n                      <td>\n                        {getAgeGroupLabel(\n                          client.ageFromAnswer || client.ageGroup\n                        )}\n                      </td>\n                      <td>\n                        {getGenderLabel(\n                          client.genderFromAnswer || client.gender\n                        )}\n                      </td>\n\n                      <td>{client.region || \"—\"}</td>\n                      <td>{formatDate(client.clientSince)}</td>\n                    </tr>\n                  ))\n                )}\n              </tbody>\n            </table>\n          </div>\n        )}\n\n        {/* Информация о вопросах\n        <div\n          className=\"info-block\"\n          style={{\n            marginTop: \"20px\",\n            padding: \"15px\",\n            backgroundColor: \"#f8f9fa\",\n            borderRadius: \"8px\",\n          }}\n        >\n          <h3>Информация о фильтрах</h3>\n          <p>\n            Фильтрация клиентов происходит на основе их ответов на следующие\n            вопросы:\n          </p>\n          <ul>\n            <li>\n              <strong>Возраст:</strong> Вопрос №{AGE_QUESTION_ID}\n            </li>\n            <li>\n              <strong>Пол:</strong> Вопрос №{GENDER_QUESTION_ID}\n            </li>\n            <li>\n              <strong>Профессия:</strong> Вопрос №{PROFESSION_QUESTION_ID}\n            </li>\n          </ul>\n        </div> */}\n      </div>\n    </div>\n  )\n}\n\nexport default ClientSegmentsPage\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}