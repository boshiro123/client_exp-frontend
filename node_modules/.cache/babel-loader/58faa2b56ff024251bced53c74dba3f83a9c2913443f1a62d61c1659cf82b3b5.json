{"ast":null,"code":"var _jsxFileName = \"/Users/shirokiy/Desktop/Repositories/\\u0414\\u0438\\u043F\\u043B\\u043E\\u043C\\u044B/ClientExp/client_exp-frontend/src/pages/Issues/IssuesPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Sidebar from \"../../components/common/Sidebar\";\nimport { authService } from \"../../api/auth\";\nimport { surveyService } from \"../../api/survey\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, ArcElement, Title, Tooltip, Legend } from \"chart.js\";\nimport { Pie, Bar } from \"react-chartjs-2\";\nimport \"./IssuesPage.css\";\n\n// Регистрируем компоненты Chart.js\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, ArcElement, Title, Tooltip, Legend);\nconst IssuesPage = () => {\n  _s();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [surveys, setSurveys] = useState([]);\n  const [selectedSurvey, setSelectedSurvey] = useState(null);\n  const [responses, setResponses] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [analytics, setAnalytics] = useState({\n    csat: null,\n    nps: null,\n    ces: null,\n    preferences: null\n  });\n  const navigate = useNavigate();\n  useEffect(() => {\n    const user = authService.getCurrentUser();\n    if (!user || user.role !== \"ADMIN\" && user.role !== \"MANAGER\") {\n      navigate(\"/login\");\n      return;\n    }\n    setCurrentUser(user);\n    loadSurveys();\n  }, [navigate]);\n  const loadSurveys = async () => {\n    try {\n      setLoading(true);\n      const surveysResponse = await surveyService.getAllSurveys();\n      let surveysData = [];\n      if (Array.isArray(surveysResponse)) {\n        surveysData = surveysResponse;\n      } else if (surveysResponse !== null && surveysResponse !== void 0 && surveysResponse.content) {\n        surveysData = surveysResponse.content;\n      }\n      setSurveys(surveysData);\n\n      // Автоматически выбираем первый опросник если есть\n      if (surveysData.length > 0) {\n        setSelectedSurvey(surveysData[0]);\n        await loadSurveyAnalytics(surveysData[0].id);\n      }\n      setLoading(false);\n    } catch (error) {\n      console.error(\"Ошибка при загрузке опросников:\", error);\n      setError(\"Не удалось загрузить данные опросников\");\n      setLoading(false);\n    }\n  };\n  const loadSurveyAnalytics = async surveyId => {\n    try {\n      setLoading(true);\n      const responsesData = await surveyService.getSurveyResponses(surveyId);\n      let responsesArray = [];\n      if (Array.isArray(responsesData)) {\n        responsesArray = responsesData;\n      } else if (responsesData !== null && responsesData !== void 0 && responsesData.content) {\n        responsesArray = responsesData.content;\n      }\n      setResponses(responsesArray);\n\n      // Получаем данные выбранного опросника для анализа вопросов\n      const survey = surveys.find(s => s.id === surveyId) || selectedSurvey;\n      if (survey && survey.questions) {\n        const analyticsData = calculateAnalytics(responsesArray, survey.questions);\n        setAnalytics(analyticsData);\n      }\n      setLoading(false);\n    } catch (error) {\n      console.error(\"Ошибка при загрузке аналитики:\", error);\n      setError(\"Не удалось загрузить аналитические данные\");\n      setLoading(false);\n    }\n  };\n  const handleSurveyChange = async surveyId => {\n    const survey = surveys.find(s => s.id === parseInt(surveyId));\n    setSelectedSurvey(survey);\n    if (survey) {\n      await loadSurveyAnalytics(survey.id);\n    }\n  };\n  const calculateAnalytics = (responses, questions) => {\n    if (!responses.length || !questions.length) {\n      return {\n        csat: null,\n        nps: null,\n        ces: null,\n        preferences: null\n      };\n    }\n\n    // Находим вопросы по их тексту (базовые вопросы из Dashboard)\n    const csatQuestion = questions.find(q => q.text.includes(\"удовлетворенность\") && q.text.includes(\"шкале от 1 до 5\"));\n    const npsQuestion = questions.find(q => q.text.includes(\"порекомендуете\") && q.text.includes(\"друзьям\"));\n    const cesQuestion = questions.find(q => q.text.includes(\"удобство\") && q.text.includes(\"веб сайт\"));\n    const preferencesQuestion = questions.find(q => q.text.includes(\"аспекты\") && q.text.includes(\"понравились\"));\n\n    // Вычисляем CSAT\n    let csat = null;\n    if (csatQuestion) {\n      csat = calculateCSAT(responses, csatQuestion.id);\n    }\n\n    // Вычисляем NPS\n    let nps = null;\n    if (npsQuestion) {\n      nps = calculateNPS(responses, npsQuestion.id);\n    }\n\n    // Вычисляем CES\n    let ces = null;\n    if (cesQuestion) {\n      ces = calculateCES(responses, cesQuestion.id);\n    }\n\n    // Анализируем предпочтения\n    let preferences = null;\n    if (preferencesQuestion) {\n      preferences = calculatePreferences(responses, preferencesQuestion.id);\n    }\n    return {\n      csat,\n      nps,\n      ces,\n      preferences\n    };\n  };\n  const calculateCSAT = (responses, questionId) => {\n    const answers = [];\n    responses.forEach(response => {\n      if (response.answers) {\n        const answer = response.answers.find(a => a.questionId === questionId);\n        if (answer && answer.answer) {\n          var _answer$answer$match;\n          // Извлекаем цифру из ответа (например, \"4 – Скорее доволен\" -> 4)\n          const rating = parseInt((_answer$answer$match = answer.answer.match(/^\\d+/)) === null || _answer$answer$match === void 0 ? void 0 : _answer$answer$match[0]);\n          if (rating >= 1 && rating <= 5) {\n            answers.push(rating);\n          }\n        }\n      }\n    });\n    if (answers.length === 0) return null;\n    const satisfied = answers.filter(rating => rating >= 4).length; // 4-5\n    const neutral = answers.filter(rating => rating === 3).length; // 3\n    const dissatisfied = answers.filter(rating => rating <= 2).length; // 1-2\n    const total = answers.length;\n    const csatScore = Math.round(satisfied / total * 100);\n    return {\n      score: csatScore,\n      satisfied,\n      neutral,\n      dissatisfied,\n      total\n    };\n  };\n  const calculateNPS = (responses, questionId) => {\n    const ratings = [];\n    responses.forEach(response => {\n      if (response.answers) {\n        const answer = response.answers.find(a => a.questionId === questionId);\n        if (answer && (answer.numericAnswer !== null || answer.answer)) {\n          const rating = answer.numericAnswer || parseInt(answer.answer);\n          if (rating >= 0 && rating <= 10) {\n            ratings.push(rating);\n          }\n        }\n      }\n    });\n    if (ratings.length === 0) return null;\n    const promoters = ratings.filter(rating => rating >= 9).length; // 9-10\n    const passives = ratings.filter(rating => rating >= 7 && rating <= 8).length; // 7-8\n    const detractors = ratings.filter(rating => rating <= 6).length; // 0-6\n    const total = ratings.length;\n    const npsScore = Math.round((promoters - detractors) / total * 100);\n    return {\n      score: npsScore,\n      promoters,\n      passives,\n      detractors,\n      total\n    };\n  };\n  const calculateCES = (responses, questionId) => {\n    const answers = [];\n    responses.forEach(response => {\n      if (response.answers) {\n        const answer = response.answers.find(a => a.questionId === questionId);\n        if (answer && answer.answer) {\n          var _answer$answer$match2;\n          // Извлекаем цифру из ответа (например, \"2 – Скорее легко\" -> 2)\n          const rating = parseInt((_answer$answer$match2 = answer.answer.match(/^\\d+/)) === null || _answer$answer$match2 === void 0 ? void 0 : _answer$answer$match2[0]);\n          if (rating >= 1 && rating <= 5) {\n            answers.push(rating);\n          }\n        }\n      }\n    });\n    if (answers.length === 0) return null;\n    const total = answers.length;\n    const sum = answers.reduce((acc, rating) => acc + rating, 0);\n    const cesScore = parseFloat((sum / total).toFixed(2));\n\n    // Распределение ответов для графика\n    const distribution = {\n      1: answers.filter(r => r === 1).length,\n      // Очень легко\n      2: answers.filter(r => r === 2).length,\n      // Скорее легко\n      3: answers.filter(r => r === 3).length,\n      // Нейтрально\n      4: answers.filter(r => r === 4).length,\n      // Скорее сложно\n      5: answers.filter(r => r === 5).length // Очень сложно\n    };\n    return {\n      score: cesScore,\n      distribution,\n      total\n    };\n  };\n  const calculatePreferences = (responses, questionId) => {\n    const preferenceCount = {\n      Качество: 0,\n      Скорость: 0,\n      Цена: 0,\n      Обслуживание: 0,\n      Другое: 0\n    };\n    responses.forEach(response => {\n      if (response.answers) {\n        const answer = response.answers.find(a => a.questionId === questionId);\n        if (answer && answer.answer) {\n          // Для множественного выбора ответ может быть массивом или строкой\n          let selectedOptions = [];\n          if (Array.isArray(answer.answer)) {\n            selectedOptions = answer.answer;\n          } else if (typeof answer.answer === \"string\") {\n            // Если ответ в виде строки, разделяем по запятым\n            selectedOptions = answer.answer.split(\",\").map(s => s.trim());\n          }\n          selectedOptions.forEach(option => {\n            if (preferenceCount.hasOwnProperty(option)) {\n              preferenceCount[option]++;\n            }\n          });\n        }\n      }\n    });\n    const total = responses.length;\n    return {\n      preferenceCount,\n      total\n    };\n  };\n\n  // Компонент для отображения CSAT\n  const CSATChart = ({\n    data\n  }) => {\n    if (!data) return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-data\",\n      children: \"\\u041D\\u0435\\u0442 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445 \\u0434\\u043B\\u044F CSAT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 23\n    }, this);\n    const chartData = {\n      labels: [\"Довольные\", \"Нейтралы\", \"Недовольные\"],\n      datasets: [{\n        data: [data.satisfied, data.neutral, data.dissatisfied],\n        backgroundColor: [\"#4CAF50\", \"#FFC107\", \"#F44336\"],\n        borderWidth: 2,\n        borderColor: \"#fff\"\n      }]\n    };\n    const options = {\n      responsive: true,\n      plugins: {\n        legend: {\n          position: \"bottom\"\n        },\n        title: {\n          display: true,\n          text: `CSAT: ${data.score}%`\n        }\n      }\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"metric-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"CSAT (Customer Satisfaction Score)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-container\",\n        children: /*#__PURE__*/_jsxDEV(Pie, {\n          data: chartData,\n          options: options\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"metric-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"metric-score\",\n          children: [\"\\u041F\\u043E\\u043A\\u0430\\u0437\\u0430\\u0442\\u0435\\u043B\\u044C CSAT: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [data.score, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 30\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"metric-breakdown\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"\\u0414\\u043E\\u0432\\u043E\\u043B\\u044C\\u043D\\u044B\\u0435 (4-5): \", data.satisfied]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"\\u041D\\u0435\\u0439\\u0442\\u0440\\u0430\\u043B\\u044B (3): \", data.neutral]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"\\u041D\\u0435\\u0434\\u043E\\u0432\\u043E\\u043B\\u044C\\u043D\\u044B\\u0435 (1-2): \", data.dissatisfied]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"\\u0412\\u0441\\u0435\\u0433\\u043E \\u043E\\u0442\\u0432\\u0435\\u0442\\u043E\\u0432: \", data.total]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Компонент для отображения NPS\n  const NPSChart = ({\n    data\n  }) => {\n    if (!data) return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-data\",\n      children: \"\\u041D\\u0435\\u0442 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445 \\u0434\\u043B\\u044F NPS\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 23\n    }, this);\n    const chartData = {\n      labels: [\"Промоутеры\", \"Нейтралы\", \"Детракторы\"],\n      datasets: [{\n        data: [data.promoters, data.passives, data.detractors],\n        backgroundColor: [\"#4CAF50\", \"#FFC107\", \"#F44336\"],\n        borderWidth: 2,\n        borderColor: \"#fff\"\n      }]\n    };\n    const options = {\n      responsive: true,\n      plugins: {\n        legend: {\n          position: \"bottom\"\n        },\n        title: {\n          display: true,\n          text: `NPS: ${data.score}`\n        }\n      }\n    };\n\n    // Определяем цвет NPS\n    let npsColor = \"#F44336\"; // красный\n    if (data.score >= 30 && data.score < 70) {\n      npsColor = \"#FFC107\"; // желтый\n    } else if (data.score >= 70) {\n      npsColor = \"#4CAF50\"; // зеленый\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"metric-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"NPS (Net Promoter Score)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-container\",\n        children: /*#__PURE__*/_jsxDEV(Pie, {\n          data: chartData,\n          options: options\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"metric-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"metric-score\",\n          style: {\n            color: npsColor\n          },\n          children: [\"\\u041F\\u043E\\u043A\\u0430\\u0437\\u0430\\u0442\\u0435\\u043B\\u044C NPS: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: data.score\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 404,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"metric-breakdown\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"\\u041F\\u0440\\u043E\\u043C\\u043E\\u0443\\u0442\\u0435\\u0440\\u044B (9-10): \", data.promoters]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 407,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"\\u041D\\u0435\\u0439\\u0442\\u0440\\u0430\\u043B\\u044B (7-8): \", data.passives]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"\\u0414\\u0435\\u0442\\u0440\\u0430\\u043A\\u0442\\u043E\\u0440\\u044B (0-6): \", data.detractors]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"\\u0412\\u0441\\u0435\\u0433\\u043E \\u043E\\u0442\\u0432\\u0435\\u0442\\u043E\\u0432: \", data.total]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"nps-interpretation\",\n          children: [data.score >= 0 && data.score < 30 && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"nps-bad\",\n            children: \"\\u0423\\u0434\\u043E\\u0432\\u043B\\u0435\\u0442\\u0432\\u043E\\u0440\\u0438\\u0442\\u0435\\u043B\\u044C\\u043D\\u044B\\u0439 \\u0440\\u0435\\u0437\\u0443\\u043B\\u044C\\u0442\\u0430\\u0442\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 414,\n            columnNumber: 15\n          }, this), data.score >= 30 && data.score < 70 && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"nps-good\",\n            children: \"\\u0425\\u043E\\u0440\\u043E\\u0448\\u0438\\u0439 \\u0440\\u0435\\u0437\\u0443\\u043B\\u044C\\u0442\\u0430\\u0442\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 417,\n            columnNumber: 15\n          }, this), data.score >= 70 && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"nps-excellent\",\n            children: \"\\u041E\\u0442\\u043B\\u0438\\u0447\\u043D\\u044B\\u0439 \\u0440\\u0435\\u0437\\u0443\\u043B\\u044C\\u0442\\u0430\\u0442\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 420,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Компонент для отображения CES\n  const CESChart = ({\n    data\n  }) => {\n    if (!data) return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-data\",\n      children: \"\\u041D\\u0435\\u0442 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445 \\u0434\\u043B\\u044F CES\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 23\n    }, this);\n    const chartData = {\n      labels: [\"Очень легко\", \"Скорее легко\", \"Нейтрально\", \"Скорее сложно\", \"Очень сложно\"],\n      datasets: [{\n        label: \"Количество ответов\",\n        data: [data.distribution[1], data.distribution[2], data.distribution[3], data.distribution[4], data.distribution[5]],\n        backgroundColor: [\"#4CAF50\", \"#8BC34A\", \"#FFC107\", \"#FF9800\", \"#F44336\"],\n        borderWidth: 1\n      }]\n    };\n    const options = {\n      responsive: true,\n      plugins: {\n        legend: {\n          display: false\n        },\n        title: {\n          display: true,\n          text: `CES: ${data.score}`\n        }\n      },\n      scales: {\n        y: {\n          beginAtZero: true,\n          ticks: {\n            stepSize: 1\n          }\n        }\n      }\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"metric-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"CES (Customer Effort Score)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-container\",\n        children: /*#__PURE__*/_jsxDEV(Bar, {\n          data: chartData,\n          options: options\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 487,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 486,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"metric-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"metric-score\",\n          children: [\"\\u041F\\u043E\\u043A\\u0430\\u0437\\u0430\\u0442\\u0435\\u043B\\u044C CES: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: data.score\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 491,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 490,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ces-interpretation\",\n          children: data.score <= 2 ? /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"ces-good\",\n            children: \"\\u041E\\u0442\\u043B\\u0438\\u0447\\u043D\\u044B\\u0439 \\u0440\\u0435\\u0437\\u0443\\u043B\\u044C\\u0442\\u0430\\u0442 - \\u043A\\u043B\\u0438\\u0435\\u043D\\u0442\\u0430\\u043C \\u043B\\u0435\\u0433\\u043A\\u043E \\u0432\\u0437\\u0430\\u0438\\u043C\\u043E\\u0434\\u0435\\u0439\\u0441\\u0442\\u0432\\u043E\\u0432\\u0430\\u0442\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 495,\n            columnNumber: 15\n          }, this) : data.score <= 3 ? /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"ces-medium\",\n            children: \"\\u0421\\u0440\\u0435\\u0434\\u043D\\u0438\\u0439 \\u0440\\u0435\\u0437\\u0443\\u043B\\u044C\\u0442\\u0430\\u0442 - \\u0435\\u0441\\u0442\\u044C \\u0432\\u043E\\u0437\\u043C\\u043E\\u0436\\u043D\\u043E\\u0441\\u0442\\u0438 \\u0434\\u043B\\u044F \\u0443\\u043B\\u0443\\u0447\\u0448\\u0435\\u043D\\u0438\\u044F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 499,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"ces-bad\",\n            children: \"\\u0422\\u0440\\u0435\\u0431\\u0443\\u0435\\u0442 \\u0432\\u043D\\u0438\\u043C\\u0430\\u043D\\u0438\\u044F - \\u043A\\u043B\\u0438\\u0435\\u043D\\u0442\\u0430\\u043C \\u0441\\u043B\\u043E\\u0436\\u043D\\u043E \\u0432\\u0437\\u0430\\u0438\\u043C\\u043E\\u0434\\u0435\\u0439\\u0441\\u0442\\u0432\\u043E\\u0432\\u0430\\u0442\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 503,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 493,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"\\u0412\\u0441\\u0435\\u0433\\u043E \\u043E\\u0442\\u0432\\u0435\\u0442\\u043E\\u0432: \", data.total]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 508,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 489,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 484,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Компонент для отображения предпочтений\n  const PreferencesChart = ({\n    data\n  }) => {\n    if (!data) return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-data\",\n      children: \"\\u041D\\u0435\\u0442 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445 \\u043E \\u043F\\u0440\\u0435\\u0434\\u043F\\u043E\\u0447\\u0442\\u0435\\u043D\\u0438\\u044F\\u0445\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 516,\n      columnNumber: 23\n    }, this);\n    const chartData = {\n      labels: Object.keys(data.preferenceCount),\n      datasets: [{\n        label: \"Количество выборов\",\n        data: Object.values(data.preferenceCount),\n        backgroundColor: [\"#2196F3\", \"#4CAF50\", \"#FFC107\", \"#FF9800\", \"#9C27B0\"],\n        borderWidth: 1\n      }]\n    };\n    const options = {\n      responsive: true,\n      plugins: {\n        legend: {\n          display: false\n        },\n        title: {\n          display: true,\n          text: \"Предпочтения клиентов\"\n        }\n      },\n      scales: {\n        y: {\n          beginAtZero: true,\n          ticks: {\n            stepSize: 1\n          }\n        }\n      }\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"metric-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\u0410\\u043D\\u0430\\u043B\\u0438\\u0437 \\u043F\\u0440\\u0435\\u0434\\u043F\\u043E\\u0447\\u0442\\u0435\\u043D\\u0438\\u0439 \\u043A\\u043B\\u0438\\u0435\\u043D\\u0442\\u043E\\u0432\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 559,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-container\",\n        children: /*#__PURE__*/_jsxDEV(Bar, {\n          data: chartData,\n          options: options\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 561,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 560,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"metric-details\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"preferences-breakdown\",\n          children: Object.entries(data.preferenceCount).map(([aspect, count]) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [aspect, \": \", count, \" (\", Math.round(count / data.total * 100), \"%)\"]\n          }, aspect, true, {\n            fileName: _jsxFileName,\n            lineNumber: 566,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 564,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 563,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 558,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      user: currentUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 578,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"issues-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"\\u0410\\u043D\\u0430\\u043B\\u0438\\u0442\\u0438\\u043A\\u0430 \\u043A\\u043B\\u0438\\u0435\\u043D\\u0442\\u0441\\u043A\\u043E\\u0433\\u043E \\u043E\\u043F\\u044B\\u0442\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 581,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"survey-selector\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"survey-select\",\n            children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u043E\\u043F\\u0440\\u043E\\u0441\\u043D\\u0438\\u043A:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 583,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"survey-select\",\n            value: (selectedSurvey === null || selectedSurvey === void 0 ? void 0 : selectedSurvey.id) || \"\",\n            onChange: e => handleSurveyChange(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"-- \\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u043E\\u043F\\u0440\\u043E\\u0441\\u043D\\u0438\\u043A --\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 589,\n              columnNumber: 15\n            }, this), surveys.map(survey => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: survey.id,\n              children: survey.title\n            }, survey.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 591,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 584,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 582,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 580,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-indicator\",\n        children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430 \\u0430\\u043D\\u0430\\u043B\\u0438\\u0442\\u0438\\u0447\\u0435\\u0441\\u043A\\u0438\\u0445 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 600,\n        columnNumber: 11\n      }, this) : error ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 604,\n        columnNumber: 11\n      }, this) : !selectedSurvey ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-data-message\",\n        children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u043E\\u043F\\u0440\\u043E\\u0441\\u043D\\u0438\\u043A \\u0434\\u043B\\u044F \\u043F\\u0440\\u043E\\u0441\\u043C\\u043E\\u0442\\u0440\\u0430 \\u0430\\u043D\\u0430\\u043B\\u0438\\u0442\\u0438\\u043A\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 606,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"analytics-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"analytics-grid\",\n          children: [/*#__PURE__*/_jsxDEV(CSATChart, {\n            data: analytics.csat\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 612,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(NPSChart, {\n            data: analytics.nps\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 613,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(CESChart, {\n            data: analytics.ces\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 614,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(PreferencesChart, {\n            data: analytics.preferences\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 615,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 611,\n          columnNumber: 13\n        }, this), responses.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"analytics-summary\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"\\u0421\\u0432\\u043E\\u0434\\u043A\\u0430 \\u043F\\u043E \\u043E\\u043F\\u0440\\u043E\\u0441\\u043D\\u0438\\u043A\\u0443 \\\"\", selectedSurvey.title, \"\\\"\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 620,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"summary-stats\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-label\",\n                children: \"\\u0412\\u0441\\u0435\\u0433\\u043E \\u043E\\u0442\\u0432\\u0435\\u0442\\u043E\\u0432:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 623,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-value\",\n                children: responses.length\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 624,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 622,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-label\",\n                children: \"\\u0421\\u0442\\u0430\\u0442\\u0443\\u0441 \\u043E\\u043F\\u0440\\u043E\\u0441\\u043D\\u0438\\u043A\\u0430:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 627,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-value\",\n                children: selectedSurvey.status\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 628,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 626,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 621,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 619,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 610,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 579,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 577,\n    columnNumber: 5\n  }, this);\n};\n_s(IssuesPage, \"cDlJHlbIEtSMaEf1ic8pkt9+kik=\", false, function () {\n  return [useNavigate];\n});\n_c = IssuesPage;\nexport default IssuesPage;\nvar _c;\n$RefreshReg$(_c, \"IssuesPage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","Sidebar","authService","surveyService","Chart","ChartJS","CategoryScale","LinearScale","BarElement","ArcElement","Title","Tooltip","Legend","Pie","Bar","jsxDEV","_jsxDEV","register","IssuesPage","_s","currentUser","setCurrentUser","surveys","setSurveys","selectedSurvey","setSelectedSurvey","responses","setResponses","loading","setLoading","error","setError","analytics","setAnalytics","csat","nps","ces","preferences","navigate","user","getCurrentUser","role","loadSurveys","surveysResponse","getAllSurveys","surveysData","Array","isArray","content","length","loadSurveyAnalytics","id","console","surveyId","responsesData","getSurveyResponses","responsesArray","survey","find","s","questions","analyticsData","calculateAnalytics","handleSurveyChange","parseInt","csatQuestion","q","text","includes","npsQuestion","cesQuestion","preferencesQuestion","calculateCSAT","calculateNPS","calculateCES","calculatePreferences","questionId","answers","forEach","response","answer","a","_answer$answer$match","rating","match","push","satisfied","filter","neutral","dissatisfied","total","csatScore","Math","round","score","ratings","numericAnswer","promoters","passives","detractors","npsScore","_answer$answer$match2","sum","reduce","acc","cesScore","parseFloat","toFixed","distribution","r","preferenceCount","Качество","Скорость","Цена","Обслуживание","Другое","selectedOptions","split","map","trim","option","hasOwnProperty","CSATChart","data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","chartData","labels","datasets","backgroundColor","borderWidth","borderColor","options","responsive","plugins","legend","position","title","display","NPSChart","npsColor","style","color","CESChart","label","scales","y","beginAtZero","ticks","stepSize","PreferencesChart","Object","keys","values","entries","aspect","count","htmlFor","value","onChange","e","target","status","_c","$RefreshReg$"],"sources":["/Users/shirokiy/Desktop/Repositories/Дипломы/ClientExp/client_exp-frontend/src/pages/Issues/IssuesPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport { useNavigate } from \"react-router-dom\"\nimport Sidebar from \"../../components/common/Sidebar\"\nimport { authService } from \"../../api/auth\"\nimport { surveyService } from \"../../api/survey\"\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  ArcElement,\n  Title,\n  Tooltip,\n  Legend,\n} from \"chart.js\"\nimport { Pie, Bar } from \"react-chartjs-2\"\nimport \"./IssuesPage.css\"\n\n// Регистрируем компоненты Chart.js\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  ArcElement,\n  Title,\n  Tooltip,\n  Legend\n)\n\nconst IssuesPage = () => {\n  const [currentUser, setCurrentUser] = useState(null)\n  const [surveys, setSurveys] = useState([])\n  const [selectedSurvey, setSelectedSurvey] = useState(null)\n  const [responses, setResponses] = useState([])\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState(null)\n  const [analytics, setAnalytics] = useState({\n    csat: null,\n    nps: null,\n    ces: null,\n    preferences: null,\n  })\n  const navigate = useNavigate()\n\n  useEffect(() => {\n    const user = authService.getCurrentUser()\n    if (!user || (user.role !== \"ADMIN\" && user.role !== \"MANAGER\")) {\n      navigate(\"/login\")\n      return\n    }\n    setCurrentUser(user)\n    loadSurveys()\n  }, [navigate])\n\n  const loadSurveys = async () => {\n    try {\n      setLoading(true)\n      const surveysResponse = await surveyService.getAllSurveys()\n\n      let surveysData = []\n      if (Array.isArray(surveysResponse)) {\n        surveysData = surveysResponse\n      } else if (surveysResponse?.content) {\n        surveysData = surveysResponse.content\n      }\n\n      setSurveys(surveysData)\n\n      // Автоматически выбираем первый опросник если есть\n      if (surveysData.length > 0) {\n        setSelectedSurvey(surveysData[0])\n        await loadSurveyAnalytics(surveysData[0].id)\n      }\n\n      setLoading(false)\n    } catch (error) {\n      console.error(\"Ошибка при загрузке опросников:\", error)\n      setError(\"Не удалось загрузить данные опросников\")\n      setLoading(false)\n    }\n  }\n\n  const loadSurveyAnalytics = async surveyId => {\n    try {\n      setLoading(true)\n      const responsesData = await surveyService.getSurveyResponses(surveyId)\n\n      let responsesArray = []\n      if (Array.isArray(responsesData)) {\n        responsesArray = responsesData\n      } else if (responsesData?.content) {\n        responsesArray = responsesData.content\n      }\n\n      setResponses(responsesArray)\n\n      // Получаем данные выбранного опросника для анализа вопросов\n      const survey = surveys.find(s => s.id === surveyId) || selectedSurvey\n      if (survey && survey.questions) {\n        const analyticsData = calculateAnalytics(\n          responsesArray,\n          survey.questions\n        )\n        setAnalytics(analyticsData)\n      }\n\n      setLoading(false)\n    } catch (error) {\n      console.error(\"Ошибка при загрузке аналитики:\", error)\n      setError(\"Не удалось загрузить аналитические данные\")\n      setLoading(false)\n    }\n  }\n\n  const handleSurveyChange = async surveyId => {\n    const survey = surveys.find(s => s.id === parseInt(surveyId))\n    setSelectedSurvey(survey)\n    if (survey) {\n      await loadSurveyAnalytics(survey.id)\n    }\n  }\n\n  const calculateAnalytics = (responses, questions) => {\n    if (!responses.length || !questions.length) {\n      return { csat: null, nps: null, ces: null, preferences: null }\n    }\n\n    // Находим вопросы по их тексту (базовые вопросы из Dashboard)\n    const csatQuestion = questions.find(\n      q =>\n        q.text.includes(\"удовлетворенность\") &&\n        q.text.includes(\"шкале от 1 до 5\")\n    )\n    const npsQuestion = questions.find(\n      q => q.text.includes(\"порекомендуете\") && q.text.includes(\"друзьям\")\n    )\n    const cesQuestion = questions.find(\n      q => q.text.includes(\"удобство\") && q.text.includes(\"веб сайт\")\n    )\n    const preferencesQuestion = questions.find(\n      q => q.text.includes(\"аспекты\") && q.text.includes(\"понравились\")\n    )\n\n    // Вычисляем CSAT\n    let csat = null\n    if (csatQuestion) {\n      csat = calculateCSAT(responses, csatQuestion.id)\n    }\n\n    // Вычисляем NPS\n    let nps = null\n    if (npsQuestion) {\n      nps = calculateNPS(responses, npsQuestion.id)\n    }\n\n    // Вычисляем CES\n    let ces = null\n    if (cesQuestion) {\n      ces = calculateCES(responses, cesQuestion.id)\n    }\n\n    // Анализируем предпочтения\n    let preferences = null\n    if (preferencesQuestion) {\n      preferences = calculatePreferences(responses, preferencesQuestion.id)\n    }\n\n    return { csat, nps, ces, preferences }\n  }\n\n  const calculateCSAT = (responses, questionId) => {\n    const answers = []\n\n    responses.forEach(response => {\n      if (response.answers) {\n        const answer = response.answers.find(a => a.questionId === questionId)\n        if (answer && answer.answer) {\n          // Извлекаем цифру из ответа (например, \"4 – Скорее доволен\" -> 4)\n          const rating = parseInt(answer.answer.match(/^\\d+/)?.[0])\n          if (rating >= 1 && rating <= 5) {\n            answers.push(rating)\n          }\n        }\n      }\n    })\n\n    if (answers.length === 0) return null\n\n    const satisfied = answers.filter(rating => rating >= 4).length // 4-5\n    const neutral = answers.filter(rating => rating === 3).length // 3\n    const dissatisfied = answers.filter(rating => rating <= 2).length // 1-2\n    const total = answers.length\n    const csatScore = Math.round((satisfied / total) * 100)\n\n    return {\n      score: csatScore,\n      satisfied,\n      neutral,\n      dissatisfied,\n      total,\n    }\n  }\n\n  const calculateNPS = (responses, questionId) => {\n    const ratings = []\n\n    responses.forEach(response => {\n      if (response.answers) {\n        const answer = response.answers.find(a => a.questionId === questionId)\n        if (answer && (answer.numericAnswer !== null || answer.answer)) {\n          const rating = answer.numericAnswer || parseInt(answer.answer)\n          if (rating >= 0 && rating <= 10) {\n            ratings.push(rating)\n          }\n        }\n      }\n    })\n\n    if (ratings.length === 0) return null\n\n    const promoters = ratings.filter(rating => rating >= 9).length // 9-10\n    const passives = ratings.filter(rating => rating >= 7 && rating <= 8).length // 7-8\n    const detractors = ratings.filter(rating => rating <= 6).length // 0-6\n    const total = ratings.length\n    const npsScore = Math.round(((promoters - detractors) / total) * 100)\n\n    return {\n      score: npsScore,\n      promoters,\n      passives,\n      detractors,\n      total,\n    }\n  }\n\n  const calculateCES = (responses, questionId) => {\n    const answers = []\n\n    responses.forEach(response => {\n      if (response.answers) {\n        const answer = response.answers.find(a => a.questionId === questionId)\n        if (answer && answer.answer) {\n          // Извлекаем цифру из ответа (например, \"2 – Скорее легко\" -> 2)\n          const rating = parseInt(answer.answer.match(/^\\d+/)?.[0])\n          if (rating >= 1 && rating <= 5) {\n            answers.push(rating)\n          }\n        }\n      }\n    })\n\n    if (answers.length === 0) return null\n\n    const total = answers.length\n    const sum = answers.reduce((acc, rating) => acc + rating, 0)\n    const cesScore = parseFloat((sum / total).toFixed(2))\n\n    // Распределение ответов для графика\n    const distribution = {\n      1: answers.filter(r => r === 1).length, // Очень легко\n      2: answers.filter(r => r === 2).length, // Скорее легко\n      3: answers.filter(r => r === 3).length, // Нейтрально\n      4: answers.filter(r => r === 4).length, // Скорее сложно\n      5: answers.filter(r => r === 5).length, // Очень сложно\n    }\n\n    return {\n      score: cesScore,\n      distribution,\n      total,\n    }\n  }\n\n  const calculatePreferences = (responses, questionId) => {\n    const preferenceCount = {\n      Качество: 0,\n      Скорость: 0,\n      Цена: 0,\n      Обслуживание: 0,\n      Другое: 0,\n    }\n\n    responses.forEach(response => {\n      if (response.answers) {\n        const answer = response.answers.find(a => a.questionId === questionId)\n        if (answer && answer.answer) {\n          // Для множественного выбора ответ может быть массивом или строкой\n          let selectedOptions = []\n          if (Array.isArray(answer.answer)) {\n            selectedOptions = answer.answer\n          } else if (typeof answer.answer === \"string\") {\n            // Если ответ в виде строки, разделяем по запятым\n            selectedOptions = answer.answer.split(\",\").map(s => s.trim())\n          }\n\n          selectedOptions.forEach(option => {\n            if (preferenceCount.hasOwnProperty(option)) {\n              preferenceCount[option]++\n            }\n          })\n        }\n      }\n    })\n\n    const total = responses.length\n    return { preferenceCount, total }\n  }\n\n  // Компонент для отображения CSAT\n  const CSATChart = ({ data }) => {\n    if (!data) return <div className=\"no-data\">Нет данных для CSAT</div>\n\n    const chartData = {\n      labels: [\"Довольные\", \"Нейтралы\", \"Недовольные\"],\n      datasets: [\n        {\n          data: [data.satisfied, data.neutral, data.dissatisfied],\n          backgroundColor: [\"#4CAF50\", \"#FFC107\", \"#F44336\"],\n          borderWidth: 2,\n          borderColor: \"#fff\",\n        },\n      ],\n    }\n\n    const options = {\n      responsive: true,\n      plugins: {\n        legend: {\n          position: \"bottom\",\n        },\n        title: {\n          display: true,\n          text: `CSAT: ${data.score}%`,\n        },\n      },\n    }\n\n    return (\n      <div className=\"metric-card\">\n        <h3>CSAT (Customer Satisfaction Score)</h3>\n        <div className=\"chart-container\">\n          <Pie data={chartData} options={options} />\n        </div>\n        <div className=\"metric-details\">\n          <div className=\"metric-score\">\n            Показатель CSAT: <strong>{data.score}%</strong>\n          </div>\n          <div className=\"metric-breakdown\">\n            <div>Довольные (4-5): {data.satisfied}</div>\n            <div>Нейтралы (3): {data.neutral}</div>\n            <div>Недовольные (1-2): {data.dissatisfied}</div>\n            <div>Всего ответов: {data.total}</div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  // Компонент для отображения NPS\n  const NPSChart = ({ data }) => {\n    if (!data) return <div className=\"no-data\">Нет данных для NPS</div>\n\n    const chartData = {\n      labels: [\"Промоутеры\", \"Нейтралы\", \"Детракторы\"],\n      datasets: [\n        {\n          data: [data.promoters, data.passives, data.detractors],\n          backgroundColor: [\"#4CAF50\", \"#FFC107\", \"#F44336\"],\n          borderWidth: 2,\n          borderColor: \"#fff\",\n        },\n      ],\n    }\n\n    const options = {\n      responsive: true,\n      plugins: {\n        legend: {\n          position: \"bottom\",\n        },\n        title: {\n          display: true,\n          text: `NPS: ${data.score}`,\n        },\n      },\n    }\n\n    // Определяем цвет NPS\n    let npsColor = \"#F44336\" // красный\n    if (data.score >= 30 && data.score < 70) {\n      npsColor = \"#FFC107\" // желтый\n    } else if (data.score >= 70) {\n      npsColor = \"#4CAF50\" // зеленый\n    }\n\n    return (\n      <div className=\"metric-card\">\n        <h3>NPS (Net Promoter Score)</h3>\n        <div className=\"chart-container\">\n          <Pie data={chartData} options={options} />\n        </div>\n        <div className=\"metric-details\">\n          <div className=\"metric-score\" style={{ color: npsColor }}>\n            Показатель NPS: <strong>{data.score}</strong>\n          </div>\n          <div className=\"metric-breakdown\">\n            <div>Промоутеры (9-10): {data.promoters}</div>\n            <div>Нейтралы (7-8): {data.passives}</div>\n            <div>Детракторы (0-6): {data.detractors}</div>\n            <div>Всего ответов: {data.total}</div>\n          </div>\n          <div className=\"nps-interpretation\">\n            {data.score >= 0 && data.score < 30 && (\n              <span className=\"nps-bad\">Удовлетворительный результат</span>\n            )}\n            {data.score >= 30 && data.score < 70 && (\n              <span className=\"nps-good\">Хороший результат</span>\n            )}\n            {data.score >= 70 && (\n              <span className=\"nps-excellent\">Отличный результат</span>\n            )}\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  // Компонент для отображения CES\n  const CESChart = ({ data }) => {\n    if (!data) return <div className=\"no-data\">Нет данных для CES</div>\n\n    const chartData = {\n      labels: [\n        \"Очень легко\",\n        \"Скорее легко\",\n        \"Нейтрально\",\n        \"Скорее сложно\",\n        \"Очень сложно\",\n      ],\n      datasets: [\n        {\n          label: \"Количество ответов\",\n          data: [\n            data.distribution[1],\n            data.distribution[2],\n            data.distribution[3],\n            data.distribution[4],\n            data.distribution[5],\n          ],\n          backgroundColor: [\n            \"#4CAF50\",\n            \"#8BC34A\",\n            \"#FFC107\",\n            \"#FF9800\",\n            \"#F44336\",\n          ],\n          borderWidth: 1,\n        },\n      ],\n    }\n\n    const options = {\n      responsive: true,\n      plugins: {\n        legend: {\n          display: false,\n        },\n        title: {\n          display: true,\n          text: `CES: ${data.score}`,\n        },\n      },\n      scales: {\n        y: {\n          beginAtZero: true,\n          ticks: {\n            stepSize: 1,\n          },\n        },\n      },\n    }\n\n    return (\n      <div className=\"metric-card\">\n        <h3>CES (Customer Effort Score)</h3>\n        <div className=\"chart-container\">\n          <Bar data={chartData} options={options} />\n        </div>\n        <div className=\"metric-details\">\n          <div className=\"metric-score\">\n            Показатель CES: <strong>{data.score}</strong>\n          </div>\n          <div className=\"ces-interpretation\">\n            {data.score <= 2 ? (\n              <span className=\"ces-good\">\n                Отличный результат - клиентам легко взаимодействовать\n              </span>\n            ) : data.score <= 3 ? (\n              <span className=\"ces-medium\">\n                Средний результат - есть возможности для улучшения\n              </span>\n            ) : (\n              <span className=\"ces-bad\">\n                Требует внимания - клиентам сложно взаимодействовать\n              </span>\n            )}\n          </div>\n          <div>Всего ответов: {data.total}</div>\n        </div>\n      </div>\n    )\n  }\n\n  // Компонент для отображения предпочтений\n  const PreferencesChart = ({ data }) => {\n    if (!data) return <div className=\"no-data\">Нет данных о предпочтениях</div>\n\n    const chartData = {\n      labels: Object.keys(data.preferenceCount),\n      datasets: [\n        {\n          label: \"Количество выборов\",\n          data: Object.values(data.preferenceCount),\n          backgroundColor: [\n            \"#2196F3\",\n            \"#4CAF50\",\n            \"#FFC107\",\n            \"#FF9800\",\n            \"#9C27B0\",\n          ],\n          borderWidth: 1,\n        },\n      ],\n    }\n\n    const options = {\n      responsive: true,\n      plugins: {\n        legend: {\n          display: false,\n        },\n        title: {\n          display: true,\n          text: \"Предпочтения клиентов\",\n        },\n      },\n      scales: {\n        y: {\n          beginAtZero: true,\n          ticks: {\n            stepSize: 1,\n          },\n        },\n      },\n    }\n\n    return (\n      <div className=\"metric-card\">\n        <h3>Анализ предпочтений клиентов</h3>\n        <div className=\"chart-container\">\n          <Bar data={chartData} options={options} />\n        </div>\n        <div className=\"metric-details\">\n          <div className=\"preferences-breakdown\">\n            {Object.entries(data.preferenceCount).map(([aspect, count]) => (\n              <div key={aspect}>\n                {aspect}: {count} ({Math.round((count / data.total) * 100)}%)\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"dashboard-container\">\n      <Sidebar user={currentUser} />\n      <div className=\"dashboard-content\">\n        <div className=\"issues-header\">\n          <h1>Аналитика клиентского опыта</h1>\n          <div className=\"survey-selector\">\n            <label htmlFor=\"survey-select\">Выберите опросник:</label>\n            <select\n              id=\"survey-select\"\n              value={selectedSurvey?.id || \"\"}\n              onChange={e => handleSurveyChange(e.target.value)}\n            >\n              <option value=\"\">-- Выберите опросник --</option>\n              {surveys.map(survey => (\n                <option key={survey.id} value={survey.id}>\n                  {survey.title}\n                </option>\n              ))}\n            </select>\n          </div>\n        </div>\n\n        {loading ? (\n          <div className=\"loading-indicator\">\n            Загрузка аналитических данных...\n          </div>\n        ) : error ? (\n          <div className=\"error-message\">{error}</div>\n        ) : !selectedSurvey ? (\n          <div className=\"no-data-message\">\n            Выберите опросник для просмотра аналитики\n          </div>\n        ) : (\n          <div className=\"analytics-container\">\n            <div className=\"analytics-grid\">\n              <CSATChart data={analytics.csat} />\n              <NPSChart data={analytics.nps} />\n              <CESChart data={analytics.ces} />\n              <PreferencesChart data={analytics.preferences} />\n            </div>\n\n            {responses.length > 0 && (\n              <div className=\"analytics-summary\">\n                <h3>Сводка по опроснику \"{selectedSurvey.title}\"</h3>\n                <div className=\"summary-stats\">\n                  <div className=\"stat-item\">\n                    <span className=\"stat-label\">Всего ответов:</span>\n                    <span className=\"stat-value\">{responses.length}</span>\n                  </div>\n                  <div className=\"stat-item\">\n                    <span className=\"stat-label\">Статус опросника:</span>\n                    <span className=\"stat-value\">{selectedSurvey.status}</span>\n                  </div>\n                </div>\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default IssuesPage\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}